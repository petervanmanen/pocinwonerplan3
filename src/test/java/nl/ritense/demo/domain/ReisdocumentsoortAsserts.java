package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReisdocumentsoortAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReisdocumentsoortAllPropertiesEquals(Reisdocumentsoort expected, Reisdocumentsoort actual) {
        assertReisdocumentsoortAutoGeneratedPropertiesEquals(expected, actual);
        assertReisdocumentsoortAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReisdocumentsoortAllUpdatablePropertiesEquals(Reisdocumentsoort expected, Reisdocumentsoort actual) {
        assertReisdocumentsoortUpdatableFieldsEquals(expected, actual);
        assertReisdocumentsoortUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReisdocumentsoortAutoGeneratedPropertiesEquals(Reisdocumentsoort expected, Reisdocumentsoort actual) {
        assertThat(expected)
            .as("Verify Reisdocumentsoort auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReisdocumentsoortUpdatableFieldsEquals(Reisdocumentsoort expected, Reisdocumentsoort actual) {
        assertThat(expected)
            .as("Verify Reisdocumentsoort relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidreisdocumentsoort())
                        .as("check datumbegingeldigheidreisdocumentsoort")
                        .isEqualTo(actual.getDatumbegingeldigheidreisdocumentsoort())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidreisdocumentsoort())
                        .as("check datumeindegeldigheidreisdocumentsoort")
                        .isEqualTo(actual.getDatumeindegeldigheidreisdocumentsoort())
            )
            .satisfies(e -> assertThat(e.getReisdocumentcode()).as("check reisdocumentcode").isEqualTo(actual.getReisdocumentcode()))
            .satisfies(
                e ->
                    assertThat(e.getReisdocumentomschrijving())
                        .as("check reisdocumentomschrijving")
                        .isEqualTo(actual.getReisdocumentomschrijving())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReisdocumentsoortUpdatableRelationshipsEquals(Reisdocumentsoort expected, Reisdocumentsoort actual) {}
}
