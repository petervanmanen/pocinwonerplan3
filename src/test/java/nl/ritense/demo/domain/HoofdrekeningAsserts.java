package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HoofdrekeningAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoofdrekeningAllPropertiesEquals(Hoofdrekening expected, Hoofdrekening actual) {
        assertHoofdrekeningAutoGeneratedPropertiesEquals(expected, actual);
        assertHoofdrekeningAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoofdrekeningAllUpdatablePropertiesEquals(Hoofdrekening expected, Hoofdrekening actual) {
        assertHoofdrekeningUpdatableFieldsEquals(expected, actual);
        assertHoofdrekeningUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoofdrekeningAutoGeneratedPropertiesEquals(Hoofdrekening expected, Hoofdrekening actual) {
        assertThat(expected)
            .as("Verify Hoofdrekening auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoofdrekeningUpdatableFieldsEquals(Hoofdrekening expected, Hoofdrekening actual) {
        assertThat(expected)
            .as("Verify Hoofdrekening relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getNummer()).as("check nummer").isEqualTo(actual.getNummer()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(
                e ->
                    assertThat(e.getPiahoofcategorieomschrijving())
                        .as("check piahoofcategorieomschrijving")
                        .isEqualTo(actual.getPiahoofcategorieomschrijving())
            )
            .satisfies(
                e -> assertThat(e.getPiahoofdcategoriecode()).as("check piahoofdcategoriecode").isEqualTo(actual.getPiahoofdcategoriecode())
            )
            .satisfies(e -> assertThat(e.getSubcode()).as("check subcode").isEqualTo(actual.getSubcode()))
            .satisfies(
                e -> assertThat(e.getSubcodeomschrijving()).as("check subcodeomschrijving").isEqualTo(actual.getSubcodeomschrijving())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHoofdrekeningUpdatableRelationshipsEquals(Hoofdrekening expected, Hoofdrekening actual) {
        assertThat(expected)
            .as("Verify Hoofdrekening relationships")
            .satisfies(e -> assertThat(e.getHeeftActivas()).as("check heeftActivas").isEqualTo(actual.getHeeftActivas()))
            .satisfies(e -> assertThat(e.getHeeftKostenplaats()).as("check heeftKostenplaats").isEqualTo(actual.getHeeftKostenplaats()))
            .satisfies(
                e ->
                    assertThat(e.getValtbinnenHoofdrekening2())
                        .as("check valtbinnenHoofdrekening2")
                        .isEqualTo(actual.getValtbinnenHoofdrekening2())
            )
            .satisfies(
                e ->
                    assertThat(e.getWordtgeschrevenopInkooporders())
                        .as("check wordtgeschrevenopInkooporders")
                        .isEqualTo(actual.getWordtgeschrevenopInkooporders())
            );
    }
}
