package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VastgoedcontractregelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVastgoedcontractregelAllPropertiesEquals(Vastgoedcontractregel expected, Vastgoedcontractregel actual) {
        assertVastgoedcontractregelAutoGeneratedPropertiesEquals(expected, actual);
        assertVastgoedcontractregelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVastgoedcontractregelAllUpdatablePropertiesEquals(
        Vastgoedcontractregel expected,
        Vastgoedcontractregel actual
    ) {
        assertVastgoedcontractregelUpdatableFieldsEquals(expected, actual);
        assertVastgoedcontractregelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVastgoedcontractregelAutoGeneratedPropertiesEquals(
        Vastgoedcontractregel expected,
        Vastgoedcontractregel actual
    ) {
        assertThat(expected)
            .as("Verify Vastgoedcontractregel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVastgoedcontractregelUpdatableFieldsEquals(Vastgoedcontractregel expected, Vastgoedcontractregel actual) {
        assertThat(expected)
            .as("Verify Vastgoedcontractregel relevant properties")
            .satisfies(e -> assertThat(e.getBedrag()).as("check bedrag").isEqualTo(actual.getBedrag()))
            .satisfies(e -> assertThat(e.getDatumeinde()).as("check datumeinde").isEqualTo(actual.getDatumeinde()))
            .satisfies(e -> assertThat(e.getDatumstart()).as("check datumstart").isEqualTo(actual.getDatumstart()))
            .satisfies(e -> assertThat(e.getFrequentie()).as("check frequentie").isEqualTo(actual.getFrequentie()))
            .satisfies(e -> assertThat(e.getIdentificatie()).as("check identificatie").isEqualTo(actual.getIdentificatie()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVastgoedcontractregelUpdatableRelationshipsEquals(
        Vastgoedcontractregel expected,
        Vastgoedcontractregel actual
    ) {}
}
