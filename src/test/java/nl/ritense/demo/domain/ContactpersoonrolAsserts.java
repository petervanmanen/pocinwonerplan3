package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ContactpersoonrolAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContactpersoonrolAllPropertiesEquals(Contactpersoonrol expected, Contactpersoonrol actual) {
        assertContactpersoonrolAutoGeneratedPropertiesEquals(expected, actual);
        assertContactpersoonrolAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContactpersoonrolAllUpdatablePropertiesEquals(Contactpersoonrol expected, Contactpersoonrol actual) {
        assertContactpersoonrolUpdatableFieldsEquals(expected, actual);
        assertContactpersoonrolUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContactpersoonrolAutoGeneratedPropertiesEquals(Contactpersoonrol expected, Contactpersoonrol actual) {
        assertThat(expected)
            .as("Verify Contactpersoonrol auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContactpersoonrolUpdatableFieldsEquals(Contactpersoonrol expected, Contactpersoonrol actual) {
        assertThat(expected)
            .as("Verify Contactpersoonrol relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getContactpersoonemailadres())
                        .as("check contactpersoonemailadres")
                        .isEqualTo(actual.getContactpersoonemailadres())
            )
            .satisfies(
                e -> assertThat(e.getContactpersoonfunctie()).as("check contactpersoonfunctie").isEqualTo(actual.getContactpersoonfunctie())
            )
            .satisfies(e -> assertThat(e.getContactpersoonnaam()).as("check contactpersoonnaam").isEqualTo(actual.getContactpersoonnaam()))
            .satisfies(
                e ->
                    assertThat(e.getContactpersoontelefoonnummer())
                        .as("check contactpersoontelefoonnummer")
                        .isEqualTo(actual.getContactpersoontelefoonnummer())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContactpersoonrolUpdatableRelationshipsEquals(Contactpersoonrol expected, Contactpersoonrol actual) {}
}
