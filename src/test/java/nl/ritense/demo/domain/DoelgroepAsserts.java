package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DoelgroepAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDoelgroepAllPropertiesEquals(Doelgroep expected, Doelgroep actual) {
        assertDoelgroepAutoGeneratedPropertiesEquals(expected, actual);
        assertDoelgroepAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDoelgroepAllUpdatablePropertiesEquals(Doelgroep expected, Doelgroep actual) {
        assertDoelgroepUpdatableFieldsEquals(expected, actual);
        assertDoelgroepUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDoelgroepAutoGeneratedPropertiesEquals(Doelgroep expected, Doelgroep actual) {
        assertThat(expected)
            .as("Verify Doelgroep auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDoelgroepUpdatableFieldsEquals(Doelgroep expected, Doelgroep actual) {
        assertThat(expected)
            .as("Verify Doelgroep relevant properties")
            .satisfies(e -> assertThat(e.getBranch()).as("check branch").isEqualTo(actual.getBranch()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getSegment()).as("check segment").isEqualTo(actual.getSegment()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDoelgroepUpdatableRelationshipsEquals(Doelgroep expected, Doelgroep actual) {
        assertThat(expected)
            .as("Verify Doelgroep relationships")
            .satisfies(
                e -> assertThat(e.getBestaatuitDoelgroep2()).as("check bestaatuitDoelgroep2").isEqualTo(actual.getBestaatuitDoelgroep2())
            )
            .satisfies(
                e ->
                    assertThat(e.getValtbinnenMuseumrelaties())
                        .as("check valtbinnenMuseumrelaties")
                        .isEqualTo(actual.getValtbinnenMuseumrelaties())
            );
    }
}
