package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class KandidaatAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKandidaatAllPropertiesEquals(Kandidaat expected, Kandidaat actual) {
        assertKandidaatAutoGeneratedPropertiesEquals(expected, actual);
        assertKandidaatAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKandidaatAllUpdatablePropertiesEquals(Kandidaat expected, Kandidaat actual) {
        assertKandidaatUpdatableFieldsEquals(expected, actual);
        assertKandidaatUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKandidaatAutoGeneratedPropertiesEquals(Kandidaat expected, Kandidaat actual) {
        assertThat(expected)
            .as("Verify Kandidaat auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKandidaatUpdatableFieldsEquals(Kandidaat expected, Kandidaat actual) {
        assertThat(expected)
            .as("Verify Kandidaat relevant properties")
            .satisfies(e -> assertThat(e.getDatumingestuurd()).as("check datumingestuurd").isEqualTo(actual.getDatumingestuurd()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKandidaatUpdatableRelationshipsEquals(Kandidaat expected, Kandidaat actual) {
        assertThat(expected)
            .as("Verify Kandidaat relationships")
            .satisfies(
                e -> assertThat(e.getBiedtaanLeverancier()).as("check biedtaanLeverancier").isEqualTo(actual.getBiedtaanLeverancier())
            );
    }
}
