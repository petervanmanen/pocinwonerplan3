package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TaalniveauAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaalniveauAllPropertiesEquals(Taalniveau expected, Taalniveau actual) {
        assertTaalniveauAutoGeneratedPropertiesEquals(expected, actual);
        assertTaalniveauAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaalniveauAllUpdatablePropertiesEquals(Taalniveau expected, Taalniveau actual) {
        assertTaalniveauUpdatableFieldsEquals(expected, actual);
        assertTaalniveauUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaalniveauAutoGeneratedPropertiesEquals(Taalniveau expected, Taalniveau actual) {
        assertThat(expected)
            .as("Verify Taalniveau auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaalniveauUpdatableFieldsEquals(Taalniveau expected, Taalniveau actual) {
        assertThat(expected)
            .as("Verify Taalniveau relevant properties")
            .satisfies(e -> assertThat(e.getMondeling()).as("check mondeling").isEqualTo(actual.getMondeling()))
            .satisfies(e -> assertThat(e.getSchriftelijk()).as("check schriftelijk").isEqualTo(actual.getSchriftelijk()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaalniveauUpdatableRelationshipsEquals(Taalniveau expected, Taalniveau actual) {
        assertThat(expected)
            .as("Verify Taalniveau relationships")
            .satisfies(
                e ->
                    assertThat(e.getHeefttaalniveauClients())
                        .as("check heefttaalniveauClients")
                        .isEqualTo(actual.getHeefttaalniveauClients())
            );
    }
}
