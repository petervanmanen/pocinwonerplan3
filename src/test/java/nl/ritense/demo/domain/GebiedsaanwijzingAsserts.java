package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GebiedsaanwijzingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGebiedsaanwijzingAllPropertiesEquals(Gebiedsaanwijzing expected, Gebiedsaanwijzing actual) {
        assertGebiedsaanwijzingAutoGeneratedPropertiesEquals(expected, actual);
        assertGebiedsaanwijzingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGebiedsaanwijzingAllUpdatablePropertiesEquals(Gebiedsaanwijzing expected, Gebiedsaanwijzing actual) {
        assertGebiedsaanwijzingUpdatableFieldsEquals(expected, actual);
        assertGebiedsaanwijzingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGebiedsaanwijzingAutoGeneratedPropertiesEquals(Gebiedsaanwijzing expected, Gebiedsaanwijzing actual) {
        assertThat(expected)
            .as("Verify Gebiedsaanwijzing auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGebiedsaanwijzingUpdatableFieldsEquals(Gebiedsaanwijzing expected, Gebiedsaanwijzing actual) {
        assertThat(expected)
            .as("Verify Gebiedsaanwijzing relevant properties")
            .satisfies(e -> assertThat(e.getGroep()).as("check groep").isEqualTo(actual.getGroep()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getNen3610id()).as("check nen3610id").isEqualTo(actual.getNen3610id()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGebiedsaanwijzingUpdatableRelationshipsEquals(Gebiedsaanwijzing expected, Gebiedsaanwijzing actual) {
        assertThat(expected)
            .as("Verify Gebiedsaanwijzing relationships")
            .satisfies(
                e -> assertThat(e.getVerwijstnaarLocaties()).as("check verwijstnaarLocaties").isEqualTo(actual.getVerwijstnaarLocaties())
            )
            .satisfies(
                e ->
                    assertThat(e.getBeschrijftgebiedsaanwijzingInstructieregels())
                        .as("check beschrijftgebiedsaanwijzingInstructieregels")
                        .isEqualTo(actual.getBeschrijftgebiedsaanwijzingInstructieregels())
            );
    }
}
