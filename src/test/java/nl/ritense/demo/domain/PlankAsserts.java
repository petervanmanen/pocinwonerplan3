package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PlankAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlankAllPropertiesEquals(Plank expected, Plank actual) {
        assertPlankAutoGeneratedPropertiesEquals(expected, actual);
        assertPlankAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlankAllUpdatablePropertiesEquals(Plank expected, Plank actual) {
        assertPlankUpdatableFieldsEquals(expected, actual);
        assertPlankUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlankAutoGeneratedPropertiesEquals(Plank expected, Plank actual) {
        assertThat(expected)
            .as("Verify Plank auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlankUpdatableFieldsEquals(Plank expected, Plank actual) {
        assertThat(expected)
            .as("Verify Plank relevant properties")
            .satisfies(e -> assertThat(e.getPlanknummer()).as("check planknummer").isEqualTo(actual.getPlanknummer()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPlankUpdatableRelationshipsEquals(Plank expected, Plank actual) {
        assertThat(expected)
            .as("Verify Plank relationships")
            .satisfies(e -> assertThat(e.getHeeftKast()).as("check heeftKast").isEqualTo(actual.getHeeftKast()));
    }
}
