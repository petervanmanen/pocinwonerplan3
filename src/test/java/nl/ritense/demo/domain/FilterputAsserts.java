package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FilterputAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFilterputAllPropertiesEquals(Filterput expected, Filterput actual) {
        assertFilterputAutoGeneratedPropertiesEquals(expected, actual);
        assertFilterputAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFilterputAllUpdatablePropertiesEquals(Filterput expected, Filterput actual) {
        assertFilterputUpdatableFieldsEquals(expected, actual);
        assertFilterputUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFilterputAutoGeneratedPropertiesEquals(Filterput expected, Filterput actual) {
        assertThat(expected)
            .as("Verify Filterput auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFilterputUpdatableFieldsEquals(Filterput expected, Filterput actual) {
        assertThat(expected)
            .as("Verify Filterput relevant properties")
            .satisfies(e -> assertThat(e.getDrain()).as("check drain").isEqualTo(actual.getDrain()))
            .satisfies(e -> assertThat(e.getRisicogebied()).as("check risicogebied").isEqualTo(actual.getRisicogebied()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFilterputUpdatableRelationshipsEquals(Filterput expected, Filterput actual) {}
}
