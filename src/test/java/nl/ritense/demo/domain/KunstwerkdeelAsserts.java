package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class KunstwerkdeelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKunstwerkdeelAllPropertiesEquals(Kunstwerkdeel expected, Kunstwerkdeel actual) {
        assertKunstwerkdeelAutoGeneratedPropertiesEquals(expected, actual);
        assertKunstwerkdeelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKunstwerkdeelAllUpdatablePropertiesEquals(Kunstwerkdeel expected, Kunstwerkdeel actual) {
        assertKunstwerkdeelUpdatableFieldsEquals(expected, actual);
        assertKunstwerkdeelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKunstwerkdeelAutoGeneratedPropertiesEquals(Kunstwerkdeel expected, Kunstwerkdeel actual) {
        assertThat(expected)
            .as("Verify Kunstwerkdeel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKunstwerkdeelUpdatableFieldsEquals(Kunstwerkdeel expected, Kunstwerkdeel actual) {
        assertThat(expected)
            .as("Verify Kunstwerkdeel relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidkunstwerkdeel())
                        .as("check datumbegingeldigheidkunstwerkdeel")
                        .isEqualTo(actual.getDatumbegingeldigheidkunstwerkdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidkunstwerkdeel())
                        .as("check datumeindegeldigheidkunstwerkdeel")
                        .isEqualTo(actual.getDatumeindegeldigheidkunstwerkdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getGeometriekunstwerkdeel())
                        .as("check geometriekunstwerkdeel")
                        .isEqualTo(actual.getGeometriekunstwerkdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getIdentificatiekunstwerkdeel())
                        .as("check identificatiekunstwerkdeel")
                        .isEqualTo(actual.getIdentificatiekunstwerkdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getLod0geometriekunstwerkdeel())
                        .as("check lod0geometriekunstwerkdeel")
                        .isEqualTo(actual.getLod0geometriekunstwerkdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getLod1geometriekunstwerkdeel())
                        .as("check lod1geometriekunstwerkdeel")
                        .isEqualTo(actual.getLod1geometriekunstwerkdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getLod2geometriekunstwerkdeel())
                        .as("check lod2geometriekunstwerkdeel")
                        .isEqualTo(actual.getLod2geometriekunstwerkdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getLod3geometriekunstwerkdeel())
                        .as("check lod3geometriekunstwerkdeel")
                        .isEqualTo(actual.getLod3geometriekunstwerkdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getRelatievehoogteliggingkunstwerkdeel())
                        .as("check relatievehoogteliggingkunstwerkdeel")
                        .isEqualTo(actual.getRelatievehoogteliggingkunstwerkdeel())
            )
            .satisfies(
                e -> assertThat(e.getStatuskunstwerkdeel()).as("check statuskunstwerkdeel").isEqualTo(actual.getStatuskunstwerkdeel())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKunstwerkdeelUpdatableRelationshipsEquals(Kunstwerkdeel expected, Kunstwerkdeel actual) {}
}
