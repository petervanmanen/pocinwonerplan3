package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VulgraadmetingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVulgraadmetingAllPropertiesEquals(Vulgraadmeting expected, Vulgraadmeting actual) {
        assertVulgraadmetingAutoGeneratedPropertiesEquals(expected, actual);
        assertVulgraadmetingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVulgraadmetingAllUpdatablePropertiesEquals(Vulgraadmeting expected, Vulgraadmeting actual) {
        assertVulgraadmetingUpdatableFieldsEquals(expected, actual);
        assertVulgraadmetingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVulgraadmetingAutoGeneratedPropertiesEquals(Vulgraadmeting expected, Vulgraadmeting actual) {
        assertThat(expected)
            .as("Verify Vulgraadmeting auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVulgraadmetingUpdatableFieldsEquals(Vulgraadmeting expected, Vulgraadmeting actual) {
        assertThat(expected)
            .as("Verify Vulgraadmeting relevant properties")
            .satisfies(e -> assertThat(e.getTijdstip()).as("check tijdstip").isEqualTo(actual.getTijdstip()))
            .satisfies(e -> assertThat(e.getVulgraad()).as("check vulgraad").isEqualTo(actual.getVulgraad()))
            .satisfies(e -> assertThat(e.getVullinggewicht()).as("check vullinggewicht").isEqualTo(actual.getVullinggewicht()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVulgraadmetingUpdatableRelationshipsEquals(Vulgraadmeting expected, Vulgraadmeting actual) {
        assertThat(expected)
            .as("Verify Vulgraadmeting relationships")
            .satisfies(e -> assertThat(e.getHeeftContainer()).as("check heeftContainer").isEqualTo(actual.getHeeftContainer()));
    }
}
