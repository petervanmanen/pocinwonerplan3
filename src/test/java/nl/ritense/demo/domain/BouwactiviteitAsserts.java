package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BouwactiviteitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBouwactiviteitAllPropertiesEquals(Bouwactiviteit expected, Bouwactiviteit actual) {
        assertBouwactiviteitAutoGeneratedPropertiesEquals(expected, actual);
        assertBouwactiviteitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBouwactiviteitAllUpdatablePropertiesEquals(Bouwactiviteit expected, Bouwactiviteit actual) {
        assertBouwactiviteitUpdatableFieldsEquals(expected, actual);
        assertBouwactiviteitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBouwactiviteitAutoGeneratedPropertiesEquals(Bouwactiviteit expected, Bouwactiviteit actual) {
        assertThat(expected)
            .as("Verify Bouwactiviteit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBouwactiviteitUpdatableFieldsEquals(Bouwactiviteit expected, Bouwactiviteit actual) {
        assertThat(expected)
            .as("Verify Bouwactiviteit relevant properties")
            .satisfies(e -> assertThat(e.getBouwjaarklasse()).as("check bouwjaarklasse").isEqualTo(actual.getBouwjaarklasse()))
            .satisfies(e -> assertThat(e.getBouwjaartot()).as("check bouwjaartot").isEqualTo(actual.getBouwjaartot()))
            .satisfies(e -> assertThat(e.getBouwjaarvan()).as("check bouwjaarvan").isEqualTo(actual.getBouwjaarvan()))
            .satisfies(e -> assertThat(e.getIndicatie()).as("check indicatie").isEqualTo(actual.getIndicatie()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBouwactiviteitUpdatableRelationshipsEquals(Bouwactiviteit expected, Bouwactiviteit actual) {}
}
