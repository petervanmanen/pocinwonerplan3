package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProjectactiviteitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectactiviteitAllPropertiesEquals(Projectactiviteit expected, Projectactiviteit actual) {
        assertProjectactiviteitAutoGeneratedPropertiesEquals(expected, actual);
        assertProjectactiviteitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectactiviteitAllUpdatablePropertiesEquals(Projectactiviteit expected, Projectactiviteit actual) {
        assertProjectactiviteitUpdatableFieldsEquals(expected, actual);
        assertProjectactiviteitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectactiviteitAutoGeneratedPropertiesEquals(Projectactiviteit expected, Projectactiviteit actual) {
        assertThat(expected)
            .as("Verify Projectactiviteit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectactiviteitUpdatableFieldsEquals(Projectactiviteit expected, Projectactiviteit actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProjectactiviteitUpdatableRelationshipsEquals(Projectactiviteit expected, Projectactiviteit actual) {
        assertThat(expected)
            .as("Verify Projectactiviteit relationships")
            .satisfies(e -> assertThat(e.getHeeftProject()).as("check heeftProject").isEqualTo(actual.getHeeftProject()))
            .satisfies(e -> assertThat(e.getBetreftVerzoeks()).as("check betreftVerzoeks").isEqualTo(actual.getBetreftVerzoeks()));
    }
}
