package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UitlaatconstructieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitlaatconstructieAllPropertiesEquals(Uitlaatconstructie expected, Uitlaatconstructie actual) {
        assertUitlaatconstructieAutoGeneratedPropertiesEquals(expected, actual);
        assertUitlaatconstructieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitlaatconstructieAllUpdatablePropertiesEquals(Uitlaatconstructie expected, Uitlaatconstructie actual) {
        assertUitlaatconstructieUpdatableFieldsEquals(expected, actual);
        assertUitlaatconstructieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitlaatconstructieAutoGeneratedPropertiesEquals(Uitlaatconstructie expected, Uitlaatconstructie actual) {
        assertThat(expected)
            .as("Verify Uitlaatconstructie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitlaatconstructieUpdatableFieldsEquals(Uitlaatconstructie expected, Uitlaatconstructie actual) {
        assertThat(expected)
            .as("Verify Uitlaatconstructie relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getWaterobject()).as("check waterobject").isEqualTo(actual.getWaterobject()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitlaatconstructieUpdatableRelationshipsEquals(Uitlaatconstructie expected, Uitlaatconstructie actual) {}
}
