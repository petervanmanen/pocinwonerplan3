package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GrondslagAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrondslagAllPropertiesEquals(Grondslag expected, Grondslag actual) {
        assertGrondslagAutoGeneratedPropertiesEquals(expected, actual);
        assertGrondslagAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrondslagAllUpdatablePropertiesEquals(Grondslag expected, Grondslag actual) {
        assertGrondslagUpdatableFieldsEquals(expected, actual);
        assertGrondslagUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrondslagAutoGeneratedPropertiesEquals(Grondslag expected, Grondslag actual) {
        assertThat(expected)
            .as("Verify Grondslag auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrondslagUpdatableFieldsEquals(Grondslag expected, Grondslag actual) {
        assertThat(expected)
            .as("Verify Grondslag relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGrondslagUpdatableRelationshipsEquals(Grondslag expected, Grondslag actual) {
        assertThat(expected)
            .as("Verify Grondslag relationships")
            .satisfies(e -> assertThat(e.getHeeftZaaks()).as("check heeftZaaks").isEqualTo(actual.getHeeftZaaks()));
    }
}
