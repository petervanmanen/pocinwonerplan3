package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InstructieregelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInstructieregelAllPropertiesEquals(Instructieregel expected, Instructieregel actual) {
        assertInstructieregelAutoGeneratedPropertiesEquals(expected, actual);
        assertInstructieregelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInstructieregelAllUpdatablePropertiesEquals(Instructieregel expected, Instructieregel actual) {
        assertInstructieregelUpdatableFieldsEquals(expected, actual);
        assertInstructieregelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInstructieregelAutoGeneratedPropertiesEquals(Instructieregel expected, Instructieregel actual) {
        assertThat(expected)
            .as("Verify Instructieregel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInstructieregelUpdatableFieldsEquals(Instructieregel expected, Instructieregel actual) {
        assertThat(expected)
            .as("Verify Instructieregel relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getInstructieregelinstrument())
                        .as("check instructieregelinstrument")
                        .isEqualTo(actual.getInstructieregelinstrument())
            )
            .satisfies(
                e ->
                    assertThat(e.getInstructieregeltaakuitoefening())
                        .as("check instructieregeltaakuitoefening")
                        .isEqualTo(actual.getInstructieregeltaakuitoefening())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInstructieregelUpdatableRelationshipsEquals(Instructieregel expected, Instructieregel actual) {
        assertThat(expected)
            .as("Verify Instructieregel relationships")
            .satisfies(
                e ->
                    assertThat(e.getBeschrijftgebiedsaanwijzingGebiedsaanwijzings())
                        .as("check beschrijftgebiedsaanwijzingGebiedsaanwijzings")
                        .isEqualTo(actual.getBeschrijftgebiedsaanwijzingGebiedsaanwijzings())
            );
    }
}
