package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SamengesteldenaamnatuurlijkpersoonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSamengesteldenaamnatuurlijkpersoonAllPropertiesEquals(
        Samengesteldenaamnatuurlijkpersoon expected,
        Samengesteldenaamnatuurlijkpersoon actual
    ) {
        assertSamengesteldenaamnatuurlijkpersoonAutoGeneratedPropertiesEquals(expected, actual);
        assertSamengesteldenaamnatuurlijkpersoonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSamengesteldenaamnatuurlijkpersoonAllUpdatablePropertiesEquals(
        Samengesteldenaamnatuurlijkpersoon expected,
        Samengesteldenaamnatuurlijkpersoon actual
    ) {
        assertSamengesteldenaamnatuurlijkpersoonUpdatableFieldsEquals(expected, actual);
        assertSamengesteldenaamnatuurlijkpersoonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSamengesteldenaamnatuurlijkpersoonAutoGeneratedPropertiesEquals(
        Samengesteldenaamnatuurlijkpersoon expected,
        Samengesteldenaamnatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Samengesteldenaamnatuurlijkpersoon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSamengesteldenaamnatuurlijkpersoonUpdatableFieldsEquals(
        Samengesteldenaamnatuurlijkpersoon expected,
        Samengesteldenaamnatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Samengesteldenaamnatuurlijkpersoon relevant properties")
            .satisfies(e -> assertThat(e.getAdellijketitel()).as("check adellijketitel").isEqualTo(actual.getAdellijketitel()))
            .satisfies(e -> assertThat(e.getGeslachtsnaamstam()).as("check geslachtsnaamstam").isEqualTo(actual.getGeslachtsnaamstam()))
            .satisfies(e -> assertThat(e.getNamenreeks()).as("check namenreeks").isEqualTo(actual.getNamenreeks()))
            .satisfies(e -> assertThat(e.getPredicaat()).as("check predicaat").isEqualTo(actual.getPredicaat()))
            .satisfies(e -> assertThat(e.getScheidingsteken()).as("check scheidingsteken").isEqualTo(actual.getScheidingsteken()))
            .satisfies(e -> assertThat(e.getVoornamen()).as("check voornamen").isEqualTo(actual.getVoornamen()))
            .satisfies(e -> assertThat(e.getVoorvoegsel()).as("check voorvoegsel").isEqualTo(actual.getVoorvoegsel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSamengesteldenaamnatuurlijkpersoonUpdatableRelationshipsEquals(
        Samengesteldenaamnatuurlijkpersoon expected,
        Samengesteldenaamnatuurlijkpersoon actual
    ) {}
}
