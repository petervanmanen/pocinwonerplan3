package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ErfgoedobjectAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertErfgoedobjectAllPropertiesEquals(Erfgoedobject expected, Erfgoedobject actual) {
        assertErfgoedobjectAutoGeneratedPropertiesEquals(expected, actual);
        assertErfgoedobjectAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertErfgoedobjectAllUpdatablePropertiesEquals(Erfgoedobject expected, Erfgoedobject actual) {
        assertErfgoedobjectUpdatableFieldsEquals(expected, actual);
        assertErfgoedobjectUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertErfgoedobjectAutoGeneratedPropertiesEquals(Erfgoedobject expected, Erfgoedobject actual) {
        assertThat(expected)
            .as("Verify Erfgoedobject auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertErfgoedobjectUpdatableFieldsEquals(Erfgoedobject expected, Erfgoedobject actual) {
        assertThat(expected)
            .as("Verify Erfgoedobject relevant properties")
            .satisfies(e -> assertThat(e.getDateringtot()).as("check dateringtot").isEqualTo(actual.getDateringtot()))
            .satisfies(e -> assertThat(e.getDateringvanaf()).as("check dateringvanaf").isEqualTo(actual.getDateringvanaf()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getTitel()).as("check titel").isEqualTo(actual.getTitel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertErfgoedobjectUpdatableRelationshipsEquals(Erfgoedobject expected, Erfgoedobject actual) {}
}
