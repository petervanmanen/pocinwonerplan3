package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RioleringsgebiedAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRioleringsgebiedAllPropertiesEquals(Rioleringsgebied expected, Rioleringsgebied actual) {
        assertRioleringsgebiedAutoGeneratedPropertiesEquals(expected, actual);
        assertRioleringsgebiedAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRioleringsgebiedAllUpdatablePropertiesEquals(Rioleringsgebied expected, Rioleringsgebied actual) {
        assertRioleringsgebiedUpdatableFieldsEquals(expected, actual);
        assertRioleringsgebiedUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRioleringsgebiedAutoGeneratedPropertiesEquals(Rioleringsgebied expected, Rioleringsgebied actual) {
        assertThat(expected)
            .as("Verify Rioleringsgebied auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRioleringsgebiedUpdatableFieldsEquals(Rioleringsgebied expected, Rioleringsgebied actual) {
        assertThat(expected)
            .as("Verify Rioleringsgebied relevant properties")
            .satisfies(e -> assertThat(e.getRioleringsgebied()).as("check rioleringsgebied").isEqualTo(actual.getRioleringsgebied()))
            .satisfies(e -> assertThat(e.getZuiveringsgebied()).as("check zuiveringsgebied").isEqualTo(actual.getZuiveringsgebied()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRioleringsgebiedUpdatableRelationshipsEquals(Rioleringsgebied expected, Rioleringsgebied actual) {}
}
