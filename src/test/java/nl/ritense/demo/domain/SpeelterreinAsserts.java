package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SpeelterreinAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpeelterreinAllPropertiesEquals(Speelterrein expected, Speelterrein actual) {
        assertSpeelterreinAutoGeneratedPropertiesEquals(expected, actual);
        assertSpeelterreinAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpeelterreinAllUpdatablePropertiesEquals(Speelterrein expected, Speelterrein actual) {
        assertSpeelterreinUpdatableFieldsEquals(expected, actual);
        assertSpeelterreinUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpeelterreinAutoGeneratedPropertiesEquals(Speelterrein expected, Speelterrein actual) {
        assertThat(expected)
            .as("Verify Speelterrein auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpeelterreinUpdatableFieldsEquals(Speelterrein expected, Speelterrein actual) {
        assertThat(expected)
            .as("Verify Speelterrein relevant properties")
            .satisfies(e -> assertThat(e.getJaarherinrichting()).as("check jaarherinrichting").isEqualTo(actual.getJaarherinrichting()))
            .satisfies(
                e ->
                    assertThat(e.getSpeelterreinleeftijddoelgroep())
                        .as("check speelterreinleeftijddoelgroep")
                        .isEqualTo(actual.getSpeelterreinleeftijddoelgroep())
            )
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getTypeplus()).as("check typeplus").isEqualTo(actual.getTypeplus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpeelterreinUpdatableRelationshipsEquals(Speelterrein expected, Speelterrein actual) {}
}
