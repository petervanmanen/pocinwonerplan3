package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EnumenumerationaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnumenumerationaAllPropertiesEquals(Enumenumerationa expected, Enumenumerationa actual) {
        assertEnumenumerationaAutoGeneratedPropertiesEquals(expected, actual);
        assertEnumenumerationaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnumenumerationaAllUpdatablePropertiesEquals(Enumenumerationa expected, Enumenumerationa actual) {
        assertEnumenumerationaUpdatableFieldsEquals(expected, actual);
        assertEnumenumerationaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnumenumerationaAutoGeneratedPropertiesEquals(Enumenumerationa expected, Enumenumerationa actual) {
        assertThat(expected)
            .as("Verify Enumenumerationa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnumenumerationaUpdatableFieldsEquals(Enumenumerationa expected, Enumenumerationa actual) {
        assertThat(expected)
            .as("Verify Enumenumerationa relevant properties")
            .satisfies(e -> assertThat(e.getOptie1()).as("check optie1").isEqualTo(actual.getOptie1()))
            .satisfies(e -> assertThat(e.getOptie2()).as("check optie2").isEqualTo(actual.getOptie2()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnumenumerationaUpdatableRelationshipsEquals(Enumenumerationa expected, Enumenumerationa actual) {}
}
