package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClientAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientAllPropertiesEquals(Client expected, Client actual) {
        assertClientAutoGeneratedPropertiesEquals(expected, actual);
        assertClientAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientAllUpdatablePropertiesEquals(Client expected, Client actual) {
        assertClientUpdatableFieldsEquals(expected, actual);
        assertClientUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientAutoGeneratedPropertiesEquals(Client expected, Client actual) {
        assertThat(expected)
            .as("Verify Client auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientUpdatableFieldsEquals(Client expected, Client actual) {
        assertThat(expected)
            .as("Verify Client relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getGezagsdragergekend()).as("check gezagsdragergekend").isEqualTo(actual.getGezagsdragergekend()))
            .satisfies(e -> assertThat(e.getJuridischestatus()).as("check juridischestatus").isEqualTo(actual.getJuridischestatus()))
            .satisfies(
                e ->
                    assertThat(e.getWettelijkevertegenwoordiging())
                        .as("check wettelijkevertegenwoordiging")
                        .isEqualTo(actual.getWettelijkevertegenwoordiging())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientUpdatableRelationshipsEquals(Client expected, Client actual) {
        assertThat(expected)
            .as("Verify Client relationships")
            .satisfies(
                e ->
                    assertThat(e.getHeeftParticipatiedossier())
                        .as("check heeftParticipatiedossier")
                        .isEqualTo(actual.getHeeftParticipatiedossier())
            )
            .satisfies(
                e ->
                    assertThat(e.getHeeftvoorzieningInkomensvoorziening())
                        .as("check heeftvoorzieningInkomensvoorziening")
                        .isEqualTo(actual.getHeeftvoorzieningInkomensvoorziening())
            )
            .satisfies(
                e ->
                    assertThat(e.getValtbinnendoelgroepDoelgroep())
                        .as("check valtbinnendoelgroepDoelgroep")
                        .isEqualTo(actual.getValtbinnendoelgroepDoelgroep())
            )
            .satisfies(
                e -> assertThat(e.getHeeftrelatieRelaties()).as("check heeftrelatieRelaties").isEqualTo(actual.getHeeftrelatieRelaties())
            )
            .satisfies(
                e ->
                    assertThat(e.getVoorzieningbijstandspartijInkomensvoorzienings())
                        .as("check voorzieningbijstandspartijInkomensvoorzienings")
                        .isEqualTo(actual.getVoorzieningbijstandspartijInkomensvoorzienings())
            )
            .satisfies(
                e ->
                    assertThat(e.getMaaktonderdeeluitvanHuishoudens())
                        .as("check maaktonderdeeluitvanHuishoudens")
                        .isEqualTo(actual.getMaaktonderdeeluitvanHuishoudens())
            )
            .satisfies(
                e ->
                    assertThat(e.getHeefttaalniveauTaalniveaus())
                        .as("check heefttaalniveauTaalniveaus")
                        .isEqualTo(actual.getHeefttaalniveauTaalniveaus())
            )
            .satisfies(
                e ->
                    assertThat(e.getOndersteuntclientClientbegeleiders())
                        .as("check ondersteuntclientClientbegeleiders")
                        .isEqualTo(actual.getOndersteuntclientClientbegeleiders())
            );
    }
}
