package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CorrespondentieadresbuitenlandAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCorrespondentieadresbuitenlandAllPropertiesEquals(
        Correspondentieadresbuitenland expected,
        Correspondentieadresbuitenland actual
    ) {
        assertCorrespondentieadresbuitenlandAutoGeneratedPropertiesEquals(expected, actual);
        assertCorrespondentieadresbuitenlandAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCorrespondentieadresbuitenlandAllUpdatablePropertiesEquals(
        Correspondentieadresbuitenland expected,
        Correspondentieadresbuitenland actual
    ) {
        assertCorrespondentieadresbuitenlandUpdatableFieldsEquals(expected, actual);
        assertCorrespondentieadresbuitenlandUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCorrespondentieadresbuitenlandAutoGeneratedPropertiesEquals(
        Correspondentieadresbuitenland expected,
        Correspondentieadresbuitenland actual
    ) {
        assertThat(expected)
            .as("Verify Correspondentieadresbuitenland auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCorrespondentieadresbuitenlandUpdatableFieldsEquals(
        Correspondentieadresbuitenland expected,
        Correspondentieadresbuitenland actual
    ) {
        assertThat(expected)
            .as("Verify Correspondentieadresbuitenland relevant properties")
            .satisfies(e -> assertThat(e.getAdresbuitenland1()).as("check adresbuitenland1").isEqualTo(actual.getAdresbuitenland1()))
            .satisfies(e -> assertThat(e.getAdresbuitenland2()).as("check adresbuitenland2").isEqualTo(actual.getAdresbuitenland2()))
            .satisfies(e -> assertThat(e.getAdresbuitenland3()).as("check adresbuitenland3").isEqualTo(actual.getAdresbuitenland3()))
            .satisfies(e -> assertThat(e.getAdresbuitenland4()).as("check adresbuitenland4").isEqualTo(actual.getAdresbuitenland4()))
            .satisfies(e -> assertThat(e.getAdresbuitenland5()).as("check adresbuitenland5").isEqualTo(actual.getAdresbuitenland5()))
            .satisfies(e -> assertThat(e.getAdresbuitenland6()).as("check adresbuitenland6").isEqualTo(actual.getAdresbuitenland6()))
            .satisfies(
                e ->
                    assertThat(e.getLandcorrespondentieadres())
                        .as("check landcorrespondentieadres")
                        .isEqualTo(actual.getLandcorrespondentieadres())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCorrespondentieadresbuitenlandUpdatableRelationshipsEquals(
        Correspondentieadresbuitenland expected,
        Correspondentieadresbuitenland actual
    ) {}
}
