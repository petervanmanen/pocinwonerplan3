package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OpschortingzaakAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpschortingzaakAllPropertiesEquals(Opschortingzaak expected, Opschortingzaak actual) {
        assertOpschortingzaakAutoGeneratedPropertiesEquals(expected, actual);
        assertOpschortingzaakAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpschortingzaakAllUpdatablePropertiesEquals(Opschortingzaak expected, Opschortingzaak actual) {
        assertOpschortingzaakUpdatableFieldsEquals(expected, actual);
        assertOpschortingzaakUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpschortingzaakAutoGeneratedPropertiesEquals(Opschortingzaak expected, Opschortingzaak actual) {
        assertThat(expected)
            .as("Verify Opschortingzaak auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpschortingzaakUpdatableFieldsEquals(Opschortingzaak expected, Opschortingzaak actual) {
        assertThat(expected)
            .as("Verify Opschortingzaak relevant properties")
            .satisfies(
                e -> assertThat(e.getIndicatieopschorting()).as("check indicatieopschorting").isEqualTo(actual.getIndicatieopschorting())
            )
            .satisfies(e -> assertThat(e.getRedenopschorting()).as("check redenopschorting").isEqualTo(actual.getRedenopschorting()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpschortingzaakUpdatableRelationshipsEquals(Opschortingzaak expected, Opschortingzaak actual) {}
}
