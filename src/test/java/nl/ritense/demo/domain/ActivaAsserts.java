package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ActivaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActivaAllPropertiesEquals(Activa expected, Activa actual) {
        assertActivaAutoGeneratedPropertiesEquals(expected, actual);
        assertActivaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActivaAllUpdatablePropertiesEquals(Activa expected, Activa actual) {
        assertActivaUpdatableFieldsEquals(expected, actual);
        assertActivaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActivaAutoGeneratedPropertiesEquals(Activa expected, Activa actual) {
        assertThat(expected)
            .as("Verify Activa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActivaUpdatableFieldsEquals(Activa expected, Activa actual) {
        assertThat(expected)
            .as("Verify Activa relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertActivaUpdatableRelationshipsEquals(Activa expected, Activa actual) {
        assertThat(expected)
            .as("Verify Activa relationships")
            .satisfies(e -> assertThat(e.getIssoortActivasoort()).as("check issoortActivasoort").isEqualTo(actual.getIssoortActivasoort()))
            .satisfies(
                e -> assertThat(e.getHeeftHoofdrekenings()).as("check heeftHoofdrekenings").isEqualTo(actual.getHeeftHoofdrekenings())
            );
    }
}
