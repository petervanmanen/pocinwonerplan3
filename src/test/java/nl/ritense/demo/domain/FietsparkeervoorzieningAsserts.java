package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FietsparkeervoorzieningAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFietsparkeervoorzieningAllPropertiesEquals(Fietsparkeervoorziening expected, Fietsparkeervoorziening actual) {
        assertFietsparkeervoorzieningAutoGeneratedPropertiesEquals(expected, actual);
        assertFietsparkeervoorzieningAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFietsparkeervoorzieningAllUpdatablePropertiesEquals(
        Fietsparkeervoorziening expected,
        Fietsparkeervoorziening actual
    ) {
        assertFietsparkeervoorzieningUpdatableFieldsEquals(expected, actual);
        assertFietsparkeervoorzieningUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFietsparkeervoorzieningAutoGeneratedPropertiesEquals(
        Fietsparkeervoorziening expected,
        Fietsparkeervoorziening actual
    ) {
        assertThat(expected)
            .as("Verify Fietsparkeervoorziening auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFietsparkeervoorzieningUpdatableFieldsEquals(
        Fietsparkeervoorziening expected,
        Fietsparkeervoorziening actual
    ) {
        assertThat(expected)
            .as("Verify Fietsparkeervoorziening relevant properties")
            .satisfies(
                e -> assertThat(e.getAantalparkeerplaatsen()).as("check aantalparkeerplaatsen").isEqualTo(actual.getAantalparkeerplaatsen())
            )
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getTypeplus()).as("check typeplus").isEqualTo(actual.getTypeplus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFietsparkeervoorzieningUpdatableRelationshipsEquals(
        Fietsparkeervoorziening expected,
        Fietsparkeervoorziening actual
    ) {}
}
