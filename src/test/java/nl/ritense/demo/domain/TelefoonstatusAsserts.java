package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TelefoonstatusAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTelefoonstatusAllPropertiesEquals(Telefoonstatus expected, Telefoonstatus actual) {
        assertTelefoonstatusAutoGeneratedPropertiesEquals(expected, actual);
        assertTelefoonstatusAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTelefoonstatusAllUpdatablePropertiesEquals(Telefoonstatus expected, Telefoonstatus actual) {
        assertTelefoonstatusUpdatableFieldsEquals(expected, actual);
        assertTelefoonstatusUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTelefoonstatusAutoGeneratedPropertiesEquals(Telefoonstatus expected, Telefoonstatus actual) {
        assertThat(expected)
            .as("Verify Telefoonstatus auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTelefoonstatusUpdatableFieldsEquals(Telefoonstatus expected, Telefoonstatus actual) {
        assertThat(expected)
            .as("Verify Telefoonstatus relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getContactconnectionstate())
                        .as("check contactconnectionstate")
                        .isEqualTo(actual.getContactconnectionstate())
            )
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTelefoonstatusUpdatableRelationshipsEquals(Telefoonstatus expected, Telefoonstatus actual) {}
}
