package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FormuliersoortAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormuliersoortAllPropertiesEquals(Formuliersoort expected, Formuliersoort actual) {
        assertFormuliersoortAutoGeneratedPropertiesEquals(expected, actual);
        assertFormuliersoortAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormuliersoortAllUpdatablePropertiesEquals(Formuliersoort expected, Formuliersoort actual) {
        assertFormuliersoortUpdatableFieldsEquals(expected, actual);
        assertFormuliersoortUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormuliersoortAutoGeneratedPropertiesEquals(Formuliersoort expected, Formuliersoort actual) {
        assertThat(expected)
            .as("Verify Formuliersoort auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormuliersoortUpdatableFieldsEquals(Formuliersoort expected, Formuliersoort actual) {
        assertThat(expected)
            .as("Verify Formuliersoort relevant properties")
            .satisfies(e -> assertThat(e.getIngebruik()).as("check ingebruik").isEqualTo(actual.getIngebruik()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getOnderwerp()).as("check onderwerp").isEqualTo(actual.getOnderwerp()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormuliersoortUpdatableRelationshipsEquals(Formuliersoort expected, Formuliersoort actual) {
        assertThat(expected)
            .as("Verify Formuliersoort relationships")
            .satisfies(
                e ->
                    assertThat(e.getIsaanleidingvoorZaaktypes())
                        .as("check isaanleidingvoorZaaktypes")
                        .isEqualTo(actual.getIsaanleidingvoorZaaktypes())
            );
    }
}
