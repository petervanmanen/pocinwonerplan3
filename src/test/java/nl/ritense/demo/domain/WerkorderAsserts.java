package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WerkorderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWerkorderAllPropertiesEquals(Werkorder expected, Werkorder actual) {
        assertWerkorderAutoGeneratedPropertiesEquals(expected, actual);
        assertWerkorderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWerkorderAllUpdatablePropertiesEquals(Werkorder expected, Werkorder actual) {
        assertWerkorderUpdatableFieldsEquals(expected, actual);
        assertWerkorderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWerkorderAutoGeneratedPropertiesEquals(Werkorder expected, Werkorder actual) {
        assertThat(expected)
            .as("Verify Werkorder auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWerkorderUpdatableFieldsEquals(Werkorder expected, Werkorder actual) {
        assertThat(expected)
            .as("Verify Werkorder relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getDocumentnummer()).as("check documentnummer").isEqualTo(actual.getDocumentnummer()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getWerkordertype()).as("check werkordertype").isEqualTo(actual.getWerkordertype()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWerkorderUpdatableRelationshipsEquals(Werkorder expected, Werkorder actual) {
        assertThat(expected)
            .as("Verify Werkorder relationships")
            .satisfies(e -> assertThat(e.getHeeftHoofdrekening()).as("check heeftHoofdrekening").isEqualTo(actual.getHeeftHoofdrekening()))
            .satisfies(e -> assertThat(e.getHeeftKostenplaats()).as("check heeftKostenplaats").isEqualTo(actual.getHeeftKostenplaats()));
    }
}
