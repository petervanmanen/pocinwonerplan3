package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NaderetoegangAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaderetoegangAllPropertiesEquals(Naderetoegang expected, Naderetoegang actual) {
        assertNaderetoegangAutoGeneratedPropertiesEquals(expected, actual);
        assertNaderetoegangAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaderetoegangAllUpdatablePropertiesEquals(Naderetoegang expected, Naderetoegang actual) {
        assertNaderetoegangUpdatableFieldsEquals(expected, actual);
        assertNaderetoegangUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaderetoegangAutoGeneratedPropertiesEquals(Naderetoegang expected, Naderetoegang actual) {
        assertThat(expected)
            .as("Verify Naderetoegang auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaderetoegangUpdatableFieldsEquals(Naderetoegang expected, Naderetoegang actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaderetoegangUpdatableRelationshipsEquals(Naderetoegang expected, Naderetoegang actual) {}
}
