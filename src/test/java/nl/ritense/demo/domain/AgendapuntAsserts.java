package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AgendapuntAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendapuntAllPropertiesEquals(Agendapunt expected, Agendapunt actual) {
        assertAgendapuntAutoGeneratedPropertiesEquals(expected, actual);
        assertAgendapuntAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendapuntAllUpdatablePropertiesEquals(Agendapunt expected, Agendapunt actual) {
        assertAgendapuntUpdatableFieldsEquals(expected, actual);
        assertAgendapuntUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendapuntAutoGeneratedPropertiesEquals(Agendapunt expected, Agendapunt actual) {
        assertThat(expected)
            .as("Verify Agendapunt auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendapuntUpdatableFieldsEquals(Agendapunt expected, Agendapunt actual) {
        assertThat(expected)
            .as("Verify Agendapunt relevant properties")
            .satisfies(e -> assertThat(e.getNummer()).as("check nummer").isEqualTo(actual.getNummer()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getTitel()).as("check titel").isEqualTo(actual.getTitel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgendapuntUpdatableRelationshipsEquals(Agendapunt expected, Agendapunt actual) {
        assertThat(expected)
            .as("Verify Agendapunt relationships")
            .satisfies(e -> assertThat(e.getHeeftVergadering()).as("check heeftVergadering").isEqualTo(actual.getHeeftVergadering()))
            .satisfies(
                e -> assertThat(e.getBehandeltRaadsstuks()).as("check behandeltRaadsstuks").isEqualTo(actual.getBehandeltRaadsstuks())
            );
    }
}
