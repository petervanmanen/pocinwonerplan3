package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InzetAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInzetAllPropertiesEquals(Inzet expected, Inzet actual) {
        assertInzetAutoGeneratedPropertiesEquals(expected, actual);
        assertInzetAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInzetAllUpdatablePropertiesEquals(Inzet expected, Inzet actual) {
        assertInzetUpdatableFieldsEquals(expected, actual);
        assertInzetUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInzetAutoGeneratedPropertiesEquals(Inzet expected, Inzet actual) {
        assertThat(expected)
            .as("Verify Inzet auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInzetUpdatableFieldsEquals(Inzet expected, Inzet actual) {
        assertThat(expected)
            .as("Verify Inzet relevant properties")
            .satisfies(e -> assertThat(e.getDatumbegin()).as("check datumbegin").isEqualTo(actual.getDatumbegin()))
            .satisfies(e -> assertThat(e.getDatumeinde()).as("check datumeinde").isEqualTo(actual.getDatumeinde()))
            .satisfies(e -> assertThat(e.getPercentage()).as("check percentage").isEqualTo(actual.getPercentage()))
            .satisfies(e -> assertThat(e.getUren()).as("check uren").isEqualTo(actual.getUren()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInzetUpdatableRelationshipsEquals(Inzet expected, Inzet actual) {}
}
