package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EpackageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEpackageAllPropertiesEquals(Epackage expected, Epackage actual) {
        assertEpackageAutoGeneratedPropertiesEquals(expected, actual);
        assertEpackageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEpackageAllUpdatablePropertiesEquals(Epackage expected, Epackage actual) {
        assertEpackageUpdatableFieldsEquals(expected, actual);
        assertEpackageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEpackageAutoGeneratedPropertiesEquals(Epackage expected, Epackage actual) {
        assertThat(expected)
            .as("Verify Epackage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEpackageUpdatableFieldsEquals(Epackage expected, Epackage actual) {
        assertThat(expected)
            .as("Verify Epackage relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getProces()).as("check proces").isEqualTo(actual.getProces()))
            .satisfies(e -> assertThat(e.getProject()).as("check project").isEqualTo(actual.getProject()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getToelichting()).as("check toelichting").isEqualTo(actual.getToelichting()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEpackageUpdatableRelationshipsEquals(Epackage expected, Epackage actual) {}
}
