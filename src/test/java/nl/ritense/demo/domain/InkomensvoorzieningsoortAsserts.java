package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InkomensvoorzieningsoortAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInkomensvoorzieningsoortAllPropertiesEquals(
        Inkomensvoorzieningsoort expected,
        Inkomensvoorzieningsoort actual
    ) {
        assertInkomensvoorzieningsoortAutoGeneratedPropertiesEquals(expected, actual);
        assertInkomensvoorzieningsoortAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInkomensvoorzieningsoortAllUpdatablePropertiesEquals(
        Inkomensvoorzieningsoort expected,
        Inkomensvoorzieningsoort actual
    ) {
        assertInkomensvoorzieningsoortUpdatableFieldsEquals(expected, actual);
        assertInkomensvoorzieningsoortUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInkomensvoorzieningsoortAutoGeneratedPropertiesEquals(
        Inkomensvoorzieningsoort expected,
        Inkomensvoorzieningsoort actual
    ) {
        assertThat(expected)
            .as("Verify Inkomensvoorzieningsoort auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInkomensvoorzieningsoortUpdatableFieldsEquals(
        Inkomensvoorzieningsoort expected,
        Inkomensvoorzieningsoort actual
    ) {
        assertThat(expected)
            .as("Verify Inkomensvoorzieningsoort relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getRegeling()).as("check regeling").isEqualTo(actual.getRegeling()))
            .satisfies(e -> assertThat(e.getRegelingcode()).as("check regelingcode").isEqualTo(actual.getRegelingcode()))
            .satisfies(e -> assertThat(e.getVergoeding()).as("check vergoeding").isEqualTo(actual.getVergoeding()))
            .satisfies(e -> assertThat(e.getVergoedingscode()).as("check vergoedingscode").isEqualTo(actual.getVergoedingscode()))
            .satisfies(e -> assertThat(e.getWet()).as("check wet").isEqualTo(actual.getWet()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInkomensvoorzieningsoortUpdatableRelationshipsEquals(
        Inkomensvoorzieningsoort expected,
        Inkomensvoorzieningsoort actual
    ) {}
}
