package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UitnodigingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitnodigingAllPropertiesEquals(Uitnodiging expected, Uitnodiging actual) {
        assertUitnodigingAutoGeneratedPropertiesEquals(expected, actual);
        assertUitnodigingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitnodigingAllUpdatablePropertiesEquals(Uitnodiging expected, Uitnodiging actual) {
        assertUitnodigingUpdatableFieldsEquals(expected, actual);
        assertUitnodigingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitnodigingAutoGeneratedPropertiesEquals(Uitnodiging expected, Uitnodiging actual) {
        assertThat(expected)
            .as("Verify Uitnodiging auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitnodigingUpdatableFieldsEquals(Uitnodiging expected, Uitnodiging actual) {
        assertThat(expected)
            .as("Verify Uitnodiging relevant properties")
            .satisfies(e -> assertThat(e.getAfgewezen()).as("check afgewezen").isEqualTo(actual.getAfgewezen()))
            .satisfies(e -> assertThat(e.getDatum()).as("check datum").isEqualTo(actual.getDatum()))
            .satisfies(e -> assertThat(e.getGeaccepteerd()).as("check geaccepteerd").isEqualTo(actual.getGeaccepteerd()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitnodigingUpdatableRelationshipsEquals(Uitnodiging expected, Uitnodiging actual) {
        assertThat(expected)
            .as("Verify Uitnodiging relationships")
            .satisfies(
                e -> assertThat(e.getGerichtaanLeverancier()).as("check gerichtaanLeverancier").isEqualTo(actual.getGerichtaanLeverancier())
            );
    }
}
