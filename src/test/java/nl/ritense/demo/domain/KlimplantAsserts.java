package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class KlimplantAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKlimplantAllPropertiesEquals(Klimplant expected, Klimplant actual) {
        assertKlimplantAutoGeneratedPropertiesEquals(expected, actual);
        assertKlimplantAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKlimplantAllUpdatablePropertiesEquals(Klimplant expected, Klimplant actual) {
        assertKlimplantUpdatableFieldsEquals(expected, actual);
        assertKlimplantUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKlimplantAutoGeneratedPropertiesEquals(Klimplant expected, Klimplant actual) {
        assertThat(expected)
            .as("Verify Klimplant auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKlimplantUpdatableFieldsEquals(Klimplant expected, Klimplant actual) {
        assertThat(expected)
            .as("Verify Klimplant relevant properties")
            .satisfies(e -> assertThat(e.getHoogte()).as("check hoogte").isEqualTo(actual.getHoogte()))
            .satisfies(e -> assertThat(e.getKnipfrequentie()).as("check knipfrequentie").isEqualTo(actual.getKnipfrequentie()))
            .satisfies(e -> assertThat(e.getKnipoppervlakte()).as("check knipoppervlakte").isEqualTo(actual.getKnipoppervlakte()))
            .satisfies(e -> assertThat(e.getOndersteuningsvorm()).as("check ondersteuningsvorm").isEqualTo(actual.getOndersteuningsvorm()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKlimplantUpdatableRelationshipsEquals(Klimplant expected, Klimplant actual) {}
}
