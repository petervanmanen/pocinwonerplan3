package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BrondocumentenAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBrondocumentenAllPropertiesEquals(Brondocumenten expected, Brondocumenten actual) {
        assertBrondocumentenAutoGeneratedPropertiesEquals(expected, actual);
        assertBrondocumentenAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBrondocumentenAllUpdatablePropertiesEquals(Brondocumenten expected, Brondocumenten actual) {
        assertBrondocumentenUpdatableFieldsEquals(expected, actual);
        assertBrondocumentenUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBrondocumentenAutoGeneratedPropertiesEquals(Brondocumenten expected, Brondocumenten actual) {
        assertThat(expected)
            .as("Verify Brondocumenten auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBrondocumentenUpdatableFieldsEquals(Brondocumenten expected, Brondocumenten actual) {
        assertThat(expected)
            .as("Verify Brondocumenten relevant properties")
            .satisfies(e -> assertThat(e.getAktegemeente()).as("check aktegemeente").isEqualTo(actual.getAktegemeente()))
            .satisfies(e -> assertThat(e.getDatumdocument()).as("check datumdocument").isEqualTo(actual.getDatumdocument()))
            .satisfies(e -> assertThat(e.getDocumentgemeente()).as("check documentgemeente").isEqualTo(actual.getDocumentgemeente()))
            .satisfies(
                e -> assertThat(e.getDocumentidentificatie()).as("check documentidentificatie").isEqualTo(actual.getDocumentidentificatie())
            )
            .satisfies(
                e -> assertThat(e.getDocumentomschrijving()).as("check documentomschrijving").isEqualTo(actual.getDocumentomschrijving())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBrondocumentenUpdatableRelationshipsEquals(Brondocumenten expected, Brondocumenten actual) {}
}
