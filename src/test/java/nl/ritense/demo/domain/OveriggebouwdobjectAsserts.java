package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OveriggebouwdobjectAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOveriggebouwdobjectAllPropertiesEquals(Overiggebouwdobject expected, Overiggebouwdobject actual) {
        assertOveriggebouwdobjectAutoGeneratedPropertiesEquals(expected, actual);
        assertOveriggebouwdobjectAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOveriggebouwdobjectAllUpdatablePropertiesEquals(Overiggebouwdobject expected, Overiggebouwdobject actual) {
        assertOveriggebouwdobjectUpdatableFieldsEquals(expected, actual);
        assertOveriggebouwdobjectUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOveriggebouwdobjectAutoGeneratedPropertiesEquals(Overiggebouwdobject expected, Overiggebouwdobject actual) {
        assertThat(expected)
            .as("Verify Overiggebouwdobject auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOveriggebouwdobjectUpdatableFieldsEquals(Overiggebouwdobject expected, Overiggebouwdobject actual) {
        assertThat(expected)
            .as("Verify Overiggebouwdobject relevant properties")
            .satisfies(e -> assertThat(e.getBouwjaar()).as("check bouwjaar").isEqualTo(actual.getBouwjaar()))
            .satisfies(
                e -> assertThat(e.getIndicatieplanobject()).as("check indicatieplanobject").isEqualTo(actual.getIndicatieplanobject())
            )
            .satisfies(
                e ->
                    assertThat(e.getOveriggebouwdobjectidentificatie())
                        .as("check overiggebouwdobjectidentificatie")
                        .isEqualTo(actual.getOveriggebouwdobjectidentificatie())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOveriggebouwdobjectUpdatableRelationshipsEquals(Overiggebouwdobject expected, Overiggebouwdobject actual) {}
}
