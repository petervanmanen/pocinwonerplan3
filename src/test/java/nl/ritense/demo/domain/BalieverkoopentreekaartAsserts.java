package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BalieverkoopentreekaartAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBalieverkoopentreekaartAllPropertiesEquals(Balieverkoopentreekaart expected, Balieverkoopentreekaart actual) {
        assertBalieverkoopentreekaartAutoGeneratedPropertiesEquals(expected, actual);
        assertBalieverkoopentreekaartAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBalieverkoopentreekaartAllUpdatablePropertiesEquals(
        Balieverkoopentreekaart expected,
        Balieverkoopentreekaart actual
    ) {
        assertBalieverkoopentreekaartUpdatableFieldsEquals(expected, actual);
        assertBalieverkoopentreekaartUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBalieverkoopentreekaartAutoGeneratedPropertiesEquals(
        Balieverkoopentreekaart expected,
        Balieverkoopentreekaart actual
    ) {
        assertThat(expected)
            .as("Verify Balieverkoopentreekaart auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBalieverkoopentreekaartUpdatableFieldsEquals(
        Balieverkoopentreekaart expected,
        Balieverkoopentreekaart actual
    ) {
        assertThat(expected)
            .as("Verify Balieverkoopentreekaart relevant properties")
            .satisfies(
                e -> assertThat(e.getDatumeindegeldigheid()).as("check datumeindegeldigheid").isEqualTo(actual.getDatumeindegeldigheid())
            )
            .satisfies(e -> assertThat(e.getDatumstart()).as("check datumstart").isEqualTo(actual.getDatumstart()))
            .satisfies(e -> assertThat(e.getGebruiktop()).as("check gebruiktop").isEqualTo(actual.getGebruiktop()))
            .satisfies(e -> assertThat(e.getRondleiding()).as("check rondleiding").isEqualTo(actual.getRondleiding()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBalieverkoopentreekaartUpdatableRelationshipsEquals(
        Balieverkoopentreekaart expected,
        Balieverkoopentreekaart actual
    ) {}
}
