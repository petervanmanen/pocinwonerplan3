package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WozdeelobjectAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWozdeelobjectAllPropertiesEquals(Wozdeelobject expected, Wozdeelobject actual) {
        assertWozdeelobjectAutoGeneratedPropertiesEquals(expected, actual);
        assertWozdeelobjectAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWozdeelobjectAllUpdatablePropertiesEquals(Wozdeelobject expected, Wozdeelobject actual) {
        assertWozdeelobjectUpdatableFieldsEquals(expected, actual);
        assertWozdeelobjectUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWozdeelobjectAutoGeneratedPropertiesEquals(Wozdeelobject expected, Wozdeelobject actual) {
        assertThat(expected)
            .as("Verify Wozdeelobject auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWozdeelobjectUpdatableFieldsEquals(Wozdeelobject expected, Wozdeelobject actual) {
        assertThat(expected)
            .as("Verify Wozdeelobject relevant properties")
            .satisfies(e -> assertThat(e.getCodewozdeelobject()).as("check codewozdeelobject").isEqualTo(actual.getCodewozdeelobject()))
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheiddeelobject())
                        .as("check datumbegingeldigheiddeelobject")
                        .isEqualTo(actual.getDatumbegingeldigheiddeelobject())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheiddeelobject())
                        .as("check datumeindegeldigheiddeelobject")
                        .isEqualTo(actual.getDatumeindegeldigheiddeelobject())
            )
            .satisfies(
                e -> assertThat(e.getStatuswozdeelobject()).as("check statuswozdeelobject").isEqualTo(actual.getStatuswozdeelobject())
            )
            .satisfies(
                e -> assertThat(e.getWozdeelobjectnummer()).as("check wozdeelobjectnummer").isEqualTo(actual.getWozdeelobjectnummer())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWozdeelobjectUpdatableRelationshipsEquals(Wozdeelobject expected, Wozdeelobject actual) {}
}
