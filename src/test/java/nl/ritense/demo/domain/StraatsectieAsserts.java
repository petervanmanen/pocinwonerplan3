package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StraatsectieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStraatsectieAllPropertiesEquals(Straatsectie expected, Straatsectie actual) {
        assertStraatsectieAutoGeneratedPropertiesEquals(expected, actual);
        assertStraatsectieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStraatsectieAllUpdatablePropertiesEquals(Straatsectie expected, Straatsectie actual) {
        assertStraatsectieUpdatableFieldsEquals(expected, actual);
        assertStraatsectieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStraatsectieAutoGeneratedPropertiesEquals(Straatsectie expected, Straatsectie actual) {
        assertThat(expected)
            .as("Verify Straatsectie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStraatsectieUpdatableFieldsEquals(Straatsectie expected, Straatsectie actual) {
        assertThat(expected)
            .as("Verify Straatsectie relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getZonecode()).as("check zonecode").isEqualTo(actual.getZonecode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStraatsectieUpdatableRelationshipsEquals(Straatsectie expected, Straatsectie actual) {}
}
