package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StremmingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStremmingAllPropertiesEquals(Stremming expected, Stremming actual) {
        assertStremmingAutoGeneratedPropertiesEquals(expected, actual);
        assertStremmingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStremmingAllUpdatablePropertiesEquals(Stremming expected, Stremming actual) {
        assertStremmingUpdatableFieldsEquals(expected, actual);
        assertStremmingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStremmingAutoGeneratedPropertiesEquals(Stremming expected, Stremming actual) {
        assertThat(expected)
            .as("Verify Stremming auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStremmingUpdatableFieldsEquals(Stremming expected, Stremming actual) {
        assertThat(expected)
            .as("Verify Stremming relevant properties")
            .satisfies(e -> assertThat(e.getAantalgehinderden()).as("check aantalgehinderden").isEqualTo(actual.getAantalgehinderden()))
            .satisfies(e -> assertThat(e.getDatumaanmelding()).as("check datumaanmelding").isEqualTo(actual.getDatumaanmelding()))
            .satisfies(e -> assertThat(e.getDatumeinde()).as("check datumeinde").isEqualTo(actual.getDatumeinde()))
            .satisfies(e -> assertThat(e.getDatumstart()).as("check datumstart").isEqualTo(actual.getDatumstart()))
            .satisfies(e -> assertThat(e.getDatumwijziging()).as("check datumwijziging").isEqualTo(actual.getDatumwijziging()))
            .satisfies(e -> assertThat(e.getDelentoegestaan()).as("check delentoegestaan").isEqualTo(actual.getDelentoegestaan()))
            .satisfies(
                e ->
                    assertThat(e.getGeschiktvoorpublicatie())
                        .as("check geschiktvoorpublicatie")
                        .isEqualTo(actual.getGeschiktvoorpublicatie())
            )
            .satisfies(e -> assertThat(e.getHinderklasse()).as("check hinderklasse").isEqualTo(actual.getHinderklasse()))
            .satisfies(e -> assertThat(e.getLocatie()).as("check locatie").isEqualTo(actual.getLocatie()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStremmingUpdatableRelationshipsEquals(Stremming expected, Stremming actual) {
        assertThat(expected)
            .as("Verify Stremming relationships")
            .satisfies(e -> assertThat(e.getBetreftWegdeels()).as("check betreftWegdeels").isEqualTo(actual.getBetreftWegdeels()))
            .satisfies(
                e ->
                    assertThat(e.getIngevoerddoorMedewerker())
                        .as("check ingevoerddoorMedewerker")
                        .isEqualTo(actual.getIngevoerddoorMedewerker())
            )
            .satisfies(
                e ->
                    assertThat(e.getGewijzigddoorMedewerker())
                        .as("check gewijzigddoorMedewerker")
                        .isEqualTo(actual.getGewijzigddoorMedewerker())
            );
    }
}
