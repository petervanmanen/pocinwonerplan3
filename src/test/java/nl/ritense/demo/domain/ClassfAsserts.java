package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClassfAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassfAllPropertiesEquals(Classf expected, Classf actual) {
        assertClassfAutoGeneratedPropertiesEquals(expected, actual);
        assertClassfAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassfAllUpdatablePropertiesEquals(Classf expected, Classf actual) {
        assertClassfUpdatableFieldsEquals(expected, actual);
        assertClassfUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassfAutoGeneratedPropertiesEquals(Classf expected, Classf actual) {
        assertThat(expected)
            .as("Verify Classf auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassfUpdatableFieldsEquals(Classf expected, Classf actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClassfUpdatableRelationshipsEquals(Classf expected, Classf actual) {}
}
