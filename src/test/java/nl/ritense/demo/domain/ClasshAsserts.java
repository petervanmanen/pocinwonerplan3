package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClasshAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClasshAllPropertiesEquals(Classh expected, Classh actual) {
        assertClasshAutoGeneratedPropertiesEquals(expected, actual);
        assertClasshAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClasshAllUpdatablePropertiesEquals(Classh expected, Classh actual) {
        assertClasshUpdatableFieldsEquals(expected, actual);
        assertClasshUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClasshAutoGeneratedPropertiesEquals(Classh expected, Classh actual) {
        assertThat(expected)
            .as("Verify Classh auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClasshUpdatableFieldsEquals(Classh expected, Classh actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClasshUpdatableRelationshipsEquals(Classh expected, Classh actual) {}
}
