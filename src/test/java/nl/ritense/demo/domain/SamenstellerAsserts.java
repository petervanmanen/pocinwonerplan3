package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SamenstellerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSamenstellerAllPropertiesEquals(Samensteller expected, Samensteller actual) {
        assertSamenstellerAutoGeneratedPropertiesEquals(expected, actual);
        assertSamenstellerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSamenstellerAllUpdatablePropertiesEquals(Samensteller expected, Samensteller actual) {
        assertSamenstellerUpdatableFieldsEquals(expected, actual);
        assertSamenstellerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSamenstellerAutoGeneratedPropertiesEquals(Samensteller expected, Samensteller actual) {
        assertThat(expected)
            .as("Verify Samensteller auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSamenstellerUpdatableFieldsEquals(Samensteller expected, Samensteller actual) {
        assertThat(expected)
            .as("Verify Samensteller relevant properties")
            .satisfies(e -> assertThat(e.getRol()).as("check rol").isEqualTo(actual.getRol()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSamenstellerUpdatableRelationshipsEquals(Samensteller expected, Samensteller actual) {
        assertThat(expected)
            .as("Verify Samensteller relationships")
            .satisfies(
                e ->
                    assertThat(e.getSteltsamenTentoonstellings())
                        .as("check steltsamenTentoonstellings")
                        .isEqualTo(actual.getSteltsamenTentoonstellings())
            );
    }
}
