package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AanvraagvrijstellingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanvraagvrijstellingAllPropertiesEquals(Aanvraagvrijstelling expected, Aanvraagvrijstelling actual) {
        assertAanvraagvrijstellingAutoGeneratedPropertiesEquals(expected, actual);
        assertAanvraagvrijstellingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanvraagvrijstellingAllUpdatablePropertiesEquals(Aanvraagvrijstelling expected, Aanvraagvrijstelling actual) {
        assertAanvraagvrijstellingUpdatableFieldsEquals(expected, actual);
        assertAanvraagvrijstellingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanvraagvrijstellingAutoGeneratedPropertiesEquals(Aanvraagvrijstelling expected, Aanvraagvrijstelling actual) {
        assertThat(expected)
            .as("Verify Aanvraagvrijstelling auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanvraagvrijstellingUpdatableFieldsEquals(Aanvraagvrijstelling expected, Aanvraagvrijstelling actual) {
        assertThat(expected)
            .as("Verify Aanvraagvrijstelling relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getBuitenlandseschoollocatie())
                        .as("check buitenlandseschoollocatie")
                        .isEqualTo(actual.getBuitenlandseschoollocatie())
            )
            .satisfies(e -> assertThat(e.getDatumaanvraag()).as("check datumaanvraag").isEqualTo(actual.getDatumaanvraag()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanvraagvrijstellingUpdatableRelationshipsEquals(Aanvraagvrijstelling expected, Aanvraagvrijstelling actual) {}
}
