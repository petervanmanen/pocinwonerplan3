package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BijzonderheidAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBijzonderheidAllPropertiesEquals(Bijzonderheid expected, Bijzonderheid actual) {
        assertBijzonderheidAutoGeneratedPropertiesEquals(expected, actual);
        assertBijzonderheidAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBijzonderheidAllUpdatablePropertiesEquals(Bijzonderheid expected, Bijzonderheid actual) {
        assertBijzonderheidUpdatableFieldsEquals(expected, actual);
        assertBijzonderheidUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBijzonderheidAutoGeneratedPropertiesEquals(Bijzonderheid expected, Bijzonderheid actual) {
        assertThat(expected)
            .as("Verify Bijzonderheid auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBijzonderheidUpdatableFieldsEquals(Bijzonderheid expected, Bijzonderheid actual) {
        assertThat(expected)
            .as("Verify Bijzonderheid relevant properties")
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBijzonderheidUpdatableRelationshipsEquals(Bijzonderheid expected, Bijzonderheid actual) {
        assertThat(expected)
            .as("Verify Bijzonderheid relationships")
            .satisfies(
                e ->
                    assertThat(e.getIsvansoortBijzonderheidsoort())
                        .as("check isvansoortBijzonderheidsoort")
                        .isEqualTo(actual.getIsvansoortBijzonderheidsoort())
            );
    }
}
