package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductgroepAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductgroepAllPropertiesEquals(Productgroep expected, Productgroep actual) {
        assertProductgroepAutoGeneratedPropertiesEquals(expected, actual);
        assertProductgroepAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductgroepAllUpdatablePropertiesEquals(Productgroep expected, Productgroep actual) {
        assertProductgroepUpdatableFieldsEquals(expected, actual);
        assertProductgroepUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductgroepAutoGeneratedPropertiesEquals(Productgroep expected, Productgroep actual) {
        assertThat(expected)
            .as("Verify Productgroep auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductgroepUpdatableFieldsEquals(Productgroep expected, Productgroep actual) {
        assertThat(expected)
            .as("Verify Productgroep relevant properties")
            .satisfies(e -> assertThat(e.getBeslisboom()).as("check beslisboom").isEqualTo(actual.getBeslisboom()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductgroepUpdatableRelationshipsEquals(Productgroep expected, Productgroep actual) {
        assertThat(expected)
            .as("Verify Productgroep relationships")
            .satisfies(e -> assertThat(e.getValtbinnenProducts()).as("check valtbinnenProducts").isEqualTo(actual.getValtbinnenProducts()));
    }
}
