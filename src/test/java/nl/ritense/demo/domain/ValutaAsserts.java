package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ValutaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValutaAllPropertiesEquals(Valuta expected, Valuta actual) {
        assertValutaAutoGeneratedPropertiesEquals(expected, actual);
        assertValutaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValutaAllUpdatablePropertiesEquals(Valuta expected, Valuta actual) {
        assertValutaUpdatableFieldsEquals(expected, actual);
        assertValutaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValutaAutoGeneratedPropertiesEquals(Valuta expected, Valuta actual) {
        assertThat(expected)
            .as("Verify Valuta auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValutaUpdatableFieldsEquals(Valuta expected, Valuta actual) {
        assertThat(expected)
            .as("Verify Valuta relevant properties")
            .satisfies(
                e -> assertThat(e.getDatumbegingeldigheid()).as("check datumbegingeldigheid").isEqualTo(actual.getDatumbegingeldigheid())
            )
            .satisfies(
                e -> assertThat(e.getDatumeindegeldigheid()).as("check datumeindegeldigheid").isEqualTo(actual.getDatumeindegeldigheid())
            )
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getValutacode()).as("check valutacode").isEqualTo(actual.getValutacode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValutaUpdatableRelationshipsEquals(Valuta expected, Valuta actual) {}
}
