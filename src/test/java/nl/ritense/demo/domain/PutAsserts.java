package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PutAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPutAllPropertiesEquals(Put expected, Put actual) {
        assertPutAutoGeneratedPropertiesEquals(expected, actual);
        assertPutAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPutAllUpdatablePropertiesEquals(Put expected, Put actual) {
        assertPutUpdatableFieldsEquals(expected, actual);
        assertPutUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPutAutoGeneratedPropertiesEquals(Put expected, Put actual) {
        assertThat(expected)
            .as("Verify Put auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPutUpdatableFieldsEquals(Put expected, Put actual) {
        assertThat(expected)
            .as("Verify Put relevant properties")
            .satisfies(e -> assertThat(e.getKey()).as("check key").isEqualTo(actual.getKey()))
            .satisfies(e -> assertThat(e.getProjectcd()).as("check projectcd").isEqualTo(actual.getProjectcd()))
            .satisfies(e -> assertThat(e.getPutnummer()).as("check putnummer").isEqualTo(actual.getPutnummer()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPutUpdatableRelationshipsEquals(Put expected, Put actual) {
        assertThat(expected)
            .as("Verify Put relationships")
            .satisfies(
                e -> assertThat(e.getHeeftlocatieLocaties()).as("check heeftlocatieLocaties").isEqualTo(actual.getHeeftlocatieLocaties())
            )
            .satisfies(e -> assertThat(e.getHeeftProject()).as("check heeftProject").isEqualTo(actual.getHeeftProject()));
    }
}
