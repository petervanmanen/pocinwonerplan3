package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SubproducttypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubproducttypeAllPropertiesEquals(Subproducttype expected, Subproducttype actual) {
        assertSubproducttypeAutoGeneratedPropertiesEquals(expected, actual);
        assertSubproducttypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubproducttypeAllUpdatablePropertiesEquals(Subproducttype expected, Subproducttype actual) {
        assertSubproducttypeUpdatableFieldsEquals(expected, actual);
        assertSubproducttypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubproducttypeAutoGeneratedPropertiesEquals(Subproducttype expected, Subproducttype actual) {
        assertThat(expected)
            .as("Verify Subproducttype auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubproducttypeUpdatableFieldsEquals(Subproducttype expected, Subproducttype actual) {
        assertThat(expected)
            .as("Verify Subproducttype relevant properties")
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getPrioriteit()).as("check prioriteit").isEqualTo(actual.getPrioriteit()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubproducttypeUpdatableRelationshipsEquals(Subproducttype expected, Subproducttype actual) {}
}
