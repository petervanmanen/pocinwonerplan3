package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AdresaanduidingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresaanduidingAllPropertiesEquals(Adresaanduiding expected, Adresaanduiding actual) {
        assertAdresaanduidingAutoGeneratedPropertiesEquals(expected, actual);
        assertAdresaanduidingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresaanduidingAllUpdatablePropertiesEquals(Adresaanduiding expected, Adresaanduiding actual) {
        assertAdresaanduidingUpdatableFieldsEquals(expected, actual);
        assertAdresaanduidingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresaanduidingAutoGeneratedPropertiesEquals(Adresaanduiding expected, Adresaanduiding actual) {
        assertThat(expected)
            .as("Verify Adresaanduiding auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresaanduidingUpdatableFieldsEquals(Adresaanduiding expected, Adresaanduiding actual) {
        assertThat(expected)
            .as("Verify Adresaanduiding relevant properties")
            .satisfies(e -> assertThat(e.getAdresaanduiding()).as("check adresaanduiding").isEqualTo(actual.getAdresaanduiding()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresaanduidingUpdatableRelationshipsEquals(Adresaanduiding expected, Adresaanduiding actual) {
        assertThat(expected)
            .as("Verify Adresaanduiding relationships")
            .satisfies(
                e ->
                    assertThat(e.getVerwijstnaarNummeraanduiding())
                        .as("check verwijstnaarNummeraanduiding")
                        .isEqualTo(actual.getVerwijstnaarNummeraanduiding())
            );
    }
}
