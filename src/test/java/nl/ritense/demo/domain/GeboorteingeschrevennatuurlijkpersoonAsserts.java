package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GeboorteingeschrevennatuurlijkpersoonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGeboorteingeschrevennatuurlijkpersoonAllPropertiesEquals(
        Geboorteingeschrevennatuurlijkpersoon expected,
        Geboorteingeschrevennatuurlijkpersoon actual
    ) {
        assertGeboorteingeschrevennatuurlijkpersoonAutoGeneratedPropertiesEquals(expected, actual);
        assertGeboorteingeschrevennatuurlijkpersoonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGeboorteingeschrevennatuurlijkpersoonAllUpdatablePropertiesEquals(
        Geboorteingeschrevennatuurlijkpersoon expected,
        Geboorteingeschrevennatuurlijkpersoon actual
    ) {
        assertGeboorteingeschrevennatuurlijkpersoonUpdatableFieldsEquals(expected, actual);
        assertGeboorteingeschrevennatuurlijkpersoonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGeboorteingeschrevennatuurlijkpersoonAutoGeneratedPropertiesEquals(
        Geboorteingeschrevennatuurlijkpersoon expected,
        Geboorteingeschrevennatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Geboorteingeschrevennatuurlijkpersoon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGeboorteingeschrevennatuurlijkpersoonUpdatableFieldsEquals(
        Geboorteingeschrevennatuurlijkpersoon expected,
        Geboorteingeschrevennatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Geboorteingeschrevennatuurlijkpersoon relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getBuitenlandseplaatsgeboorte())
                        .as("check buitenlandseplaatsgeboorte")
                        .isEqualTo(actual.getBuitenlandseplaatsgeboorte())
            )
            .satisfies(
                e ->
                    assertThat(e.getBuitenlandseregiogeboorte())
                        .as("check buitenlandseregiogeboorte")
                        .isEqualTo(actual.getBuitenlandseregiogeboorte())
            )
            .satisfies(e -> assertThat(e.getDatumgeboorte()).as("check datumgeboorte").isEqualTo(actual.getDatumgeboorte()))
            .satisfies(e -> assertThat(e.getGemeentegeboorte()).as("check gemeentegeboorte").isEqualTo(actual.getGemeentegeboorte()))
            .satisfies(
                e -> assertThat(e.getLandofgebiedgeboorte()).as("check landofgebiedgeboorte").isEqualTo(actual.getLandofgebiedgeboorte())
            )
            .satisfies(
                e ->
                    assertThat(e.getOmschrijvinglocatiegeboorte())
                        .as("check omschrijvinglocatiegeboorte")
                        .isEqualTo(actual.getOmschrijvinglocatiegeboorte())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGeboorteingeschrevennatuurlijkpersoonUpdatableRelationshipsEquals(
        Geboorteingeschrevennatuurlijkpersoon expected,
        Geboorteingeschrevennatuurlijkpersoon actual
    ) {}
}
