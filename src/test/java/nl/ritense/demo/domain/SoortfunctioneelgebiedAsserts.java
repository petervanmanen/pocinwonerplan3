package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SoortfunctioneelgebiedAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortfunctioneelgebiedAllPropertiesEquals(Soortfunctioneelgebied expected, Soortfunctioneelgebied actual) {
        assertSoortfunctioneelgebiedAutoGeneratedPropertiesEquals(expected, actual);
        assertSoortfunctioneelgebiedAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortfunctioneelgebiedAllUpdatablePropertiesEquals(
        Soortfunctioneelgebied expected,
        Soortfunctioneelgebied actual
    ) {
        assertSoortfunctioneelgebiedUpdatableFieldsEquals(expected, actual);
        assertSoortfunctioneelgebiedUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortfunctioneelgebiedAutoGeneratedPropertiesEquals(
        Soortfunctioneelgebied expected,
        Soortfunctioneelgebied actual
    ) {
        assertThat(expected)
            .as("Verify Soortfunctioneelgebied auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortfunctioneelgebiedUpdatableFieldsEquals(Soortfunctioneelgebied expected, Soortfunctioneelgebied actual) {
        assertThat(expected)
            .as("Verify Soortfunctioneelgebied relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getIndicatieplusbrpopulatie())
                        .as("check indicatieplusbrpopulatie")
                        .isEqualTo(actual.getIndicatieplusbrpopulatie())
            )
            .satisfies(
                e -> assertThat(e.getTypefunctioneelgebied()).as("check typefunctioneelgebied").isEqualTo(actual.getTypefunctioneelgebied())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortfunctioneelgebiedUpdatableRelationshipsEquals(
        Soortfunctioneelgebied expected,
        Soortfunctioneelgebied actual
    ) {}
}
