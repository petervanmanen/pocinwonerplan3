package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ThemaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThemaAllPropertiesEquals(Thema expected, Thema actual) {
        assertThemaAutoGeneratedPropertiesEquals(expected, actual);
        assertThemaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThemaAllUpdatablePropertiesEquals(Thema expected, Thema actual) {
        assertThemaUpdatableFieldsEquals(expected, actual);
        assertThemaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThemaAutoGeneratedPropertiesEquals(Thema expected, Thema actual) {
        assertThat(expected)
            .as("Verify Thema auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThemaUpdatableFieldsEquals(Thema expected, Thema actual) {
        assertThat(expected)
            .as("Verify Thema relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertThemaUpdatableRelationshipsEquals(Thema expected, Thema actual) {
        assertThat(expected)
            .as("Verify Thema relationships")
            .satisfies(e -> assertThat(e.getSubthemaThema2()).as("check subthemaThema2").isEqualTo(actual.getSubthemaThema2()))
            .satisfies(
                e -> assertThat(e.getHeeftthemaRegelteksts()).as("check heeftthemaRegelteksts").isEqualTo(actual.getHeeftthemaRegelteksts())
            );
    }
}
