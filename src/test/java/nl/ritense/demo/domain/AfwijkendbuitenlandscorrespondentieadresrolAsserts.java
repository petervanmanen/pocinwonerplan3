package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AfwijkendbuitenlandscorrespondentieadresrolAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAfwijkendbuitenlandscorrespondentieadresrolAllPropertiesEquals(
        Afwijkendbuitenlandscorrespondentieadresrol expected,
        Afwijkendbuitenlandscorrespondentieadresrol actual
    ) {
        assertAfwijkendbuitenlandscorrespondentieadresrolAutoGeneratedPropertiesEquals(expected, actual);
        assertAfwijkendbuitenlandscorrespondentieadresrolAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAfwijkendbuitenlandscorrespondentieadresrolAllUpdatablePropertiesEquals(
        Afwijkendbuitenlandscorrespondentieadresrol expected,
        Afwijkendbuitenlandscorrespondentieadresrol actual
    ) {
        assertAfwijkendbuitenlandscorrespondentieadresrolUpdatableFieldsEquals(expected, actual);
        assertAfwijkendbuitenlandscorrespondentieadresrolUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAfwijkendbuitenlandscorrespondentieadresrolAutoGeneratedPropertiesEquals(
        Afwijkendbuitenlandscorrespondentieadresrol expected,
        Afwijkendbuitenlandscorrespondentieadresrol actual
    ) {
        assertThat(expected)
            .as("Verify Afwijkendbuitenlandscorrespondentieadresrol auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAfwijkendbuitenlandscorrespondentieadresrolUpdatableFieldsEquals(
        Afwijkendbuitenlandscorrespondentieadresrol expected,
        Afwijkendbuitenlandscorrespondentieadresrol actual
    ) {
        assertThat(expected)
            .as("Verify Afwijkendbuitenlandscorrespondentieadresrol relevant properties")
            .satisfies(e -> assertThat(e.getAdresbuitenland1()).as("check adresbuitenland1").isEqualTo(actual.getAdresbuitenland1()))
            .satisfies(e -> assertThat(e.getAdresbuitenland2()).as("check adresbuitenland2").isEqualTo(actual.getAdresbuitenland2()))
            .satisfies(e -> assertThat(e.getAdresbuitenland3()).as("check adresbuitenland3").isEqualTo(actual.getAdresbuitenland3()))
            .satisfies(e -> assertThat(e.getLandpostadres()).as("check landpostadres").isEqualTo(actual.getLandpostadres()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAfwijkendbuitenlandscorrespondentieadresrolUpdatableRelationshipsEquals(
        Afwijkendbuitenlandscorrespondentieadresrol expected,
        Afwijkendbuitenlandscorrespondentieadresrol actual
    ) {}
}
