package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SoortkunstwerkAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortkunstwerkAllPropertiesEquals(Soortkunstwerk expected, Soortkunstwerk actual) {
        assertSoortkunstwerkAutoGeneratedPropertiesEquals(expected, actual);
        assertSoortkunstwerkAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortkunstwerkAllUpdatablePropertiesEquals(Soortkunstwerk expected, Soortkunstwerk actual) {
        assertSoortkunstwerkUpdatableFieldsEquals(expected, actual);
        assertSoortkunstwerkUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortkunstwerkAutoGeneratedPropertiesEquals(Soortkunstwerk expected, Soortkunstwerk actual) {
        assertThat(expected)
            .as("Verify Soortkunstwerk auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortkunstwerkUpdatableFieldsEquals(Soortkunstwerk expected, Soortkunstwerk actual) {
        assertThat(expected)
            .as("Verify Soortkunstwerk relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getIndicatieplusbrpopulatie())
                        .as("check indicatieplusbrpopulatie")
                        .isEqualTo(actual.getIndicatieplusbrpopulatie())
            )
            .satisfies(e -> assertThat(e.getTypekunstwerk()).as("check typekunstwerk").isEqualTo(actual.getTypekunstwerk()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortkunstwerkUpdatableRelationshipsEquals(Soortkunstwerk expected, Soortkunstwerk actual) {}
}
