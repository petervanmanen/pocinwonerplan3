package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BemalingsgebiedAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBemalingsgebiedAllPropertiesEquals(Bemalingsgebied expected, Bemalingsgebied actual) {
        assertBemalingsgebiedAutoGeneratedPropertiesEquals(expected, actual);
        assertBemalingsgebiedAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBemalingsgebiedAllUpdatablePropertiesEquals(Bemalingsgebied expected, Bemalingsgebied actual) {
        assertBemalingsgebiedUpdatableFieldsEquals(expected, actual);
        assertBemalingsgebiedUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBemalingsgebiedAutoGeneratedPropertiesEquals(Bemalingsgebied expected, Bemalingsgebied actual) {
        assertThat(expected)
            .as("Verify Bemalingsgebied auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBemalingsgebiedUpdatableFieldsEquals(Bemalingsgebied expected, Bemalingsgebied actual) {
        assertThat(expected)
            .as("Verify Bemalingsgebied relevant properties")
            .satisfies(e -> assertThat(e.getRioleringsgebied()).as("check rioleringsgebied").isEqualTo(actual.getRioleringsgebied()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBemalingsgebiedUpdatableRelationshipsEquals(Bemalingsgebied expected, Bemalingsgebied actual) {}
}
