package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VuilniswagenAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVuilniswagenAllPropertiesEquals(Vuilniswagen expected, Vuilniswagen actual) {
        assertVuilniswagenAutoGeneratedPropertiesEquals(expected, actual);
        assertVuilniswagenAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVuilniswagenAllUpdatablePropertiesEquals(Vuilniswagen expected, Vuilniswagen actual) {
        assertVuilniswagenUpdatableFieldsEquals(expected, actual);
        assertVuilniswagenUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVuilniswagenAutoGeneratedPropertiesEquals(Vuilniswagen expected, Vuilniswagen actual) {
        assertThat(expected)
            .as("Verify Vuilniswagen auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVuilniswagenUpdatableFieldsEquals(Vuilniswagen expected, Vuilniswagen actual) {
        assertThat(expected)
            .as("Verify Vuilniswagen relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getKenteken()).as("check kenteken").isEqualTo(actual.getKenteken()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVuilniswagenUpdatableRelationshipsEquals(Vuilniswagen expected, Vuilniswagen actual) {
        assertThat(expected)
            .as("Verify Vuilniswagen relationships")
            .satisfies(
                e ->
                    assertThat(e.getGeschiktvoorContainertypes())
                        .as("check geschiktvoorContainertypes")
                        .isEqualTo(actual.getGeschiktvoorContainertypes())
            );
    }
}
