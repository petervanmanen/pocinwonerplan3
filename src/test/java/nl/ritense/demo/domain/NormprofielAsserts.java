package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NormprofielAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNormprofielAllPropertiesEquals(Normprofiel expected, Normprofiel actual) {
        assertNormprofielAutoGeneratedPropertiesEquals(expected, actual);
        assertNormprofielAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNormprofielAllUpdatablePropertiesEquals(Normprofiel expected, Normprofiel actual) {
        assertNormprofielUpdatableFieldsEquals(expected, actual);
        assertNormprofielUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNormprofielAutoGeneratedPropertiesEquals(Normprofiel expected, Normprofiel actual) {
        assertThat(expected)
            .as("Verify Normprofiel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNormprofielUpdatableFieldsEquals(Normprofiel expected, Normprofiel actual) {
        assertThat(expected)
            .as("Verify Normprofiel relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getSchaal()).as("check schaal").isEqualTo(actual.getSchaal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNormprofielUpdatableRelationshipsEquals(Normprofiel expected, Normprofiel actual) {}
}
