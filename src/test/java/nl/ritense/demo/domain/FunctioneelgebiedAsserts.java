package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FunctioneelgebiedAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFunctioneelgebiedAllPropertiesEquals(Functioneelgebied expected, Functioneelgebied actual) {
        assertFunctioneelgebiedAutoGeneratedPropertiesEquals(expected, actual);
        assertFunctioneelgebiedAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFunctioneelgebiedAllUpdatablePropertiesEquals(Functioneelgebied expected, Functioneelgebied actual) {
        assertFunctioneelgebiedUpdatableFieldsEquals(expected, actual);
        assertFunctioneelgebiedUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFunctioneelgebiedAutoGeneratedPropertiesEquals(Functioneelgebied expected, Functioneelgebied actual) {
        assertThat(expected)
            .as("Verify Functioneelgebied auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFunctioneelgebiedUpdatableFieldsEquals(Functioneelgebied expected, Functioneelgebied actual) {
        assertThat(expected)
            .as("Verify Functioneelgebied relevant properties")
            .satisfies(
                e -> assertThat(e.getFunctioneelgebiedcode()).as("check functioneelgebiedcode").isEqualTo(actual.getFunctioneelgebiedcode())
            )
            .satisfies(
                e -> assertThat(e.getFunctioneelgebiednaam()).as("check functioneelgebiednaam").isEqualTo(actual.getFunctioneelgebiednaam())
            )
            .satisfies(e -> assertThat(e.getOmtrek()).as("check omtrek").isEqualTo(actual.getOmtrek()))
            .satisfies(e -> assertThat(e.getOppervlakte()).as("check oppervlakte").isEqualTo(actual.getOppervlakte()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFunctioneelgebiedUpdatableRelationshipsEquals(Functioneelgebied expected, Functioneelgebied actual) {}
}
