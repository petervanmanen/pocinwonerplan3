package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PutdekselAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPutdekselAllPropertiesEquals(Putdeksel expected, Putdeksel actual) {
        assertPutdekselAutoGeneratedPropertiesEquals(expected, actual);
        assertPutdekselAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPutdekselAllUpdatablePropertiesEquals(Putdeksel expected, Putdeksel actual) {
        assertPutdekselUpdatableFieldsEquals(expected, actual);
        assertPutdekselUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPutdekselAutoGeneratedPropertiesEquals(Putdeksel expected, Putdeksel actual) {
        assertThat(expected)
            .as("Verify Putdeksel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPutdekselUpdatableFieldsEquals(Putdeksel expected, Putdeksel actual) {
        assertThat(expected)
            .as("Verify Putdeksel relevant properties")
            .satisfies(e -> assertThat(e.getDiameter()).as("check diameter").isEqualTo(actual.getDiameter()))
            .satisfies(e -> assertThat(e.getPut()).as("check put").isEqualTo(actual.getPut()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getVorm()).as("check vorm").isEqualTo(actual.getVorm()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPutdekselUpdatableRelationshipsEquals(Putdeksel expected, Putdeksel actual) {}
}
