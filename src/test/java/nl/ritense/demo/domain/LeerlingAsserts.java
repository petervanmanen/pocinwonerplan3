package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LeerlingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLeerlingAllPropertiesEquals(Leerling expected, Leerling actual) {
        assertLeerlingAutoGeneratedPropertiesEquals(expected, actual);
        assertLeerlingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLeerlingAllUpdatablePropertiesEquals(Leerling expected, Leerling actual) {
        assertLeerlingUpdatableFieldsEquals(expected, actual);
        assertLeerlingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLeerlingAutoGeneratedPropertiesEquals(Leerling expected, Leerling actual) {
        assertThat(expected)
            .as("Verify Leerling auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLeerlingUpdatableFieldsEquals(Leerling expected, Leerling actual) {
        assertThat(expected)
            .as("Verify Leerling relevant properties")
            .satisfies(e -> assertThat(e.getKwetsbarejongere()).as("check kwetsbarejongere").isEqualTo(actual.getKwetsbarejongere()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLeerlingUpdatableRelationshipsEquals(Leerling expected, Leerling actual) {
        assertThat(expected)
            .as("Verify Leerling relationships")
            .satisfies(
                e ->
                    assertThat(e.getHeeftStartkwalificatie())
                        .as("check heeftStartkwalificatie")
                        .isEqualTo(actual.getHeeftStartkwalificatie())
            );
    }
}
