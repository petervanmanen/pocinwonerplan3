package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NaamgebruiknatuurlijkpersoonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamgebruiknatuurlijkpersoonAllPropertiesEquals(
        Naamgebruiknatuurlijkpersoon expected,
        Naamgebruiknatuurlijkpersoon actual
    ) {
        assertNaamgebruiknatuurlijkpersoonAutoGeneratedPropertiesEquals(expected, actual);
        assertNaamgebruiknatuurlijkpersoonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamgebruiknatuurlijkpersoonAllUpdatablePropertiesEquals(
        Naamgebruiknatuurlijkpersoon expected,
        Naamgebruiknatuurlijkpersoon actual
    ) {
        assertNaamgebruiknatuurlijkpersoonUpdatableFieldsEquals(expected, actual);
        assertNaamgebruiknatuurlijkpersoonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamgebruiknatuurlijkpersoonAutoGeneratedPropertiesEquals(
        Naamgebruiknatuurlijkpersoon expected,
        Naamgebruiknatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Naamgebruiknatuurlijkpersoon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamgebruiknatuurlijkpersoonUpdatableFieldsEquals(
        Naamgebruiknatuurlijkpersoon expected,
        Naamgebruiknatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Naamgebruiknatuurlijkpersoon relevant properties")
            .satisfies(
                e -> assertThat(e.getAanhefaanschrijving()).as("check aanhefaanschrijving").isEqualTo(actual.getAanhefaanschrijving())
            )
            .satisfies(
                e ->
                    assertThat(e.getAdellijketitelnaamgebruik())
                        .as("check adellijketitelnaamgebruik")
                        .isEqualTo(actual.getAdellijketitelnaamgebruik())
            )
            .satisfies(
                e ->
                    assertThat(e.getGeslachtsnaamstamnaamgebruik())
                        .as("check geslachtsnaamstamnaamgebruik")
                        .isEqualTo(actual.getGeslachtsnaamstamnaamgebruik())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamgebruiknatuurlijkpersoonUpdatableRelationshipsEquals(
        Naamgebruiknatuurlijkpersoon expected,
        Naamgebruiknatuurlijkpersoon actual
    ) {}
}
