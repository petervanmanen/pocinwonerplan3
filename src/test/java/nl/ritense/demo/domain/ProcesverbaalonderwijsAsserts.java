package nl.ritense.demo.domain;

import static nl.ritense.demo.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class ProcesverbaalonderwijsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcesverbaalonderwijsAllPropertiesEquals(Procesverbaalonderwijs expected, Procesverbaalonderwijs actual) {
        assertProcesverbaalonderwijsAutoGeneratedPropertiesEquals(expected, actual);
        assertProcesverbaalonderwijsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcesverbaalonderwijsAllUpdatablePropertiesEquals(
        Procesverbaalonderwijs expected,
        Procesverbaalonderwijs actual
    ) {
        assertProcesverbaalonderwijsUpdatableFieldsEquals(expected, actual);
        assertProcesverbaalonderwijsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcesverbaalonderwijsAutoGeneratedPropertiesEquals(
        Procesverbaalonderwijs expected,
        Procesverbaalonderwijs actual
    ) {
        assertThat(expected)
            .as("Verify Procesverbaalonderwijs auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcesverbaalonderwijsUpdatableFieldsEquals(Procesverbaalonderwijs expected, Procesverbaalonderwijs actual) {
        assertThat(expected)
            .as("Verify Procesverbaalonderwijs relevant properties")
            .satisfies(e -> assertThat(e.getDatumafgehandeld()).as("check datumafgehandeld").isEqualTo(actual.getDatumafgehandeld()))
            .satisfies(
                e -> assertThat(e.getDatumeindeproeftijd()).as("check datumeindeproeftijd").isEqualTo(actual.getDatumeindeproeftijd())
            )
            .satisfies(e -> assertThat(e.getDatumingelicht()).as("check datumingelicht").isEqualTo(actual.getDatumingelicht()))
            .satisfies(e -> assertThat(e.getDatumuitspraak()).as("check datumuitspraak").isEqualTo(actual.getDatumuitspraak()))
            .satisfies(e -> assertThat(e.getDatumzitting()).as("check datumzitting").isEqualTo(actual.getDatumzitting()))
            .satisfies(
                e ->
                    assertThat(e.getGeldboete()).as("check geldboete").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getGeldboete())
            )
            .satisfies(
                e ->
                    assertThat(e.getGeldboetevoorwaardelijk())
                        .as("check geldboetevoorwaardelijk")
                        .isEqualTo(actual.getGeldboetevoorwaardelijk())
            )
            .satisfies(e -> assertThat(e.getOpmerkingen()).as("check opmerkingen").isEqualTo(actual.getOpmerkingen()))
            .satisfies(e -> assertThat(e.getProeftijd()).as("check proeftijd").isEqualTo(actual.getProeftijd()))
            .satisfies(e -> assertThat(e.getReden()).as("check reden").isEqualTo(actual.getReden()))
            .satisfies(e -> assertThat(e.getSanctiesoort()).as("check sanctiesoort").isEqualTo(actual.getSanctiesoort()))
            .satisfies(e -> assertThat(e.getUitspraak()).as("check uitspraak").isEqualTo(actual.getUitspraak()))
            .satisfies(e -> assertThat(e.getVerzuimsoort()).as("check verzuimsoort").isEqualTo(actual.getVerzuimsoort()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProcesverbaalonderwijsUpdatableRelationshipsEquals(
        Procesverbaalonderwijs expected,
        Procesverbaalonderwijs actual
    ) {}
}
