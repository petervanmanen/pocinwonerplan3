package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BedrijfAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBedrijfAllPropertiesEquals(Bedrijf expected, Bedrijf actual) {
        assertBedrijfAutoGeneratedPropertiesEquals(expected, actual);
        assertBedrijfAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBedrijfAllUpdatablePropertiesEquals(Bedrijf expected, Bedrijf actual) {
        assertBedrijfUpdatableFieldsEquals(expected, actual);
        assertBedrijfUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBedrijfAutoGeneratedPropertiesEquals(Bedrijf expected, Bedrijf actual) {
        assertThat(expected)
            .as("Verify Bedrijf auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBedrijfUpdatableFieldsEquals(Bedrijf expected, Bedrijf actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBedrijfUpdatableRelationshipsEquals(Bedrijf expected, Bedrijf actual) {}
}
