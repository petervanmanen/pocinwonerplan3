package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MaterielehistorieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterielehistorieAllPropertiesEquals(Materielehistorie expected, Materielehistorie actual) {
        assertMaterielehistorieAutoGeneratedPropertiesEquals(expected, actual);
        assertMaterielehistorieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterielehistorieAllUpdatablePropertiesEquals(Materielehistorie expected, Materielehistorie actual) {
        assertMaterielehistorieUpdatableFieldsEquals(expected, actual);
        assertMaterielehistorieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterielehistorieAutoGeneratedPropertiesEquals(Materielehistorie expected, Materielehistorie actual) {
        assertThat(expected)
            .as("Verify Materielehistorie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterielehistorieUpdatableFieldsEquals(Materielehistorie expected, Materielehistorie actual) {
        assertThat(expected)
            .as("Verify Materielehistorie relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidgegevens())
                        .as("check datumbegingeldigheidgegevens")
                        .isEqualTo(actual.getDatumbegingeldigheidgegevens())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidgegevens())
                        .as("check datumeindegeldigheidgegevens")
                        .isEqualTo(actual.getDatumeindegeldigheidgegevens())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterielehistorieUpdatableRelationshipsEquals(Materielehistorie expected, Materielehistorie actual) {}
}
