package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BergingsbassinAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBergingsbassinAllPropertiesEquals(Bergingsbassin expected, Bergingsbassin actual) {
        assertBergingsbassinAutoGeneratedPropertiesEquals(expected, actual);
        assertBergingsbassinAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBergingsbassinAllUpdatablePropertiesEquals(Bergingsbassin expected, Bergingsbassin actual) {
        assertBergingsbassinUpdatableFieldsEquals(expected, actual);
        assertBergingsbassinUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBergingsbassinAutoGeneratedPropertiesEquals(Bergingsbassin expected, Bergingsbassin actual) {
        assertThat(expected)
            .as("Verify Bergingsbassin auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBergingsbassinUpdatableFieldsEquals(Bergingsbassin expected, Bergingsbassin actual) {
        assertThat(expected)
            .as("Verify Bergingsbassin relevant properties")
            .satisfies(e -> assertThat(e.getBergendvermogen()).as("check bergendvermogen").isEqualTo(actual.getBergendvermogen()))
            .satisfies(
                e ->
                    assertThat(e.getPompledigingsvoorziening())
                        .as("check pompledigingsvoorziening")
                        .isEqualTo(actual.getPompledigingsvoorziening())
            )
            .satisfies(
                e -> assertThat(e.getPompspoelvoorziening()).as("check pompspoelvoorziening").isEqualTo(actual.getPompspoelvoorziening())
            )
            .satisfies(e -> assertThat(e.getSpoelleiding()).as("check spoelleiding").isEqualTo(actual.getSpoelleiding()))
            .satisfies(e -> assertThat(e.getVorm()).as("check vorm").isEqualTo(actual.getVorm()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBergingsbassinUpdatableRelationshipsEquals(Bergingsbassin expected, Bergingsbassin actual) {}
}
