package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MeldingeigenbijdrageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMeldingeigenbijdrageAllPropertiesEquals(Meldingeigenbijdrage expected, Meldingeigenbijdrage actual) {
        assertMeldingeigenbijdrageAutoGeneratedPropertiesEquals(expected, actual);
        assertMeldingeigenbijdrageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMeldingeigenbijdrageAllUpdatablePropertiesEquals(Meldingeigenbijdrage expected, Meldingeigenbijdrage actual) {
        assertMeldingeigenbijdrageUpdatableFieldsEquals(expected, actual);
        assertMeldingeigenbijdrageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMeldingeigenbijdrageAutoGeneratedPropertiesEquals(Meldingeigenbijdrage expected, Meldingeigenbijdrage actual) {
        assertThat(expected)
            .as("Verify Meldingeigenbijdrage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMeldingeigenbijdrageUpdatableFieldsEquals(Meldingeigenbijdrage expected, Meldingeigenbijdrage actual) {
        assertThat(expected)
            .as("Verify Meldingeigenbijdrage relevant properties")
            .satisfies(e -> assertThat(e.getDatumstart()).as("check datumstart").isEqualTo(actual.getDatumstart()))
            .satisfies(e -> assertThat(e.getDatumstop()).as("check datumstop").isEqualTo(actual.getDatumstop()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMeldingeigenbijdrageUpdatableRelationshipsEquals(Meldingeigenbijdrage expected, Meldingeigenbijdrage actual) {}
}
