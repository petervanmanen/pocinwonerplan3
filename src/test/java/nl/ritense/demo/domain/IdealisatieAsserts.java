package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IdealisatieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIdealisatieAllPropertiesEquals(Idealisatie expected, Idealisatie actual) {
        assertIdealisatieAutoGeneratedPropertiesEquals(expected, actual);
        assertIdealisatieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIdealisatieAllUpdatablePropertiesEquals(Idealisatie expected, Idealisatie actual) {
        assertIdealisatieUpdatableFieldsEquals(expected, actual);
        assertIdealisatieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIdealisatieAutoGeneratedPropertiesEquals(Idealisatie expected, Idealisatie actual) {
        assertThat(expected)
            .as("Verify Idealisatie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIdealisatieUpdatableFieldsEquals(Idealisatie expected, Idealisatie actual) {
        assertThat(expected)
            .as("Verify Idealisatie relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIdealisatieUpdatableRelationshipsEquals(Idealisatie expected, Idealisatie actual) {
        assertThat(expected)
            .as("Verify Idealisatie relationships")
            .satisfies(
                e ->
                    assertThat(e.getHeeftidealisatieRegelteksts())
                        .as("check heeftidealisatieRegelteksts")
                        .isEqualTo(actual.getHeeftidealisatieRegelteksts())
            );
    }
}
