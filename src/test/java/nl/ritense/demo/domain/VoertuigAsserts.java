package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VoertuigAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoertuigAllPropertiesEquals(Voertuig expected, Voertuig actual) {
        assertVoertuigAutoGeneratedPropertiesEquals(expected, actual);
        assertVoertuigAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoertuigAllUpdatablePropertiesEquals(Voertuig expected, Voertuig actual) {
        assertVoertuigUpdatableFieldsEquals(expected, actual);
        assertVoertuigUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoertuigAutoGeneratedPropertiesEquals(Voertuig expected, Voertuig actual) {
        assertThat(expected)
            .as("Verify Voertuig auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoertuigUpdatableFieldsEquals(Voertuig expected, Voertuig actual) {
        assertThat(expected)
            .as("Verify Voertuig relevant properties")
            .satisfies(e -> assertThat(e.getKenteken()).as("check kenteken").isEqualTo(actual.getKenteken()))
            .satisfies(e -> assertThat(e.getKleur()).as("check kleur").isEqualTo(actual.getKleur()))
            .satisfies(e -> assertThat(e.getLand()).as("check land").isEqualTo(actual.getLand()))
            .satisfies(e -> assertThat(e.getMerk()).as("check merk").isEqualTo(actual.getMerk()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoertuigUpdatableRelationshipsEquals(Voertuig expected, Voertuig actual) {}
}
