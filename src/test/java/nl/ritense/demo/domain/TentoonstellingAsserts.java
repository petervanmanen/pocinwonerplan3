package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TentoonstellingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTentoonstellingAllPropertiesEquals(Tentoonstelling expected, Tentoonstelling actual) {
        assertTentoonstellingAutoGeneratedPropertiesEquals(expected, actual);
        assertTentoonstellingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTentoonstellingAllUpdatablePropertiesEquals(Tentoonstelling expected, Tentoonstelling actual) {
        assertTentoonstellingUpdatableFieldsEquals(expected, actual);
        assertTentoonstellingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTentoonstellingAutoGeneratedPropertiesEquals(Tentoonstelling expected, Tentoonstelling actual) {
        assertThat(expected)
            .as("Verify Tentoonstelling auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTentoonstellingUpdatableFieldsEquals(Tentoonstelling expected, Tentoonstelling actual) {
        assertThat(expected)
            .as("Verify Tentoonstelling relevant properties")
            .satisfies(e -> assertThat(e.getDatumeinde()).as("check datumeinde").isEqualTo(actual.getDatumeinde()))
            .satisfies(e -> assertThat(e.getDatumstart()).as("check datumstart").isEqualTo(actual.getDatumstart()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getSubtitel()).as("check subtitel").isEqualTo(actual.getSubtitel()))
            .satisfies(e -> assertThat(e.getTitel()).as("check titel").isEqualTo(actual.getTitel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTentoonstellingUpdatableRelationshipsEquals(Tentoonstelling expected, Tentoonstelling actual) {
        assertThat(expected)
            .as("Verify Tentoonstelling relationships")
            .satisfies(
                e ->
                    assertThat(e.getIsbedoeldvoorBruikleens())
                        .as("check isbedoeldvoorBruikleens")
                        .isEqualTo(actual.getIsbedoeldvoorBruikleens())
            )
            .satisfies(
                e ->
                    assertThat(e.getOnderdeelMuseumobjects())
                        .as("check onderdeelMuseumobjects")
                        .isEqualTo(actual.getOnderdeelMuseumobjects())
            )
            .satisfies(
                e ->
                    assertThat(e.getSteltsamenSamenstellers())
                        .as("check steltsamenSamenstellers")
                        .isEqualTo(actual.getSteltsamenSamenstellers())
            );
    }
}
