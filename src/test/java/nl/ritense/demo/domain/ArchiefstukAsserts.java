package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ArchiefstukAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArchiefstukAllPropertiesEquals(Archiefstuk expected, Archiefstuk actual) {
        assertArchiefstukAutoGeneratedPropertiesEquals(expected, actual);
        assertArchiefstukAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArchiefstukAllUpdatablePropertiesEquals(Archiefstuk expected, Archiefstuk actual) {
        assertArchiefstukUpdatableFieldsEquals(expected, actual);
        assertArchiefstukUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArchiefstukAutoGeneratedPropertiesEquals(Archiefstuk expected, Archiefstuk actual) {
        assertThat(expected)
            .as("Verify Archiefstuk auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArchiefstukUpdatableFieldsEquals(Archiefstuk expected, Archiefstuk actual) {
        assertThat(expected)
            .as("Verify Archiefstuk relevant properties")
            .satisfies(e -> assertThat(e.getBeschrijving()).as("check beschrijving").isEqualTo(actual.getBeschrijving()))
            .satisfies(e -> assertThat(e.getInventarisnummer()).as("check inventarisnummer").isEqualTo(actual.getInventarisnummer()))
            .satisfies(e -> assertThat(e.getOmvang()).as("check omvang").isEqualTo(actual.getOmvang()))
            .satisfies(
                e ->
                    assertThat(e.getOpenbaarheidsbeperking())
                        .as("check openbaarheidsbeperking")
                        .isEqualTo(actual.getOpenbaarheidsbeperking())
            )
            .satisfies(e -> assertThat(e.getTrefwoorden()).as("check trefwoorden").isEqualTo(actual.getTrefwoorden()))
            .satisfies(e -> assertThat(e.getUiterlijkevorm()).as("check uiterlijkevorm").isEqualTo(actual.getUiterlijkevorm()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArchiefstukUpdatableRelationshipsEquals(Archiefstuk expected, Archiefstuk actual) {
        assertThat(expected)
            .as("Verify Archiefstuk relationships")
            .satisfies(
                e -> assertThat(e.getIsonderdeelvanArchief()).as("check isonderdeelvanArchief").isEqualTo(actual.getIsonderdeelvanArchief())
            )
            .satisfies(e -> assertThat(e.getHeeftUitgever()).as("check heeftUitgever").isEqualTo(actual.getHeeftUitgever()))
            .satisfies(e -> assertThat(e.getHeeftVindplaats()).as("check heeftVindplaats").isEqualTo(actual.getHeeftVindplaats()))
            .satisfies(
                e -> assertThat(e.getHeeftOrdeningsschemas()).as("check heeftOrdeningsschemas").isEqualTo(actual.getHeeftOrdeningsschemas())
            )
            .satisfies(e -> assertThat(e.getStamtuitPeriodes()).as("check stamtuitPeriodes").isEqualTo(actual.getStamtuitPeriodes()))
            .satisfies(e -> assertThat(e.getValtbinnenIndeling()).as("check valtbinnenIndeling").isEqualTo(actual.getValtbinnenIndeling()))
            .satisfies(e -> assertThat(e.getVoorAanvraags()).as("check voorAanvraags").isEqualTo(actual.getVoorAanvraags()));
    }
}
