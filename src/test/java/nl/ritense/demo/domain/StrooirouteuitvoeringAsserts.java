package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StrooirouteuitvoeringAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStrooirouteuitvoeringAllPropertiesEquals(Strooirouteuitvoering expected, Strooirouteuitvoering actual) {
        assertStrooirouteuitvoeringAutoGeneratedPropertiesEquals(expected, actual);
        assertStrooirouteuitvoeringAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStrooirouteuitvoeringAllUpdatablePropertiesEquals(
        Strooirouteuitvoering expected,
        Strooirouteuitvoering actual
    ) {
        assertStrooirouteuitvoeringUpdatableFieldsEquals(expected, actual);
        assertStrooirouteuitvoeringUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStrooirouteuitvoeringAutoGeneratedPropertiesEquals(
        Strooirouteuitvoering expected,
        Strooirouteuitvoering actual
    ) {
        assertThat(expected)
            .as("Verify Strooirouteuitvoering auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStrooirouteuitvoeringUpdatableFieldsEquals(Strooirouteuitvoering expected, Strooirouteuitvoering actual) {
        assertThat(expected)
            .as("Verify Strooirouteuitvoering relevant properties")
            .satisfies(e -> assertThat(e.getGeplandeinde()).as("check geplandeinde").isEqualTo(actual.getGeplandeinde()))
            .satisfies(e -> assertThat(e.getGeplandstart()).as("check geplandstart").isEqualTo(actual.getGeplandstart()))
            .satisfies(e -> assertThat(e.getEroute()).as("check eroute").isEqualTo(actual.getEroute()))
            .satisfies(e -> assertThat(e.getWerkelijkeinde()).as("check werkelijkeinde").isEqualTo(actual.getWerkelijkeinde()))
            .satisfies(e -> assertThat(e.getWerkelijkestart()).as("check werkelijkestart").isEqualTo(actual.getWerkelijkestart()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStrooirouteuitvoeringUpdatableRelationshipsEquals(
        Strooirouteuitvoering expected,
        Strooirouteuitvoering actual
    ) {}
}
