package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UitkeringsrunAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitkeringsrunAllPropertiesEquals(Uitkeringsrun expected, Uitkeringsrun actual) {
        assertUitkeringsrunAutoGeneratedPropertiesEquals(expected, actual);
        assertUitkeringsrunAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitkeringsrunAllUpdatablePropertiesEquals(Uitkeringsrun expected, Uitkeringsrun actual) {
        assertUitkeringsrunUpdatableFieldsEquals(expected, actual);
        assertUitkeringsrunUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitkeringsrunAutoGeneratedPropertiesEquals(Uitkeringsrun expected, Uitkeringsrun actual) {
        assertThat(expected)
            .as("Verify Uitkeringsrun auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitkeringsrunUpdatableFieldsEquals(Uitkeringsrun expected, Uitkeringsrun actual) {
        assertThat(expected)
            .as("Verify Uitkeringsrun relevant properties")
            .satisfies(e -> assertThat(e.getDatumrun()).as("check datumrun").isEqualTo(actual.getDatumrun()))
            .satisfies(e -> assertThat(e.getFrequentie()).as("check frequentie").isEqualTo(actual.getFrequentie()))
            .satisfies(e -> assertThat(e.getPerioderun()).as("check perioderun").isEqualTo(actual.getPerioderun()))
            .satisfies(e -> assertThat(e.getSoortrun()).as("check soortrun").isEqualTo(actual.getSoortrun()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUitkeringsrunUpdatableRelationshipsEquals(Uitkeringsrun expected, Uitkeringsrun actual) {}
}
