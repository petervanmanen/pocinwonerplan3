package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RedenverliesnationaliteitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRedenverliesnationaliteitAllPropertiesEquals(
        Redenverliesnationaliteit expected,
        Redenverliesnationaliteit actual
    ) {
        assertRedenverliesnationaliteitAutoGeneratedPropertiesEquals(expected, actual);
        assertRedenverliesnationaliteitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRedenverliesnationaliteitAllUpdatablePropertiesEquals(
        Redenverliesnationaliteit expected,
        Redenverliesnationaliteit actual
    ) {
        assertRedenverliesnationaliteitUpdatableFieldsEquals(expected, actual);
        assertRedenverliesnationaliteitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRedenverliesnationaliteitAutoGeneratedPropertiesEquals(
        Redenverliesnationaliteit expected,
        Redenverliesnationaliteit actual
    ) {
        assertThat(expected)
            .as("Verify Redenverliesnationaliteit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRedenverliesnationaliteitUpdatableFieldsEquals(
        Redenverliesnationaliteit expected,
        Redenverliesnationaliteit actual
    ) {
        assertThat(expected)
            .as("Verify Redenverliesnationaliteit relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumaanvanggeldigheidverlies())
                        .as("check datumaanvanggeldigheidverlies")
                        .isEqualTo(actual.getDatumaanvanggeldigheidverlies())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidverlies())
                        .as("check datumeindegeldigheidverlies")
                        .isEqualTo(actual.getDatumeindegeldigheidverlies())
            )
            .satisfies(
                e -> assertThat(e.getOmschrijvingverlies()).as("check omschrijvingverlies").isEqualTo(actual.getOmschrijvingverlies())
            )
            .satisfies(e -> assertThat(e.getRedennummerverlies()).as("check redennummerverlies").isEqualTo(actual.getRedennummerverlies()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRedenverliesnationaliteitUpdatableRelationshipsEquals(
        Redenverliesnationaliteit expected,
        Redenverliesnationaliteit actual
    ) {}
}
