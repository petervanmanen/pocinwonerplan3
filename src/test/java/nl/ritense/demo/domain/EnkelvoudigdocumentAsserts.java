package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EnkelvoudigdocumentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnkelvoudigdocumentAllPropertiesEquals(Enkelvoudigdocument expected, Enkelvoudigdocument actual) {
        assertEnkelvoudigdocumentAutoGeneratedPropertiesEquals(expected, actual);
        assertEnkelvoudigdocumentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnkelvoudigdocumentAllUpdatablePropertiesEquals(Enkelvoudigdocument expected, Enkelvoudigdocument actual) {
        assertEnkelvoudigdocumentUpdatableFieldsEquals(expected, actual);
        assertEnkelvoudigdocumentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnkelvoudigdocumentAutoGeneratedPropertiesEquals(Enkelvoudigdocument expected, Enkelvoudigdocument actual) {
        assertThat(expected)
            .as("Verify Enkelvoudigdocument auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnkelvoudigdocumentUpdatableFieldsEquals(Enkelvoudigdocument expected, Enkelvoudigdocument actual) {
        assertThat(expected)
            .as("Verify Enkelvoudigdocument relevant properties")
            .satisfies(e -> assertThat(e.getBestandsnaam()).as("check bestandsnaam").isEqualTo(actual.getBestandsnaam()))
            .satisfies(e -> assertThat(e.getDocumentformaat()).as("check documentformaat").isEqualTo(actual.getDocumentformaat()))
            .satisfies(e -> assertThat(e.getDocumentinhoud()).as("check documentinhoud").isEqualTo(actual.getDocumentinhoud()))
            .satisfies(e -> assertThat(e.getDocumentlink()).as("check documentlink").isEqualTo(actual.getDocumentlink()))
            .satisfies(e -> assertThat(e.getDocumentstatus()).as("check documentstatus").isEqualTo(actual.getDocumentstatus()))
            .satisfies(e -> assertThat(e.getDocumenttaal()).as("check documenttaal").isEqualTo(actual.getDocumenttaal()))
            .satisfies(e -> assertThat(e.getDocumentversie()).as("check documentversie").isEqualTo(actual.getDocumentversie()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnkelvoudigdocumentUpdatableRelationshipsEquals(Enkelvoudigdocument expected, Enkelvoudigdocument actual) {}
}
