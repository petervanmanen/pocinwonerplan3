package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SollicitatiegesprekAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSollicitatiegesprekAllPropertiesEquals(Sollicitatiegesprek expected, Sollicitatiegesprek actual) {
        assertSollicitatiegesprekAutoGeneratedPropertiesEquals(expected, actual);
        assertSollicitatiegesprekAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSollicitatiegesprekAllUpdatablePropertiesEquals(Sollicitatiegesprek expected, Sollicitatiegesprek actual) {
        assertSollicitatiegesprekUpdatableFieldsEquals(expected, actual);
        assertSollicitatiegesprekUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSollicitatiegesprekAutoGeneratedPropertiesEquals(Sollicitatiegesprek expected, Sollicitatiegesprek actual) {
        assertThat(expected)
            .as("Verify Sollicitatiegesprek auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSollicitatiegesprekUpdatableFieldsEquals(Sollicitatiegesprek expected, Sollicitatiegesprek actual) {
        assertThat(expected)
            .as("Verify Sollicitatiegesprek relevant properties")
            .satisfies(e -> assertThat(e.getAangenomen()).as("check aangenomen").isEqualTo(actual.getAangenomen()))
            .satisfies(e -> assertThat(e.getDatum()).as("check datum").isEqualTo(actual.getDatum()))
            .satisfies(e -> assertThat(e.getOpmerkingen()).as("check opmerkingen").isEqualTo(actual.getOpmerkingen()))
            .satisfies(e -> assertThat(e.getVolgendgesprek()).as("check volgendgesprek").isEqualTo(actual.getVolgendgesprek()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSollicitatiegesprekUpdatableRelationshipsEquals(Sollicitatiegesprek expected, Sollicitatiegesprek actual) {
        assertThat(expected)
            .as("Verify Sollicitatiegesprek relationships")
            .satisfies(
                e ->
                    assertThat(e.getInkadervanSollicitatie())
                        .as("check inkadervanSollicitatie")
                        .isEqualTo(actual.getInkadervanSollicitatie())
            )
            .satisfies(
                e -> assertThat(e.getKandidaatSollicitants()).as("check kandidaatSollicitants").isEqualTo(actual.getKandidaatSollicitants())
            )
            .satisfies(
                e ->
                    assertThat(e.getDoetsollicitatiegesprekWerknemers())
                        .as("check doetsollicitatiegesprekWerknemers")
                        .isEqualTo(actual.getDoetsollicitatiegesprekWerknemers())
            );
    }
}
