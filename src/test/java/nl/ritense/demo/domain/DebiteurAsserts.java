package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DebiteurAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDebiteurAllPropertiesEquals(Debiteur expected, Debiteur actual) {
        assertDebiteurAutoGeneratedPropertiesEquals(expected, actual);
        assertDebiteurAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDebiteurAllUpdatablePropertiesEquals(Debiteur expected, Debiteur actual) {
        assertDebiteurUpdatableFieldsEquals(expected, actual);
        assertDebiteurUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDebiteurAutoGeneratedPropertiesEquals(Debiteur expected, Debiteur actual) {
        assertThat(expected)
            .as("Verify Debiteur auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDebiteurUpdatableFieldsEquals(Debiteur expected, Debiteur actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDebiteurUpdatableRelationshipsEquals(Debiteur expected, Debiteur actual) {}
}
