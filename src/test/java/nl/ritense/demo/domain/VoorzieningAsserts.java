package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VoorzieningAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoorzieningAllPropertiesEquals(Voorziening expected, Voorziening actual) {
        assertVoorzieningAutoGeneratedPropertiesEquals(expected, actual);
        assertVoorzieningAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoorzieningAllUpdatablePropertiesEquals(Voorziening expected, Voorziening actual) {
        assertVoorzieningUpdatableFieldsEquals(expected, actual);
        assertVoorzieningUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoorzieningAutoGeneratedPropertiesEquals(Voorziening expected, Voorziening actual) {
        assertThat(expected)
            .as("Verify Voorziening auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoorzieningUpdatableFieldsEquals(Voorziening expected, Voorziening actual) {
        assertThat(expected)
            .as("Verify Voorziening relevant properties")
            .satisfies(e -> assertThat(e.getAantalbeschikbaar()).as("check aantalbeschikbaar").isEqualTo(actual.getAantalbeschikbaar()))
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVoorzieningUpdatableRelationshipsEquals(Voorziening expected, Voorziening actual) {
        assertThat(expected)
            .as("Verify Voorziening relationships")
            .satisfies(
                e ->
                    assertThat(e.getValtbinnenVoorzieningsoort())
                        .as("check valtbinnenVoorzieningsoort")
                        .isEqualTo(actual.getValtbinnenVoorzieningsoort())
            );
    }
}
