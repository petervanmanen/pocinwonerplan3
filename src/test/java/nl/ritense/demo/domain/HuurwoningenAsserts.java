package nl.ritense.demo.domain;

import static nl.ritense.demo.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class HuurwoningenAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuurwoningenAllPropertiesEquals(Huurwoningen expected, Huurwoningen actual) {
        assertHuurwoningenAutoGeneratedPropertiesEquals(expected, actual);
        assertHuurwoningenAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuurwoningenAllUpdatablePropertiesEquals(Huurwoningen expected, Huurwoningen actual) {
        assertHuurwoningenUpdatableFieldsEquals(expected, actual);
        assertHuurwoningenUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuurwoningenAutoGeneratedPropertiesEquals(Huurwoningen expected, Huurwoningen actual) {
        assertThat(expected)
            .as("Verify Huurwoningen auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuurwoningenUpdatableFieldsEquals(Huurwoningen expected, Huurwoningen actual) {
        assertThat(expected)
            .as("Verify Huurwoningen relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getHuurprijs()).as("check huurprijs").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getHuurprijs())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuurwoningenUpdatableRelationshipsEquals(Huurwoningen expected, Huurwoningen actual) {}
}
