package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OnderwijsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnderwijsAllPropertiesEquals(Onderwijs expected, Onderwijs actual) {
        assertOnderwijsAutoGeneratedPropertiesEquals(expected, actual);
        assertOnderwijsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnderwijsAllUpdatablePropertiesEquals(Onderwijs expected, Onderwijs actual) {
        assertOnderwijsUpdatableFieldsEquals(expected, actual);
        assertOnderwijsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnderwijsAutoGeneratedPropertiesEquals(Onderwijs expected, Onderwijs actual) {
        assertThat(expected)
            .as("Verify Onderwijs auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnderwijsUpdatableFieldsEquals(Onderwijs expected, Onderwijs actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOnderwijsUpdatableRelationshipsEquals(Onderwijs expected, Onderwijs actual) {}
}
