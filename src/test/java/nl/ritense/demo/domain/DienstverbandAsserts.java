package nl.ritense.demo.domain;

import static nl.ritense.demo.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class DienstverbandAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDienstverbandAllPropertiesEquals(Dienstverband expected, Dienstverband actual) {
        assertDienstverbandAutoGeneratedPropertiesEquals(expected, actual);
        assertDienstverbandAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDienstverbandAllUpdatablePropertiesEquals(Dienstverband expected, Dienstverband actual) {
        assertDienstverbandUpdatableFieldsEquals(expected, actual);
        assertDienstverbandUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDienstverbandAutoGeneratedPropertiesEquals(Dienstverband expected, Dienstverband actual) {
        assertThat(expected)
            .as("Verify Dienstverband auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDienstverbandUpdatableFieldsEquals(Dienstverband expected, Dienstverband actual) {
        assertThat(expected)
            .as("Verify Dienstverband relevant properties")
            .satisfies(e -> assertThat(e.getDatumeinde()).as("check datumeinde").isEqualTo(actual.getDatumeinde()))
            .satisfies(e -> assertThat(e.getDatumstart()).as("check datumstart").isEqualTo(actual.getDatumstart()))
            .satisfies(e -> assertThat(e.getPeriodiek()).as("check periodiek").isEqualTo(actual.getPeriodiek()))
            .satisfies(
                e -> assertThat(e.getSalaris()).as("check salaris").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getSalaris())
            )
            .satisfies(e -> assertThat(e.getSchaal()).as("check schaal").isEqualTo(actual.getSchaal()))
            .satisfies(e -> assertThat(e.getUrenperweek()).as("check urenperweek").isEqualTo(actual.getUrenperweek()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDienstverbandUpdatableRelationshipsEquals(Dienstverband expected, Dienstverband actual) {
        assertThat(expected)
            .as("Verify Dienstverband relationships")
            .satisfies(
                e ->
                    assertThat(e.getDienstverbandconformfunctieFunctie())
                        .as("check dienstverbandconformfunctieFunctie")
                        .isEqualTo(actual.getDienstverbandconformfunctieFunctie())
            )
            .satisfies(
                e ->
                    assertThat(e.getAantalvolgensinzetUren())
                        .as("check aantalvolgensinzetUren")
                        .isEqualTo(actual.getAantalvolgensinzetUren())
            )
            .satisfies(
                e ->
                    assertThat(e.getMedewerkerheeftdienstverbandWerknemer())
                        .as("check medewerkerheeftdienstverbandWerknemer")
                        .isEqualTo(actual.getMedewerkerheeftdienstverbandWerknemer())
            )
            .satisfies(
                e ->
                    assertThat(e.getAantalvolgensinzetInzet())
                        .as("check aantalvolgensinzetInzet")
                        .isEqualTo(actual.getAantalvolgensinzetInzet())
            );
    }
}
