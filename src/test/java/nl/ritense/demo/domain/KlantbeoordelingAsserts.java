package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class KlantbeoordelingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKlantbeoordelingAllPropertiesEquals(Klantbeoordeling expected, Klantbeoordeling actual) {
        assertKlantbeoordelingAutoGeneratedPropertiesEquals(expected, actual);
        assertKlantbeoordelingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKlantbeoordelingAllUpdatablePropertiesEquals(Klantbeoordeling expected, Klantbeoordeling actual) {
        assertKlantbeoordelingUpdatableFieldsEquals(expected, actual);
        assertKlantbeoordelingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKlantbeoordelingAutoGeneratedPropertiesEquals(Klantbeoordeling expected, Klantbeoordeling actual) {
        assertThat(expected)
            .as("Verify Klantbeoordeling auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKlantbeoordelingUpdatableFieldsEquals(Klantbeoordeling expected, Klantbeoordeling actual) {
        assertThat(expected)
            .as("Verify Klantbeoordeling relevant properties")
            .satisfies(e -> assertThat(e.getBeoordeling()).as("check beoordeling").isEqualTo(actual.getBeoordeling()))
            .satisfies(e -> assertThat(e.getCategorie()).as("check categorie").isEqualTo(actual.getCategorie()))
            .satisfies(e -> assertThat(e.getContactopnemen()).as("check contactopnemen").isEqualTo(actual.getContactopnemen()))
            .satisfies(e -> assertThat(e.getDdbeoordeling()).as("check ddbeoordeling").isEqualTo(actual.getDdbeoordeling()))
            .satisfies(e -> assertThat(e.getKanaal()).as("check kanaal").isEqualTo(actual.getKanaal()))
            .satisfies(e -> assertThat(e.getOnderwerp()).as("check onderwerp").isEqualTo(actual.getOnderwerp()))
            .satisfies(e -> assertThat(e.getSubcategorie()).as("check subcategorie").isEqualTo(actual.getSubcategorie()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKlantbeoordelingUpdatableRelationshipsEquals(Klantbeoordeling expected, Klantbeoordeling actual) {
        assertThat(expected)
            .as("Verify Klantbeoordeling relationships")
            .satisfies(e -> assertThat(e.getDoetBetrokkene()).as("check doetBetrokkene").isEqualTo(actual.getDoetBetrokkene()));
    }
}
