package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClientbegeleiderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientbegeleiderAllPropertiesEquals(Clientbegeleider expected, Clientbegeleider actual) {
        assertClientbegeleiderAutoGeneratedPropertiesEquals(expected, actual);
        assertClientbegeleiderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientbegeleiderAllUpdatablePropertiesEquals(Clientbegeleider expected, Clientbegeleider actual) {
        assertClientbegeleiderUpdatableFieldsEquals(expected, actual);
        assertClientbegeleiderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientbegeleiderAutoGeneratedPropertiesEquals(Clientbegeleider expected, Clientbegeleider actual) {
        assertThat(expected)
            .as("Verify Clientbegeleider auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientbegeleiderUpdatableFieldsEquals(Clientbegeleider expected, Clientbegeleider actual) {
        assertThat(expected)
            .as("Verify Clientbegeleider relevant properties")
            .satisfies(e -> assertThat(e.getBegeleiderscode()).as("check begeleiderscode").isEqualTo(actual.getBegeleiderscode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClientbegeleiderUpdatableRelationshipsEquals(Clientbegeleider expected, Clientbegeleider actual) {
        assertThat(expected)
            .as("Verify Clientbegeleider relationships")
            .satisfies(
                e ->
                    assertThat(e.getMaaktonderdeeluitvanTeam())
                        .as("check maaktonderdeeluitvanTeam")
                        .isEqualTo(actual.getMaaktonderdeeluitvanTeam())
            )
            .satisfies(e -> assertThat(e.getBegeleidtTraject()).as("check begeleidtTraject").isEqualTo(actual.getBegeleidtTraject()))
            .satisfies(
                e ->
                    assertThat(e.getOndersteuntclientClients())
                        .as("check ondersteuntclientClients")
                        .isEqualTo(actual.getOndersteuntclientClients())
            );
    }
}
