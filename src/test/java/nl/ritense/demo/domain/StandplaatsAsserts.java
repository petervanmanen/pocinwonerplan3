package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StandplaatsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandplaatsAllPropertiesEquals(Standplaats expected, Standplaats actual) {
        assertStandplaatsAutoGeneratedPropertiesEquals(expected, actual);
        assertStandplaatsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandplaatsAllUpdatablePropertiesEquals(Standplaats expected, Standplaats actual) {
        assertStandplaatsUpdatableFieldsEquals(expected, actual);
        assertStandplaatsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandplaatsAutoGeneratedPropertiesEquals(Standplaats expected, Standplaats actual) {
        assertThat(expected)
            .as("Verify Standplaats auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandplaatsUpdatableFieldsEquals(Standplaats expected, Standplaats actual) {
        assertThat(expected)
            .as("Verify Standplaats relevant properties")
            .satisfies(e -> assertThat(e.getAdres()).as("check adres").isEqualTo(actual.getAdres()))
            .satisfies(e -> assertThat(e.getBeschrijving()).as("check beschrijving").isEqualTo(actual.getBeschrijving()))
            .satisfies(e -> assertThat(e.getNaaminstelling()).as("check naaminstelling").isEqualTo(actual.getNaaminstelling()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandplaatsUpdatableRelationshipsEquals(Standplaats expected, Standplaats actual) {}
}
