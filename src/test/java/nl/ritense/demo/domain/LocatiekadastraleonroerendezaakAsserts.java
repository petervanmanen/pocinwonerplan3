package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LocatiekadastraleonroerendezaakAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocatiekadastraleonroerendezaakAllPropertiesEquals(
        Locatiekadastraleonroerendezaak expected,
        Locatiekadastraleonroerendezaak actual
    ) {
        assertLocatiekadastraleonroerendezaakAutoGeneratedPropertiesEquals(expected, actual);
        assertLocatiekadastraleonroerendezaakAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocatiekadastraleonroerendezaakAllUpdatablePropertiesEquals(
        Locatiekadastraleonroerendezaak expected,
        Locatiekadastraleonroerendezaak actual
    ) {
        assertLocatiekadastraleonroerendezaakUpdatableFieldsEquals(expected, actual);
        assertLocatiekadastraleonroerendezaakUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocatiekadastraleonroerendezaakAutoGeneratedPropertiesEquals(
        Locatiekadastraleonroerendezaak expected,
        Locatiekadastraleonroerendezaak actual
    ) {
        assertThat(expected)
            .as("Verify Locatiekadastraleonroerendezaak auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocatiekadastraleonroerendezaakUpdatableFieldsEquals(
        Locatiekadastraleonroerendezaak expected,
        Locatiekadastraleonroerendezaak actual
    ) {
        assertThat(expected)
            .as("Verify Locatiekadastraleonroerendezaak relevant properties")
            .satisfies(e -> assertThat(e.getAardcultuurbebouwd()).as("check aardcultuurbebouwd").isEqualTo(actual.getAardcultuurbebouwd()))
            .satisfies(
                e -> assertThat(e.getLocatieomschrijving()).as("check locatieomschrijving").isEqualTo(actual.getLocatieomschrijving())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLocatiekadastraleonroerendezaakUpdatableRelationshipsEquals(
        Locatiekadastraleonroerendezaak expected,
        Locatiekadastraleonroerendezaak actual
    ) {}
}
