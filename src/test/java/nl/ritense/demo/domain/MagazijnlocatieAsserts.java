package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MagazijnlocatieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMagazijnlocatieAllPropertiesEquals(Magazijnlocatie expected, Magazijnlocatie actual) {
        assertMagazijnlocatieAutoGeneratedPropertiesEquals(expected, actual);
        assertMagazijnlocatieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMagazijnlocatieAllUpdatablePropertiesEquals(Magazijnlocatie expected, Magazijnlocatie actual) {
        assertMagazijnlocatieUpdatableFieldsEquals(expected, actual);
        assertMagazijnlocatieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMagazijnlocatieAutoGeneratedPropertiesEquals(Magazijnlocatie expected, Magazijnlocatie actual) {
        assertThat(expected)
            .as("Verify Magazijnlocatie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMagazijnlocatieUpdatableFieldsEquals(Magazijnlocatie expected, Magazijnlocatie actual) {
        assertThat(expected)
            .as("Verify Magazijnlocatie relevant properties")
            .satisfies(e -> assertThat(e.getKey()).as("check key").isEqualTo(actual.getKey()))
            .satisfies(e -> assertThat(e.getVaknummer()).as("check vaknummer").isEqualTo(actual.getVaknummer()))
            .satisfies(e -> assertThat(e.getVolgletter()).as("check volgletter").isEqualTo(actual.getVolgletter()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMagazijnlocatieUpdatableRelationshipsEquals(Magazijnlocatie expected, Magazijnlocatie actual) {
        assertThat(expected)
            .as("Verify Magazijnlocatie relationships")
            .satisfies(e -> assertThat(e.getHeeftStelling()).as("check heeftStelling").isEqualTo(actual.getHeeftStelling()));
    }
}
