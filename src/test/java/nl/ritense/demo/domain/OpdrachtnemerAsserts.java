package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OpdrachtnemerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpdrachtnemerAllPropertiesEquals(Opdrachtnemer expected, Opdrachtnemer actual) {
        assertOpdrachtnemerAutoGeneratedPropertiesEquals(expected, actual);
        assertOpdrachtnemerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpdrachtnemerAllUpdatablePropertiesEquals(Opdrachtnemer expected, Opdrachtnemer actual) {
        assertOpdrachtnemerUpdatableFieldsEquals(expected, actual);
        assertOpdrachtnemerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpdrachtnemerAutoGeneratedPropertiesEquals(Opdrachtnemer expected, Opdrachtnemer actual) {
        assertThat(expected)
            .as("Verify Opdrachtnemer auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpdrachtnemerUpdatableFieldsEquals(Opdrachtnemer expected, Opdrachtnemer actual) {
        assertThat(expected)
            .as("Verify Opdrachtnemer relevant properties")
            .satisfies(e -> assertThat(e.getClustercode()).as("check clustercode").isEqualTo(actual.getClustercode()))
            .satisfies(
                e ->
                    assertThat(e.getClustercodeomschrijving())
                        .as("check clustercodeomschrijving")
                        .isEqualTo(actual.getClustercodeomschrijving())
            )
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getNummer()).as("check nummer").isEqualTo(actual.getNummer()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOpdrachtnemerUpdatableRelationshipsEquals(Opdrachtnemer expected, Opdrachtnemer actual) {
        assertThat(expected)
            .as("Verify Opdrachtnemer relationships")
            .satisfies(
                e -> assertThat(e.getUitgevoerddoorFunctie()).as("check uitgevoerddoorFunctie").isEqualTo(actual.getUitgevoerddoorFunctie())
            );
    }
}
