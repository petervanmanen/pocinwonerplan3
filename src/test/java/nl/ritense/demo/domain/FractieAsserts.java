package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FractieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFractieAllPropertiesEquals(Fractie expected, Fractie actual) {
        assertFractieAutoGeneratedPropertiesEquals(expected, actual);
        assertFractieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFractieAllUpdatablePropertiesEquals(Fractie expected, Fractie actual) {
        assertFractieUpdatableFieldsEquals(expected, actual);
        assertFractieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFractieAutoGeneratedPropertiesEquals(Fractie expected, Fractie actual) {
        assertThat(expected)
            .as("Verify Fractie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFractieUpdatableFieldsEquals(Fractie expected, Fractie actual) {
        assertThat(expected)
            .as("Verify Fractie relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFractieUpdatableRelationshipsEquals(Fractie expected, Fractie actual) {
        assertThat(expected)
            .as("Verify Fractie relationships")
            .satisfies(
                e ->
                    assertThat(e.getInzamelpuntvanMilieustraats())
                        .as("check inzamelpuntvanMilieustraats")
                        .isEqualTo(actual.getInzamelpuntvanMilieustraats())
            )
            .satisfies(e -> assertThat(e.getFractieStortings()).as("check fractieStortings").isEqualTo(actual.getFractieStortings()));
    }
}
