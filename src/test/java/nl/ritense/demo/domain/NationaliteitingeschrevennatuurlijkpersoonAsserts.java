package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NationaliteitingeschrevennatuurlijkpersoonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNationaliteitingeschrevennatuurlijkpersoonAllPropertiesEquals(
        Nationaliteitingeschrevennatuurlijkpersoon expected,
        Nationaliteitingeschrevennatuurlijkpersoon actual
    ) {
        assertNationaliteitingeschrevennatuurlijkpersoonAutoGeneratedPropertiesEquals(expected, actual);
        assertNationaliteitingeschrevennatuurlijkpersoonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNationaliteitingeschrevennatuurlijkpersoonAllUpdatablePropertiesEquals(
        Nationaliteitingeschrevennatuurlijkpersoon expected,
        Nationaliteitingeschrevennatuurlijkpersoon actual
    ) {
        assertNationaliteitingeschrevennatuurlijkpersoonUpdatableFieldsEquals(expected, actual);
        assertNationaliteitingeschrevennatuurlijkpersoonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNationaliteitingeschrevennatuurlijkpersoonAutoGeneratedPropertiesEquals(
        Nationaliteitingeschrevennatuurlijkpersoon expected,
        Nationaliteitingeschrevennatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Nationaliteitingeschrevennatuurlijkpersoon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNationaliteitingeschrevennatuurlijkpersoonUpdatableFieldsEquals(
        Nationaliteitingeschrevennatuurlijkpersoon expected,
        Nationaliteitingeschrevennatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Nationaliteitingeschrevennatuurlijkpersoon relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getBuitenlandspersoonsnummer())
                        .as("check buitenlandspersoonsnummer")
                        .isEqualTo(actual.getBuitenlandspersoonsnummer())
            )
            .satisfies(e -> assertThat(e.getNationaliteit()).as("check nationaliteit").isEqualTo(actual.getNationaliteit()))
            .satisfies(e -> assertThat(e.getRedenverkrijging()).as("check redenverkrijging").isEqualTo(actual.getRedenverkrijging()))
            .satisfies(e -> assertThat(e.getRedenverlies()).as("check redenverlies").isEqualTo(actual.getRedenverlies()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNationaliteitingeschrevennatuurlijkpersoonUpdatableRelationshipsEquals(
        Nationaliteitingeschrevennatuurlijkpersoon expected,
        Nationaliteitingeschrevennatuurlijkpersoon actual
    ) {}
}
