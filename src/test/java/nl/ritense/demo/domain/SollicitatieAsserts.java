package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SollicitatieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSollicitatieAllPropertiesEquals(Sollicitatie expected, Sollicitatie actual) {
        assertSollicitatieAutoGeneratedPropertiesEquals(expected, actual);
        assertSollicitatieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSollicitatieAllUpdatablePropertiesEquals(Sollicitatie expected, Sollicitatie actual) {
        assertSollicitatieUpdatableFieldsEquals(expected, actual);
        assertSollicitatieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSollicitatieAutoGeneratedPropertiesEquals(Sollicitatie expected, Sollicitatie actual) {
        assertThat(expected)
            .as("Verify Sollicitatie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSollicitatieUpdatableFieldsEquals(Sollicitatie expected, Sollicitatie actual) {
        assertThat(expected)
            .as("Verify Sollicitatie relevant properties")
            .satisfies(e -> assertThat(e.getDatum()).as("check datum").isEqualTo(actual.getDatum()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSollicitatieUpdatableRelationshipsEquals(Sollicitatie expected, Sollicitatie actual) {
        assertThat(expected)
            .as("Verify Sollicitatie relationships")
            .satisfies(e -> assertThat(e.getOpvacatureVacature()).as("check opvacatureVacature").isEqualTo(actual.getOpvacatureVacature()))
            .satisfies(
                e ->
                    assertThat(e.getSolliciteertopfunctieSollicitant())
                        .as("check solliciteertopfunctieSollicitant")
                        .isEqualTo(actual.getSolliciteertopfunctieSollicitant())
            )
            .satisfies(
                e -> assertThat(e.getSolliciteertWerknemer()).as("check solliciteertWerknemer").isEqualTo(actual.getSolliciteertWerknemer())
            );
    }
}
