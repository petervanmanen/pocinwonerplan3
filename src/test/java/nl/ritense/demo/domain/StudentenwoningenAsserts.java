package nl.ritense.demo.domain;

import static nl.ritense.demo.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class StudentenwoningenAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentenwoningenAllPropertiesEquals(Studentenwoningen expected, Studentenwoningen actual) {
        assertStudentenwoningenAutoGeneratedPropertiesEquals(expected, actual);
        assertStudentenwoningenAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentenwoningenAllUpdatablePropertiesEquals(Studentenwoningen expected, Studentenwoningen actual) {
        assertStudentenwoningenUpdatableFieldsEquals(expected, actual);
        assertStudentenwoningenUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentenwoningenAutoGeneratedPropertiesEquals(Studentenwoningen expected, Studentenwoningen actual) {
        assertThat(expected)
            .as("Verify Studentenwoningen auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentenwoningenUpdatableFieldsEquals(Studentenwoningen expected, Studentenwoningen actual) {
        assertThat(expected)
            .as("Verify Studentenwoningen relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getHuurprijs()).as("check huurprijs").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getHuurprijs())
            )
            .satisfies(e -> assertThat(e.getZelfstandig()).as("check zelfstandig").isEqualTo(actual.getZelfstandig()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentenwoningenUpdatableRelationshipsEquals(Studentenwoningen expected, Studentenwoningen actual) {}
}
