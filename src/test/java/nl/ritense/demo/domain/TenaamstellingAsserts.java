package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TenaamstellingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTenaamstellingAllPropertiesEquals(Tenaamstelling expected, Tenaamstelling actual) {
        assertTenaamstellingAutoGeneratedPropertiesEquals(expected, actual);
        assertTenaamstellingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTenaamstellingAllUpdatablePropertiesEquals(Tenaamstelling expected, Tenaamstelling actual) {
        assertTenaamstellingUpdatableFieldsEquals(expected, actual);
        assertTenaamstellingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTenaamstellingAutoGeneratedPropertiesEquals(Tenaamstelling expected, Tenaamstelling actual) {
        assertThat(expected)
            .as("Verify Tenaamstelling auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTenaamstellingUpdatableFieldsEquals(Tenaamstelling expected, Tenaamstelling actual) {
        assertThat(expected)
            .as("Verify Tenaamstelling relevant properties")
            .satisfies(e -> assertThat(e.getAandeelinrecht()).as("check aandeelinrecht").isEqualTo(actual.getAandeelinrecht()))
            .satisfies(
                e ->
                    assertThat(e.getBurgerlijkestaattentijdevanverkrijging())
                        .as("check burgerlijkestaattentijdevanverkrijging")
                        .isEqualTo(actual.getBurgerlijkestaattentijdevanverkrijging())
            )
            .satisfies(
                e -> assertThat(e.getDatumbegingeldigheid()).as("check datumbegingeldigheid").isEqualTo(actual.getDatumbegingeldigheid())
            )
            .satisfies(
                e -> assertThat(e.getDatumeindegeldigheid()).as("check datumeindegeldigheid").isEqualTo(actual.getDatumeindegeldigheid())
            )
            .satisfies(e -> assertThat(e.getExploitantcode()).as("check exploitantcode").isEqualTo(actual.getExploitantcode()))
            .satisfies(
                e ->
                    assertThat(e.getIdentificatietenaamstelling())
                        .as("check identificatietenaamstelling")
                        .isEqualTo(actual.getIdentificatietenaamstelling())
            )
            .satisfies(
                e ->
                    assertThat(e.getVerklaringinzakederdenbescherming())
                        .as("check verklaringinzakederdenbescherming")
                        .isEqualTo(actual.getVerklaringinzakederdenbescherming())
            )
            .satisfies(
                e ->
                    assertThat(e.getVerkregennamenssamenwerkingsverband())
                        .as("check verkregennamenssamenwerkingsverband")
                        .isEqualTo(actual.getVerkregennamenssamenwerkingsverband())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTenaamstellingUpdatableRelationshipsEquals(Tenaamstelling expected, Tenaamstelling actual) {
        assertThat(expected)
            .as("Verify Tenaamstelling relationships")
            .satisfies(e -> assertThat(e.getHeeftRechtspersoon()).as("check heeftRechtspersoon").isEqualTo(actual.getHeeftRechtspersoon()));
    }
}
