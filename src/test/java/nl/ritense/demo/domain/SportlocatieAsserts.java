package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SportlocatieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSportlocatieAllPropertiesEquals(Sportlocatie expected, Sportlocatie actual) {
        assertSportlocatieAutoGeneratedPropertiesEquals(expected, actual);
        assertSportlocatieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSportlocatieAllUpdatablePropertiesEquals(Sportlocatie expected, Sportlocatie actual) {
        assertSportlocatieUpdatableFieldsEquals(expected, actual);
        assertSportlocatieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSportlocatieAutoGeneratedPropertiesEquals(Sportlocatie expected, Sportlocatie actual) {
        assertThat(expected)
            .as("Verify Sportlocatie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSportlocatieUpdatableFieldsEquals(Sportlocatie expected, Sportlocatie actual) {
        assertThat(expected)
            .as("Verify Sportlocatie relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSportlocatieUpdatableRelationshipsEquals(Sportlocatie expected, Sportlocatie actual) {
        assertThat(expected)
            .as("Verify Sportlocatie relationships")
            .satisfies(e -> assertThat(e.getGebruiktSchools()).as("check gebruiktSchools").isEqualTo(actual.getGebruiktSchools()))
            .satisfies(
                e ->
                    assertThat(e.getGebruiktSportverenigings())
                        .as("check gebruiktSportverenigings")
                        .isEqualTo(actual.getGebruiktSportverenigings())
            );
    }
}
