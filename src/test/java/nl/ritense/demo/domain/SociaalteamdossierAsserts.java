package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SociaalteamdossierAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSociaalteamdossierAllPropertiesEquals(Sociaalteamdossier expected, Sociaalteamdossier actual) {
        assertSociaalteamdossierAutoGeneratedPropertiesEquals(expected, actual);
        assertSociaalteamdossierAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSociaalteamdossierAllUpdatablePropertiesEquals(Sociaalteamdossier expected, Sociaalteamdossier actual) {
        assertSociaalteamdossierUpdatableFieldsEquals(expected, actual);
        assertSociaalteamdossierUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSociaalteamdossierAutoGeneratedPropertiesEquals(Sociaalteamdossier expected, Sociaalteamdossier actual) {
        assertThat(expected)
            .as("Verify Sociaalteamdossier auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSociaalteamdossierUpdatableFieldsEquals(Sociaalteamdossier expected, Sociaalteamdossier actual) {
        assertThat(expected)
            .as("Verify Sociaalteamdossier relevant properties")
            .satisfies(e -> assertThat(e.getDatumeinde()).as("check datumeinde").isEqualTo(actual.getDatumeinde()))
            .satisfies(e -> assertThat(e.getDatumstart()).as("check datumstart").isEqualTo(actual.getDatumstart()))
            .satisfies(e -> assertThat(e.getDatumvaststelling()).as("check datumvaststelling").isEqualTo(actual.getDatumvaststelling()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSociaalteamdossierUpdatableRelationshipsEquals(Sociaalteamdossier expected, Sociaalteamdossier actual) {}
}
