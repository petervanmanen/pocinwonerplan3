package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AkrkadastralegemeentecodeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAkrkadastralegemeentecodeAllPropertiesEquals(
        Akrkadastralegemeentecode expected,
        Akrkadastralegemeentecode actual
    ) {
        assertAkrkadastralegemeentecodeAutoGeneratedPropertiesEquals(expected, actual);
        assertAkrkadastralegemeentecodeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAkrkadastralegemeentecodeAllUpdatablePropertiesEquals(
        Akrkadastralegemeentecode expected,
        Akrkadastralegemeentecode actual
    ) {
        assertAkrkadastralegemeentecodeUpdatableFieldsEquals(expected, actual);
        assertAkrkadastralegemeentecodeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAkrkadastralegemeentecodeAutoGeneratedPropertiesEquals(
        Akrkadastralegemeentecode expected,
        Akrkadastralegemeentecode actual
    ) {
        assertThat(expected)
            .as("Verify Akrkadastralegemeentecode auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAkrkadastralegemeentecodeUpdatableFieldsEquals(
        Akrkadastralegemeentecode expected,
        Akrkadastralegemeentecode actual
    ) {
        assertThat(expected)
            .as("Verify Akrkadastralegemeentecode relevant properties")
            .satisfies(e -> assertThat(e.getAkrcode()).as("check akrcode").isEqualTo(actual.getAkrcode()))
            .satisfies(
                e ->
                    assertThat(e.getCodeakrkadadastralegemeentecode())
                        .as("check codeakrkadadastralegemeentecode")
                        .isEqualTo(actual.getCodeakrkadadastralegemeentecode())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidakrcode())
                        .as("check datumbegingeldigheidakrcode")
                        .isEqualTo(actual.getDatumbegingeldigheidakrcode())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidakrcode())
                        .as("check datumeindegeldigheidakrcode")
                        .isEqualTo(actual.getDatumeindegeldigheidakrcode())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAkrkadastralegemeentecodeUpdatableRelationshipsEquals(
        Akrkadastralegemeentecode expected,
        Akrkadastralegemeentecode actual
    ) {}
}
