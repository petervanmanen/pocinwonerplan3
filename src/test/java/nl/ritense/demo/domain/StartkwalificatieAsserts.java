package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StartkwalificatieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStartkwalificatieAllPropertiesEquals(Startkwalificatie expected, Startkwalificatie actual) {
        assertStartkwalificatieAutoGeneratedPropertiesEquals(expected, actual);
        assertStartkwalificatieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStartkwalificatieAllUpdatablePropertiesEquals(Startkwalificatie expected, Startkwalificatie actual) {
        assertStartkwalificatieUpdatableFieldsEquals(expected, actual);
        assertStartkwalificatieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStartkwalificatieAutoGeneratedPropertiesEquals(Startkwalificatie expected, Startkwalificatie actual) {
        assertThat(expected)
            .as("Verify Startkwalificatie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStartkwalificatieUpdatableFieldsEquals(Startkwalificatie expected, Startkwalificatie actual) {
        assertThat(expected)
            .as("Verify Startkwalificatie relevant properties")
            .satisfies(e -> assertThat(e.getDatumbehaald()).as("check datumbehaald").isEqualTo(actual.getDatumbehaald()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStartkwalificatieUpdatableRelationshipsEquals(Startkwalificatie expected, Startkwalificatie actual) {}
}
