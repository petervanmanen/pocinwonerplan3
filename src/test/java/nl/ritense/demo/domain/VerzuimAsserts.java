package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VerzuimAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerzuimAllPropertiesEquals(Verzuim expected, Verzuim actual) {
        assertVerzuimAutoGeneratedPropertiesEquals(expected, actual);
        assertVerzuimAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerzuimAllUpdatablePropertiesEquals(Verzuim expected, Verzuim actual) {
        assertVerzuimUpdatableFieldsEquals(expected, actual);
        assertVerzuimUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerzuimAutoGeneratedPropertiesEquals(Verzuim expected, Verzuim actual) {
        assertThat(expected)
            .as("Verify Verzuim auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerzuimUpdatableFieldsEquals(Verzuim expected, Verzuim actual) {
        assertThat(expected)
            .as("Verify Verzuim relevant properties")
            .satisfies(e -> assertThat(e.getDatumtijdeinde()).as("check datumtijdeinde").isEqualTo(actual.getDatumtijdeinde()))
            .satisfies(e -> assertThat(e.getDatumtijdstart()).as("check datumtijdstart").isEqualTo(actual.getDatumtijdstart()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerzuimUpdatableRelationshipsEquals(Verzuim expected, Verzuim actual) {
        assertThat(expected)
            .as("Verify Verzuim relationships")
            .satisfies(
                e ->
                    assertThat(e.getSoortverzuimVerzuimsoort())
                        .as("check soortverzuimVerzuimsoort")
                        .isEqualTo(actual.getSoortverzuimVerzuimsoort())
            )
            .satisfies(
                e -> assertThat(e.getHeeftverzuimWerknemer()).as("check heeftverzuimWerknemer").isEqualTo(actual.getHeeftverzuimWerknemer())
            );
    }
}
