package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class KpbetrokkenbijAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKpbetrokkenbijAllPropertiesEquals(Kpbetrokkenbij expected, Kpbetrokkenbij actual) {
        assertKpbetrokkenbijAutoGeneratedPropertiesEquals(expected, actual);
        assertKpbetrokkenbijAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKpbetrokkenbijAllUpdatablePropertiesEquals(Kpbetrokkenbij expected, Kpbetrokkenbij actual) {
        assertKpbetrokkenbijUpdatableFieldsEquals(expected, actual);
        assertKpbetrokkenbijUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKpbetrokkenbijAutoGeneratedPropertiesEquals(Kpbetrokkenbij expected, Kpbetrokkenbij actual) {
        assertThat(expected)
            .as("Verify Kpbetrokkenbij auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKpbetrokkenbijUpdatableFieldsEquals(Kpbetrokkenbij expected, Kpbetrokkenbij actual) {
        assertThat(expected)
            .as("Verify Kpbetrokkenbij relevant properties")
            .satisfies(
                e -> assertThat(e.getDatumbegingeldigheid()).as("check datumbegingeldigheid").isEqualTo(actual.getDatumbegingeldigheid())
            )
            .satisfies(
                e -> assertThat(e.getDatumeindegeldigheid()).as("check datumeindegeldigheid").isEqualTo(actual.getDatumeindegeldigheid())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKpbetrokkenbijUpdatableRelationshipsEquals(Kpbetrokkenbij expected, Kpbetrokkenbij actual) {}
}
