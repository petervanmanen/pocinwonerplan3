package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AardfiliatieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAardfiliatieAllPropertiesEquals(Aardfiliatie expected, Aardfiliatie actual) {
        assertAardfiliatieAutoGeneratedPropertiesEquals(expected, actual);
        assertAardfiliatieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAardfiliatieAllUpdatablePropertiesEquals(Aardfiliatie expected, Aardfiliatie actual) {
        assertAardfiliatieUpdatableFieldsEquals(expected, actual);
        assertAardfiliatieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAardfiliatieAutoGeneratedPropertiesEquals(Aardfiliatie expected, Aardfiliatie actual) {
        assertThat(expected)
            .as("Verify Aardfiliatie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAardfiliatieUpdatableFieldsEquals(Aardfiliatie expected, Aardfiliatie actual) {
        assertThat(expected)
            .as("Verify Aardfiliatie relevant properties")
            .satisfies(e -> assertThat(e.getCodeaardfiliatie()).as("check codeaardfiliatie").isEqualTo(actual.getCodeaardfiliatie()))
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidaardfiliatie())
                        .as("check datumbegingeldigheidaardfiliatie")
                        .isEqualTo(actual.getDatumbegingeldigheidaardfiliatie())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidaardfiliatie())
                        .as("check datumeindegeldigheidaardfiliatie")
                        .isEqualTo(actual.getDatumeindegeldigheidaardfiliatie())
            )
            .satisfies(e -> assertThat(e.getNaamaardfiliatie()).as("check naamaardfiliatie").isEqualTo(actual.getNaamaardfiliatie()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAardfiliatieUpdatableRelationshipsEquals(Aardfiliatie expected, Aardfiliatie actual) {}
}
