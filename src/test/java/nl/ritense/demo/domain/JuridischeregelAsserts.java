package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class JuridischeregelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJuridischeregelAllPropertiesEquals(Juridischeregel expected, Juridischeregel actual) {
        assertJuridischeregelAutoGeneratedPropertiesEquals(expected, actual);
        assertJuridischeregelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJuridischeregelAllUpdatablePropertiesEquals(Juridischeregel expected, Juridischeregel actual) {
        assertJuridischeregelUpdatableFieldsEquals(expected, actual);
        assertJuridischeregelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJuridischeregelAutoGeneratedPropertiesEquals(Juridischeregel expected, Juridischeregel actual) {
        assertThat(expected)
            .as("Verify Juridischeregel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJuridischeregelUpdatableFieldsEquals(Juridischeregel expected, Juridischeregel actual) {
        assertThat(expected)
            .as("Verify Juridischeregel relevant properties")
            .satisfies(e -> assertThat(e.getDatumbekend()).as("check datumbekend").isEqualTo(actual.getDatumbekend()))
            .satisfies(
                e -> assertThat(e.getDatumeindegeldigheid()).as("check datumeindegeldigheid").isEqualTo(actual.getDatumeindegeldigheid())
            )
            .satisfies(e -> assertThat(e.getDatuminwerking()).as("check datuminwerking").isEqualTo(actual.getDatuminwerking()))
            .satisfies(e -> assertThat(e.getDatumstart()).as("check datumstart").isEqualTo(actual.getDatumstart()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getRegeltekst()).as("check regeltekst").isEqualTo(actual.getRegeltekst()))
            .satisfies(e -> assertThat(e.getThema()).as("check thema").isEqualTo(actual.getThema()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJuridischeregelUpdatableRelationshipsEquals(Juridischeregel expected, Juridischeregel actual) {}
}
