package nl.ritense.demo.domain;

import static nl.ritense.demo.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class SelectietabelaanbestedingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSelectietabelaanbestedingAllPropertiesEquals(
        Selectietabelaanbesteding expected,
        Selectietabelaanbesteding actual
    ) {
        assertSelectietabelaanbestedingAutoGeneratedPropertiesEquals(expected, actual);
        assertSelectietabelaanbestedingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSelectietabelaanbestedingAllUpdatablePropertiesEquals(
        Selectietabelaanbesteding expected,
        Selectietabelaanbesteding actual
    ) {
        assertSelectietabelaanbestedingUpdatableFieldsEquals(expected, actual);
        assertSelectietabelaanbestedingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSelectietabelaanbestedingAutoGeneratedPropertiesEquals(
        Selectietabelaanbesteding expected,
        Selectietabelaanbesteding actual
    ) {
        assertThat(expected)
            .as("Verify Selectietabelaanbesteding auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSelectietabelaanbestedingUpdatableFieldsEquals(
        Selectietabelaanbesteding expected,
        Selectietabelaanbesteding actual
    ) {
        assertThat(expected)
            .as("Verify Selectietabelaanbesteding relevant properties")
            .satisfies(e -> assertThat(e.getAanbestedingsoort()).as("check aanbestedingsoort").isEqualTo(actual.getAanbestedingsoort()))
            .satisfies(
                e ->
                    assertThat(e.getDrempelbedragtot())
                        .as("check drempelbedragtot")
                        .usingComparator(bigDecimalCompareTo)
                        .isEqualTo(actual.getDrempelbedragtot())
            )
            .satisfies(
                e ->
                    assertThat(e.getDrempelbedragvanaf())
                        .as("check drempelbedragvanaf")
                        .usingComparator(bigDecimalCompareTo)
                        .isEqualTo(actual.getDrempelbedragvanaf())
            )
            .satisfies(e -> assertThat(e.getOpdrachtcategorie()).as("check opdrachtcategorie").isEqualTo(actual.getOpdrachtcategorie()))
            .satisfies(e -> assertThat(e.getOpenbaar()).as("check openbaar").isEqualTo(actual.getOpenbaar()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSelectietabelaanbestedingUpdatableRelationshipsEquals(
        Selectietabelaanbesteding expected,
        Selectietabelaanbesteding actual
    ) {}
}
