package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VerkeersdrempelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerkeersdrempelAllPropertiesEquals(Verkeersdrempel expected, Verkeersdrempel actual) {
        assertVerkeersdrempelAutoGeneratedPropertiesEquals(expected, actual);
        assertVerkeersdrempelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerkeersdrempelAllUpdatablePropertiesEquals(Verkeersdrempel expected, Verkeersdrempel actual) {
        assertVerkeersdrempelUpdatableFieldsEquals(expected, actual);
        assertVerkeersdrempelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerkeersdrempelAutoGeneratedPropertiesEquals(Verkeersdrempel expected, Verkeersdrempel actual) {
        assertThat(expected)
            .as("Verify Verkeersdrempel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerkeersdrempelUpdatableFieldsEquals(Verkeersdrempel expected, Verkeersdrempel actual) {
        assertThat(expected)
            .as("Verify Verkeersdrempel relevant properties")
            .satisfies(e -> assertThat(e.getOntwerpsnelheid()).as("check ontwerpsnelheid").isEqualTo(actual.getOntwerpsnelheid()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getTypeplus()).as("check typeplus").isEqualTo(actual.getTypeplus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerkeersdrempelUpdatableRelationshipsEquals(Verkeersdrempel expected, Verkeersdrempel actual) {}
}
