package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AanvraagdataAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanvraagdataAllPropertiesEquals(Aanvraagdata expected, Aanvraagdata actual) {
        assertAanvraagdataAutoGeneratedPropertiesEquals(expected, actual);
        assertAanvraagdataAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanvraagdataAllUpdatablePropertiesEquals(Aanvraagdata expected, Aanvraagdata actual) {
        assertAanvraagdataUpdatableFieldsEquals(expected, actual);
        assertAanvraagdataUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanvraagdataAutoGeneratedPropertiesEquals(Aanvraagdata expected, Aanvraagdata actual) {
        assertThat(expected)
            .as("Verify Aanvraagdata auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanvraagdataUpdatableFieldsEquals(Aanvraagdata expected, Aanvraagdata actual) {
        assertThat(expected)
            .as("Verify Aanvraagdata relevant properties")
            .satisfies(e -> assertThat(e.getData()).as("check data").isEqualTo(actual.getData()))
            .satisfies(e -> assertThat(e.getVeld()).as("check veld").isEqualTo(actual.getVeld()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanvraagdataUpdatableRelationshipsEquals(Aanvraagdata expected, Aanvraagdata actual) {
        assertThat(expected)
            .as("Verify Aanvraagdata relationships")
            .satisfies(
                e ->
                    assertThat(e.getIsconformFormuliersoortveld())
                        .as("check isconformFormuliersoortveld")
                        .isEqualTo(actual.getIsconformFormuliersoortveld())
            );
    }
}
