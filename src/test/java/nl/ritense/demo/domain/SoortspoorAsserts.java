package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SoortspoorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortspoorAllPropertiesEquals(Soortspoor expected, Soortspoor actual) {
        assertSoortspoorAutoGeneratedPropertiesEquals(expected, actual);
        assertSoortspoorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortspoorAllUpdatablePropertiesEquals(Soortspoor expected, Soortspoor actual) {
        assertSoortspoorUpdatableFieldsEquals(expected, actual);
        assertSoortspoorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortspoorAutoGeneratedPropertiesEquals(Soortspoor expected, Soortspoor actual) {
        assertThat(expected)
            .as("Verify Soortspoor auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortspoorUpdatableFieldsEquals(Soortspoor expected, Soortspoor actual) {
        assertThat(expected)
            .as("Verify Soortspoor relevant properties")
            .satisfies(e -> assertThat(e.getFunctiespoor()).as("check functiespoor").isEqualTo(actual.getFunctiespoor()))
            .satisfies(
                e ->
                    assertThat(e.getIndicatieplusbrpopulatie())
                        .as("check indicatieplusbrpopulatie")
                        .isEqualTo(actual.getIndicatieplusbrpopulatie())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortspoorUpdatableRelationshipsEquals(Soortspoor expected, Soortspoor actual) {}
}
