package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BeoordelingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBeoordelingAllPropertiesEquals(Beoordeling expected, Beoordeling actual) {
        assertBeoordelingAutoGeneratedPropertiesEquals(expected, actual);
        assertBeoordelingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBeoordelingAllUpdatablePropertiesEquals(Beoordeling expected, Beoordeling actual) {
        assertBeoordelingUpdatableFieldsEquals(expected, actual);
        assertBeoordelingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBeoordelingAutoGeneratedPropertiesEquals(Beoordeling expected, Beoordeling actual) {
        assertThat(expected)
            .as("Verify Beoordeling auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBeoordelingUpdatableFieldsEquals(Beoordeling expected, Beoordeling actual) {
        assertThat(expected)
            .as("Verify Beoordeling relevant properties")
            .satisfies(e -> assertThat(e.getDatum()).as("check datum").isEqualTo(actual.getDatum()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getOordeel()).as("check oordeel").isEqualTo(actual.getOordeel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBeoordelingUpdatableRelationshipsEquals(Beoordeling expected, Beoordeling actual) {
        assertThat(expected)
            .as("Verify Beoordeling relationships")
            .satisfies(
                e ->
                    assertThat(e.getBeoordeeltdoorWerknemer())
                        .as("check beoordeeltdoorWerknemer")
                        .isEqualTo(actual.getBeoordeeltdoorWerknemer())
            )
            .satisfies(
                e ->
                    assertThat(e.getBeoordelingvanWerknemer())
                        .as("check beoordelingvanWerknemer")
                        .isEqualTo(actual.getBeoordelingvanWerknemer())
            );
    }
}
