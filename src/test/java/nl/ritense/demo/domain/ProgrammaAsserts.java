package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProgrammaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgrammaAllPropertiesEquals(Programma expected, Programma actual) {
        assertProgrammaAutoGeneratedPropertiesEquals(expected, actual);
        assertProgrammaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgrammaAllUpdatablePropertiesEquals(Programma expected, Programma actual) {
        assertProgrammaUpdatableFieldsEquals(expected, actual);
        assertProgrammaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgrammaAutoGeneratedPropertiesEquals(Programma expected, Programma actual) {
        assertThat(expected)
            .as("Verify Programma auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgrammaUpdatableFieldsEquals(Programma expected, Programma actual) {
        assertThat(expected)
            .as("Verify Programma relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProgrammaUpdatableRelationshipsEquals(Programma expected, Programma actual) {
        assertThat(expected)
            .as("Verify Programma relationships")
            .satisfies(e -> assertThat(e.getHeeftKostenplaats()).as("check heeftKostenplaats").isEqualTo(actual.getHeeftKostenplaats()))
            .satisfies(
                e -> assertThat(e.getVoorProgrammasoorts()).as("check voorProgrammasoorts").isEqualTo(actual.getVoorProgrammasoorts())
            )
            .satisfies(e -> assertThat(e.getVoorMuseumrelatie()).as("check voorMuseumrelatie").isEqualTo(actual.getVoorMuseumrelatie()))
            .satisfies(e -> assertThat(e.getHoortbijRaadsstuks()).as("check hoortbijRaadsstuks").isEqualTo(actual.getHoortbijRaadsstuks()));
    }
}
