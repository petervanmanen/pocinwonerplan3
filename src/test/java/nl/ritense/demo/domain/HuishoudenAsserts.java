package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HuishoudenAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuishoudenAllPropertiesEquals(Huishouden expected, Huishouden actual) {
        assertHuishoudenAutoGeneratedPropertiesEquals(expected, actual);
        assertHuishoudenAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuishoudenAllUpdatablePropertiesEquals(Huishouden expected, Huishouden actual) {
        assertHuishoudenUpdatableFieldsEquals(expected, actual);
        assertHuishoudenUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuishoudenAutoGeneratedPropertiesEquals(Huishouden expected, Huishouden actual) {
        assertThat(expected)
            .as("Verify Huishouden auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuishoudenUpdatableFieldsEquals(Huishouden expected, Huishouden actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuishoudenUpdatableRelationshipsEquals(Huishouden expected, Huishouden actual) {
        assertThat(expected)
            .as("Verify Huishouden relationships")
            .satisfies(
                e ->
                    assertThat(e.getMaaktonderdeeluitvanClients())
                        .as("check maaktonderdeeluitvanClients")
                        .isEqualTo(actual.getMaaktonderdeeluitvanClients())
            )
            .satisfies(
                e ->
                    assertThat(e.getMaaktonderdeelvanRelaties())
                        .as("check maaktonderdeelvanRelaties")
                        .isEqualTo(actual.getMaaktonderdeelvanRelaties())
            );
    }
}
