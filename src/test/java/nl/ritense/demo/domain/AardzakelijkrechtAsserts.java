package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AardzakelijkrechtAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAardzakelijkrechtAllPropertiesEquals(Aardzakelijkrecht expected, Aardzakelijkrecht actual) {
        assertAardzakelijkrechtAutoGeneratedPropertiesEquals(expected, actual);
        assertAardzakelijkrechtAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAardzakelijkrechtAllUpdatablePropertiesEquals(Aardzakelijkrecht expected, Aardzakelijkrecht actual) {
        assertAardzakelijkrechtUpdatableFieldsEquals(expected, actual);
        assertAardzakelijkrechtUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAardzakelijkrechtAutoGeneratedPropertiesEquals(Aardzakelijkrecht expected, Aardzakelijkrecht actual) {
        assertThat(expected)
            .as("Verify Aardzakelijkrecht auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAardzakelijkrechtUpdatableFieldsEquals(Aardzakelijkrecht expected, Aardzakelijkrecht actual) {
        assertThat(expected)
            .as("Verify Aardzakelijkrecht relevant properties")
            .satisfies(
                e -> assertThat(e.getCodeaardzakelijkrecht()).as("check codeaardzakelijkrecht").isEqualTo(actual.getCodeaardzakelijkrecht())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidaardzakelijkrecht())
                        .as("check datumbegingeldigheidaardzakelijkrecht")
                        .isEqualTo(actual.getDatumbegingeldigheidaardzakelijkrecht())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidaardzakelijkrecht())
                        .as("check datumeindegeldigheidaardzakelijkrecht")
                        .isEqualTo(actual.getDatumeindegeldigheidaardzakelijkrecht())
            )
            .satisfies(
                e -> assertThat(e.getNaamaardzakelijkrecht()).as("check naamaardzakelijkrecht").isEqualTo(actual.getNaamaardzakelijkrecht())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAardzakelijkrechtUpdatableRelationshipsEquals(Aardzakelijkrecht expected, Aardzakelijkrecht actual) {}
}
