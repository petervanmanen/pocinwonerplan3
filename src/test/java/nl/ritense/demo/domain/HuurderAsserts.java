package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HuurderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuurderAllPropertiesEquals(Huurder expected, Huurder actual) {
        assertHuurderAutoGeneratedPropertiesEquals(expected, actual);
        assertHuurderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuurderAllUpdatablePropertiesEquals(Huurder expected, Huurder actual) {
        assertHuurderUpdatableFieldsEquals(expected, actual);
        assertHuurderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuurderAutoGeneratedPropertiesEquals(Huurder expected, Huurder actual) {
        assertThat(expected)
            .as("Verify Huurder auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuurderUpdatableFieldsEquals(Huurder expected, Huurder actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHuurderUpdatableRelationshipsEquals(Huurder expected, Huurder actual) {}
}
