package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ArcheologiebesluitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArcheologiebesluitAllPropertiesEquals(Archeologiebesluit expected, Archeologiebesluit actual) {
        assertArcheologiebesluitAutoGeneratedPropertiesEquals(expected, actual);
        assertArcheologiebesluitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArcheologiebesluitAllUpdatablePropertiesEquals(Archeologiebesluit expected, Archeologiebesluit actual) {
        assertArcheologiebesluitUpdatableFieldsEquals(expected, actual);
        assertArcheologiebesluitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArcheologiebesluitAutoGeneratedPropertiesEquals(Archeologiebesluit expected, Archeologiebesluit actual) {
        assertThat(expected)
            .as("Verify Archeologiebesluit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArcheologiebesluitUpdatableFieldsEquals(Archeologiebesluit expected, Archeologiebesluit actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArcheologiebesluitUpdatableRelationshipsEquals(Archeologiebesluit expected, Archeologiebesluit actual) {
        assertThat(expected)
            .as("Verify Archeologiebesluit relationships")
            .satisfies(e -> assertThat(e.getHeeftProject()).as("check heeftProject").isEqualTo(actual.getHeeftProject()));
    }
}
