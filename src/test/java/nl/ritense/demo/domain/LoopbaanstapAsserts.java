package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LoopbaanstapAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoopbaanstapAllPropertiesEquals(Loopbaanstap expected, Loopbaanstap actual) {
        assertLoopbaanstapAutoGeneratedPropertiesEquals(expected, actual);
        assertLoopbaanstapAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoopbaanstapAllUpdatablePropertiesEquals(Loopbaanstap expected, Loopbaanstap actual) {
        assertLoopbaanstapUpdatableFieldsEquals(expected, actual);
        assertLoopbaanstapUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoopbaanstapAutoGeneratedPropertiesEquals(Loopbaanstap expected, Loopbaanstap actual) {
        assertThat(expected)
            .as("Verify Loopbaanstap auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoopbaanstapUpdatableFieldsEquals(Loopbaanstap expected, Loopbaanstap actual) {
        assertThat(expected)
            .as("Verify Loopbaanstap relevant properties")
            .satisfies(e -> assertThat(e.getKlas()).as("check klas").isEqualTo(actual.getKlas()))
            .satisfies(e -> assertThat(e.getOnderwijstype()).as("check onderwijstype").isEqualTo(actual.getOnderwijstype()))
            .satisfies(e -> assertThat(e.getSchooljaar()).as("check schooljaar").isEqualTo(actual.getSchooljaar()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLoopbaanstapUpdatableRelationshipsEquals(Loopbaanstap expected, Loopbaanstap actual) {
        assertThat(expected)
            .as("Verify Loopbaanstap relationships")
            .satisfies(
                e ->
                    assertThat(e.getEmptyOnderwijsloopbaan())
                        .as("check emptyOnderwijsloopbaan")
                        .isEqualTo(actual.getEmptyOnderwijsloopbaan())
            );
    }
}
