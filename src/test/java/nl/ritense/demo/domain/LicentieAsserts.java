package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LicentieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLicentieAllPropertiesEquals(Licentie expected, Licentie actual) {
        assertLicentieAutoGeneratedPropertiesEquals(expected, actual);
        assertLicentieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLicentieAllUpdatablePropertiesEquals(Licentie expected, Licentie actual) {
        assertLicentieUpdatableFieldsEquals(expected, actual);
        assertLicentieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLicentieAutoGeneratedPropertiesEquals(Licentie expected, Licentie actual) {
        assertThat(expected)
            .as("Verify Licentie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLicentieUpdatableFieldsEquals(Licentie expected, Licentie actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLicentieUpdatableRelationshipsEquals(Licentie expected, Licentie actual) {}
}
