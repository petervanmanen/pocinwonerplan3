package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PrecarioAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrecarioAllPropertiesEquals(Precario expected, Precario actual) {
        assertPrecarioAutoGeneratedPropertiesEquals(expected, actual);
        assertPrecarioAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrecarioAllUpdatablePropertiesEquals(Precario expected, Precario actual) {
        assertPrecarioUpdatableFieldsEquals(expected, actual);
        assertPrecarioUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrecarioAutoGeneratedPropertiesEquals(Precario expected, Precario actual) {
        assertThat(expected)
            .as("Verify Precario auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrecarioUpdatableFieldsEquals(Precario expected, Precario actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPrecarioUpdatableRelationshipsEquals(Precario expected, Precario actual) {}
}
