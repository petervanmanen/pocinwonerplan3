package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrdeningsschemaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdeningsschemaAllPropertiesEquals(Ordeningsschema expected, Ordeningsschema actual) {
        assertOrdeningsschemaAutoGeneratedPropertiesEquals(expected, actual);
        assertOrdeningsschemaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdeningsschemaAllUpdatablePropertiesEquals(Ordeningsschema expected, Ordeningsschema actual) {
        assertOrdeningsschemaUpdatableFieldsEquals(expected, actual);
        assertOrdeningsschemaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdeningsschemaAutoGeneratedPropertiesEquals(Ordeningsschema expected, Ordeningsschema actual) {
        assertThat(expected)
            .as("Verify Ordeningsschema auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdeningsschemaUpdatableFieldsEquals(Ordeningsschema expected, Ordeningsschema actual) {
        assertThat(expected)
            .as("Verify Ordeningsschema relevant properties")
            .satisfies(e -> assertThat(e.getNaam()).as("check naam").isEqualTo(actual.getNaam()))
            .satisfies(e -> assertThat(e.getText()).as("check text").isEqualTo(actual.getText()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrdeningsschemaUpdatableRelationshipsEquals(Ordeningsschema expected, Ordeningsschema actual) {
        assertThat(expected)
            .as("Verify Ordeningsschema relationships")
            .satisfies(e -> assertThat(e.getHeeftArchiefstuks()).as("check heeftArchiefstuks").isEqualTo(actual.getHeeftArchiefstuks()));
    }
}
