package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AdresbuitenlandAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresbuitenlandAllPropertiesEquals(Adresbuitenland expected, Adresbuitenland actual) {
        assertAdresbuitenlandAutoGeneratedPropertiesEquals(expected, actual);
        assertAdresbuitenlandAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresbuitenlandAllUpdatablePropertiesEquals(Adresbuitenland expected, Adresbuitenland actual) {
        assertAdresbuitenlandUpdatableFieldsEquals(expected, actual);
        assertAdresbuitenlandUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresbuitenlandAutoGeneratedPropertiesEquals(Adresbuitenland expected, Adresbuitenland actual) {
        assertThat(expected)
            .as("Verify Adresbuitenland auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresbuitenlandUpdatableFieldsEquals(Adresbuitenland expected, Adresbuitenland actual) {
        assertThat(expected)
            .as("Verify Adresbuitenland relevant properties")
            .satisfies(
                e -> assertThat(e.getAdresregelbuitenland1()).as("check adresregelbuitenland1").isEqualTo(actual.getAdresregelbuitenland1())
            )
            .satisfies(
                e -> assertThat(e.getAdresregelbuitenland2()).as("check adresregelbuitenland2").isEqualTo(actual.getAdresregelbuitenland2())
            )
            .satisfies(
                e -> assertThat(e.getAdresregelbuitenland3()).as("check adresregelbuitenland3").isEqualTo(actual.getAdresregelbuitenland3())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumaanvangadresbuitenland())
                        .as("check datumaanvangadresbuitenland")
                        .isEqualTo(actual.getDatumaanvangadresbuitenland())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatuminschrijvinggemeente())
                        .as("check datuminschrijvinggemeente")
                        .isEqualTo(actual.getDatuminschrijvinggemeente())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumvestigingnederland())
                        .as("check datumvestigingnederland")
                        .isEqualTo(actual.getDatumvestigingnederland())
            )
            .satisfies(
                e ->
                    assertThat(e.getGemeentevaninschrijving())
                        .as("check gemeentevaninschrijving")
                        .isEqualTo(actual.getGemeentevaninschrijving())
            )
            .satisfies(
                e -> assertThat(e.getLandadresbuitenland()).as("check landadresbuitenland").isEqualTo(actual.getLandadresbuitenland())
            )
            .satisfies(
                e ->
                    assertThat(e.getLandwaarvandaaningeschreven())
                        .as("check landwaarvandaaningeschreven")
                        .isEqualTo(actual.getLandwaarvandaaningeschreven())
            )
            .satisfies(
                e ->
                    assertThat(e.getOmschrijvingvandeaangifteadreshouding())
                        .as("check omschrijvingvandeaangifteadreshouding")
                        .isEqualTo(actual.getOmschrijvingvandeaangifteadreshouding())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresbuitenlandUpdatableRelationshipsEquals(Adresbuitenland expected, Adresbuitenland actual) {}
}
