package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NederlandsenationaliteitingeschrevenpersoonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNederlandsenationaliteitingeschrevenpersoonAllPropertiesEquals(
        Nederlandsenationaliteitingeschrevenpersoon expected,
        Nederlandsenationaliteitingeschrevenpersoon actual
    ) {
        assertNederlandsenationaliteitingeschrevenpersoonAutoGeneratedPropertiesEquals(expected, actual);
        assertNederlandsenationaliteitingeschrevenpersoonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNederlandsenationaliteitingeschrevenpersoonAllUpdatablePropertiesEquals(
        Nederlandsenationaliteitingeschrevenpersoon expected,
        Nederlandsenationaliteitingeschrevenpersoon actual
    ) {
        assertNederlandsenationaliteitingeschrevenpersoonUpdatableFieldsEquals(expected, actual);
        assertNederlandsenationaliteitingeschrevenpersoonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNederlandsenationaliteitingeschrevenpersoonAutoGeneratedPropertiesEquals(
        Nederlandsenationaliteitingeschrevenpersoon expected,
        Nederlandsenationaliteitingeschrevenpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Nederlandsenationaliteitingeschrevenpersoon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNederlandsenationaliteitingeschrevenpersoonUpdatableFieldsEquals(
        Nederlandsenationaliteitingeschrevenpersoon expected,
        Nederlandsenationaliteitingeschrevenpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Nederlandsenationaliteitingeschrevenpersoon relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getAanduidingbijzondernederlanderschap())
                        .as("check aanduidingbijzondernederlanderschap")
                        .isEqualTo(actual.getAanduidingbijzondernederlanderschap())
            )
            .satisfies(e -> assertThat(e.getNationaliteit()).as("check nationaliteit").isEqualTo(actual.getNationaliteit()))
            .satisfies(
                e ->
                    assertThat(e.getRedenverkrijgingnederlandsenationaliteit())
                        .as("check redenverkrijgingnederlandsenationaliteit")
                        .isEqualTo(actual.getRedenverkrijgingnederlandsenationaliteit())
            )
            .satisfies(
                e ->
                    assertThat(e.getRedenverliesnederlandsenationaliteit())
                        .as("check redenverliesnederlandsenationaliteit")
                        .isEqualTo(actual.getRedenverliesnederlandsenationaliteit())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNederlandsenationaliteitingeschrevenpersoonUpdatableRelationshipsEquals(
        Nederlandsenationaliteitingeschrevenpersoon expected,
        Nederlandsenationaliteitingeschrevenpersoon actual
    ) {}
}
