package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GeweldsincidentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGeweldsincidentAllPropertiesEquals(Geweldsincident expected, Geweldsincident actual) {
        assertGeweldsincidentAutoGeneratedPropertiesEquals(expected, actual);
        assertGeweldsincidentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGeweldsincidentAllUpdatablePropertiesEquals(Geweldsincident expected, Geweldsincident actual) {
        assertGeweldsincidentUpdatableFieldsEquals(expected, actual);
        assertGeweldsincidentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGeweldsincidentAutoGeneratedPropertiesEquals(Geweldsincident expected, Geweldsincident actual) {
        assertThat(expected)
            .as("Verify Geweldsincident auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGeweldsincidentUpdatableFieldsEquals(Geweldsincident expected, Geweldsincident actual) {
        assertThat(expected)
            .as("Verify Geweldsincident relevant properties")
            .satisfies(e -> assertThat(e.getDatum()).as("check datum").isEqualTo(actual.getDatum()))
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGeweldsincidentUpdatableRelationshipsEquals(Geweldsincident expected, Geweldsincident actual) {}
}
