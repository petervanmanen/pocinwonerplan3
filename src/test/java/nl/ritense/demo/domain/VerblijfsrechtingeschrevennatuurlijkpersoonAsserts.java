package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VerblijfsrechtingeschrevennatuurlijkpersoonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerblijfsrechtingeschrevennatuurlijkpersoonAllPropertiesEquals(
        Verblijfsrechtingeschrevennatuurlijkpersoon expected,
        Verblijfsrechtingeschrevennatuurlijkpersoon actual
    ) {
        assertVerblijfsrechtingeschrevennatuurlijkpersoonAutoGeneratedPropertiesEquals(expected, actual);
        assertVerblijfsrechtingeschrevennatuurlijkpersoonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerblijfsrechtingeschrevennatuurlijkpersoonAllUpdatablePropertiesEquals(
        Verblijfsrechtingeschrevennatuurlijkpersoon expected,
        Verblijfsrechtingeschrevennatuurlijkpersoon actual
    ) {
        assertVerblijfsrechtingeschrevennatuurlijkpersoonUpdatableFieldsEquals(expected, actual);
        assertVerblijfsrechtingeschrevennatuurlijkpersoonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerblijfsrechtingeschrevennatuurlijkpersoonAutoGeneratedPropertiesEquals(
        Verblijfsrechtingeschrevennatuurlijkpersoon expected,
        Verblijfsrechtingeschrevennatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Verblijfsrechtingeschrevennatuurlijkpersoon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerblijfsrechtingeschrevennatuurlijkpersoonUpdatableFieldsEquals(
        Verblijfsrechtingeschrevennatuurlijkpersoon expected,
        Verblijfsrechtingeschrevennatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Verblijfsrechtingeschrevennatuurlijkpersoon relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getAanduidingverblijfsrecht())
                        .as("check aanduidingverblijfsrecht")
                        .isEqualTo(actual.getAanduidingverblijfsrecht())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumaanvangverblijfsrecht())
                        .as("check datumaanvangverblijfsrecht")
                        .isEqualTo(actual.getDatumaanvangverblijfsrecht())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatummededelingverblijfsrecht())
                        .as("check datummededelingverblijfsrecht")
                        .isEqualTo(actual.getDatummededelingverblijfsrecht())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumvoorzieneindeverblijfsrecht())
                        .as("check datumvoorzieneindeverblijfsrecht")
                        .isEqualTo(actual.getDatumvoorzieneindeverblijfsrecht())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerblijfsrechtingeschrevennatuurlijkpersoonUpdatableRelationshipsEquals(
        Verblijfsrechtingeschrevennatuurlijkpersoon expected,
        Verblijfsrechtingeschrevennatuurlijkpersoon actual
    ) {}
}
