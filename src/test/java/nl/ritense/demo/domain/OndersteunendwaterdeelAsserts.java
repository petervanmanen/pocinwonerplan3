package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OndersteunendwaterdeelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOndersteunendwaterdeelAllPropertiesEquals(Ondersteunendwaterdeel expected, Ondersteunendwaterdeel actual) {
        assertOndersteunendwaterdeelAutoGeneratedPropertiesEquals(expected, actual);
        assertOndersteunendwaterdeelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOndersteunendwaterdeelAllUpdatablePropertiesEquals(
        Ondersteunendwaterdeel expected,
        Ondersteunendwaterdeel actual
    ) {
        assertOndersteunendwaterdeelUpdatableFieldsEquals(expected, actual);
        assertOndersteunendwaterdeelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOndersteunendwaterdeelAutoGeneratedPropertiesEquals(
        Ondersteunendwaterdeel expected,
        Ondersteunendwaterdeel actual
    ) {
        assertThat(expected)
            .as("Verify Ondersteunendwaterdeel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOndersteunendwaterdeelUpdatableFieldsEquals(Ondersteunendwaterdeel expected, Ondersteunendwaterdeel actual) {
        assertThat(expected)
            .as("Verify Ondersteunendwaterdeel relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidondersteunendwaterdeel())
                        .as("check datumbegingeldigheidondersteunendwaterdeel")
                        .isEqualTo(actual.getDatumbegingeldigheidondersteunendwaterdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidondersteunendwaterdeel())
                        .as("check datumeindegeldigheidondersteunendwaterdeel")
                        .isEqualTo(actual.getDatumeindegeldigheidondersteunendwaterdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getGeometrieondersteunendwaterdeel())
                        .as("check geometrieondersteunendwaterdeel")
                        .isEqualTo(actual.getGeometrieondersteunendwaterdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getIdentificatieondersteunendwaterdeel())
                        .as("check identificatieondersteunendwaterdeel")
                        .isEqualTo(actual.getIdentificatieondersteunendwaterdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getPlustypeondersteunendwaterdeel())
                        .as("check plustypeondersteunendwaterdeel")
                        .isEqualTo(actual.getPlustypeondersteunendwaterdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getRelatievehoogteliggingondersteunendwaterdeel())
                        .as("check relatievehoogteliggingondersteunendwaterdeel")
                        .isEqualTo(actual.getRelatievehoogteliggingondersteunendwaterdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getStatusondersteunendwaterdeel())
                        .as("check statusondersteunendwaterdeel")
                        .isEqualTo(actual.getStatusondersteunendwaterdeel())
            )
            .satisfies(
                e ->
                    assertThat(e.getTypeondersteunendwaterdeel())
                        .as("check typeondersteunendwaterdeel")
                        .isEqualTo(actual.getTypeondersteunendwaterdeel())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOndersteunendwaterdeelUpdatableRelationshipsEquals(
        Ondersteunendwaterdeel expected,
        Ondersteunendwaterdeel actual
    ) {}
}
