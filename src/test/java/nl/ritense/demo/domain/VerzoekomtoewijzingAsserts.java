package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VerzoekomtoewijzingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerzoekomtoewijzingAllPropertiesEquals(Verzoekomtoewijzing expected, Verzoekomtoewijzing actual) {
        assertVerzoekomtoewijzingAutoGeneratedPropertiesEquals(expected, actual);
        assertVerzoekomtoewijzingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerzoekomtoewijzingAllUpdatablePropertiesEquals(Verzoekomtoewijzing expected, Verzoekomtoewijzing actual) {
        assertVerzoekomtoewijzingUpdatableFieldsEquals(expected, actual);
        assertVerzoekomtoewijzingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerzoekomtoewijzingAutoGeneratedPropertiesEquals(Verzoekomtoewijzing expected, Verzoekomtoewijzing actual) {
        assertThat(expected)
            .as("Verify Verzoekomtoewijzing auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerzoekomtoewijzingUpdatableFieldsEquals(Verzoekomtoewijzing expected, Verzoekomtoewijzing actual) {
        assertThat(expected)
            .as("Verify Verzoekomtoewijzing relevant properties")
            .satisfies(e -> assertThat(e.getBeschikkingsnummer()).as("check beschikkingsnummer").isEqualTo(actual.getBeschikkingsnummer()))
            .satisfies(e -> assertThat(e.getCommentaar()).as("check commentaar").isEqualTo(actual.getCommentaar()))
            .satisfies(
                e -> assertThat(e.getDatumeindetoewijzing()).as("check datumeindetoewijzing").isEqualTo(actual.getDatumeindetoewijzing())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumingangbeschikking())
                        .as("check datumingangbeschikking")
                        .isEqualTo(actual.getDatumingangbeschikking())
            )
            .satisfies(
                e -> assertThat(e.getDatumingangtoewijzing()).as("check datumingangtoewijzing").isEqualTo(actual.getDatumingangtoewijzing())
            )
            .satisfies(e -> assertThat(e.getDatumontvangst()).as("check datumontvangst").isEqualTo(actual.getDatumontvangst()))
            .satisfies(e -> assertThat(e.getEenheid()).as("check eenheid").isEqualTo(actual.getEenheid()))
            .satisfies(e -> assertThat(e.getFrequentie()).as("check frequentie").isEqualTo(actual.getFrequentie()))
            .satisfies(e -> assertThat(e.getRaamcontract()).as("check raamcontract").isEqualTo(actual.getRaamcontract()))
            .satisfies(
                e -> assertThat(e.getReferentieaanbieder()).as("check referentieaanbieder").isEqualTo(actual.getReferentieaanbieder())
            )
            .satisfies(e -> assertThat(e.getSoortverwijzer()).as("check soortverwijzer").isEqualTo(actual.getSoortverwijzer()))
            .satisfies(e -> assertThat(e.getVerwijzer()).as("check verwijzer").isEqualTo(actual.getVerwijzer()))
            .satisfies(e -> assertThat(e.getVolume()).as("check volume").isEqualTo(actual.getVolume()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVerzoekomtoewijzingUpdatableRelationshipsEquals(Verzoekomtoewijzing expected, Verzoekomtoewijzing actual) {}
}
