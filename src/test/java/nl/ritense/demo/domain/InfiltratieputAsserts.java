package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InfiltratieputAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInfiltratieputAllPropertiesEquals(Infiltratieput expected, Infiltratieput actual) {
        assertInfiltratieputAutoGeneratedPropertiesEquals(expected, actual);
        assertInfiltratieputAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInfiltratieputAllUpdatablePropertiesEquals(Infiltratieput expected, Infiltratieput actual) {
        assertInfiltratieputUpdatableFieldsEquals(expected, actual);
        assertInfiltratieputUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInfiltratieputAutoGeneratedPropertiesEquals(Infiltratieput expected, Infiltratieput actual) {
        assertThat(expected)
            .as("Verify Infiltratieput auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInfiltratieputUpdatableFieldsEquals(Infiltratieput expected, Infiltratieput actual) {
        assertThat(expected)
            .as("Verify Infiltratieput relevant properties")
            .satisfies(e -> assertThat(e.getPorositeit()).as("check porositeit").isEqualTo(actual.getPorositeit()))
            .satisfies(e -> assertThat(e.getRisicogebied()).as("check risicogebied").isEqualTo(actual.getRisicogebied()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInfiltratieputUpdatableRelationshipsEquals(Infiltratieput expected, Infiltratieput actual) {}
}
