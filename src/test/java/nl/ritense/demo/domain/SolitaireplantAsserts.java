package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SolitaireplantAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSolitaireplantAllPropertiesEquals(Solitaireplant expected, Solitaireplant actual) {
        assertSolitaireplantAutoGeneratedPropertiesEquals(expected, actual);
        assertSolitaireplantAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSolitaireplantAllUpdatablePropertiesEquals(Solitaireplant expected, Solitaireplant actual) {
        assertSolitaireplantUpdatableFieldsEquals(expected, actual);
        assertSolitaireplantUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSolitaireplantAutoGeneratedPropertiesEquals(Solitaireplant expected, Solitaireplant actual) {
        assertThat(expected)
            .as("Verify Solitaireplant auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSolitaireplantUpdatableFieldsEquals(Solitaireplant expected, Solitaireplant actual) {
        assertThat(expected)
            .as("Verify Solitaireplant relevant properties")
            .satisfies(e -> assertThat(e.getHoogte()).as("check hoogte").isEqualTo(actual.getHoogte()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSolitaireplantUpdatableRelationshipsEquals(Solitaireplant expected, Solitaireplant actual) {}
}
