package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NaamaanschrijvingnatuurlijkpersoonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamaanschrijvingnatuurlijkpersoonAllPropertiesEquals(
        Naamaanschrijvingnatuurlijkpersoon expected,
        Naamaanschrijvingnatuurlijkpersoon actual
    ) {
        assertNaamaanschrijvingnatuurlijkpersoonAutoGeneratedPropertiesEquals(expected, actual);
        assertNaamaanschrijvingnatuurlijkpersoonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamaanschrijvingnatuurlijkpersoonAllUpdatablePropertiesEquals(
        Naamaanschrijvingnatuurlijkpersoon expected,
        Naamaanschrijvingnatuurlijkpersoon actual
    ) {
        assertNaamaanschrijvingnatuurlijkpersoonUpdatableFieldsEquals(expected, actual);
        assertNaamaanschrijvingnatuurlijkpersoonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamaanschrijvingnatuurlijkpersoonAutoGeneratedPropertiesEquals(
        Naamaanschrijvingnatuurlijkpersoon expected,
        Naamaanschrijvingnatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Naamaanschrijvingnatuurlijkpersoon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamaanschrijvingnatuurlijkpersoonUpdatableFieldsEquals(
        Naamaanschrijvingnatuurlijkpersoon expected,
        Naamaanschrijvingnatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Naamaanschrijvingnatuurlijkpersoon relevant properties")
            .satisfies(
                e -> assertThat(e.getAanhefaanschrijving()).as("check aanhefaanschrijving").isEqualTo(actual.getAanhefaanschrijving())
            )
            .satisfies(
                e ->
                    assertThat(e.getGeslachtsnaamaanschrijving())
                        .as("check geslachtsnaamaanschrijving")
                        .isEqualTo(actual.getGeslachtsnaamaanschrijving())
            )
            .satisfies(
                e ->
                    assertThat(e.getVoorlettersaanschrijving())
                        .as("check voorlettersaanschrijving")
                        .isEqualTo(actual.getVoorlettersaanschrijving())
            )
            .satisfies(
                e ->
                    assertThat(e.getVoornamenaanschrijving())
                        .as("check voornamenaanschrijving")
                        .isEqualTo(actual.getVoornamenaanschrijving())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamaanschrijvingnatuurlijkpersoonUpdatableRelationshipsEquals(
        Naamaanschrijvingnatuurlijkpersoon expected,
        Naamaanschrijvingnatuurlijkpersoon actual
    ) {}
}
