package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NationaliteitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNationaliteitAllPropertiesEquals(Nationaliteit expected, Nationaliteit actual) {
        assertNationaliteitAutoGeneratedPropertiesEquals(expected, actual);
        assertNationaliteitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNationaliteitAllUpdatablePropertiesEquals(Nationaliteit expected, Nationaliteit actual) {
        assertNationaliteitUpdatableFieldsEquals(expected, actual);
        assertNationaliteitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNationaliteitAutoGeneratedPropertiesEquals(Nationaliteit expected, Nationaliteit actual) {
        assertThat(expected)
            .as("Verify Nationaliteit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNationaliteitUpdatableFieldsEquals(Nationaliteit expected, Nationaliteit actual) {
        assertThat(expected)
            .as("Verify Nationaliteit relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getBuitenlandsenationaliteit())
                        .as("check buitenlandsenationaliteit")
                        .isEqualTo(actual.getBuitenlandsenationaliteit())
            )
            .satisfies(
                e -> assertThat(e.getDatumeindegeldigheid()).as("check datumeindegeldigheid").isEqualTo(actual.getDatumeindegeldigheid())
            )
            .satisfies(
                e -> assertThat(e.getDatuminganggeldigheid()).as("check datuminganggeldigheid").isEqualTo(actual.getDatuminganggeldigheid())
            )
            .satisfies(e -> assertThat(e.getDatumopnamen()).as("check datumopnamen").isEqualTo(actual.getDatumopnamen()))
            .satisfies(
                e ->
                    assertThat(e.getDatumverliesnationaliteit())
                        .as("check datumverliesnationaliteit")
                        .isEqualTo(actual.getDatumverliesnationaliteit())
            )
            .satisfies(e -> assertThat(e.getNationaliteit()).as("check nationaliteit").isEqualTo(actual.getNationaliteit()))
            .satisfies(e -> assertThat(e.getNationaliteitcode()).as("check nationaliteitcode").isEqualTo(actual.getNationaliteitcode()))
            .satisfies(
                e ->
                    assertThat(e.getRedenverkrijgingnederlandsenationaliteit())
                        .as("check redenverkrijgingnederlandsenationaliteit")
                        .isEqualTo(actual.getRedenverkrijgingnederlandsenationaliteit())
            )
            .satisfies(
                e ->
                    assertThat(e.getRedenverliesnederlandsenationaliteit())
                        .as("check redenverliesnederlandsenationaliteit")
                        .isEqualTo(actual.getRedenverliesnederlandsenationaliteit())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNationaliteitUpdatableRelationshipsEquals(Nationaliteit expected, Nationaliteit actual) {}
}
