package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NaamnatuurlijkpersoonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamnatuurlijkpersoonAllPropertiesEquals(Naamnatuurlijkpersoon expected, Naamnatuurlijkpersoon actual) {
        assertNaamnatuurlijkpersoonAutoGeneratedPropertiesEquals(expected, actual);
        assertNaamnatuurlijkpersoonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamnatuurlijkpersoonAllUpdatablePropertiesEquals(
        Naamnatuurlijkpersoon expected,
        Naamnatuurlijkpersoon actual
    ) {
        assertNaamnatuurlijkpersoonUpdatableFieldsEquals(expected, actual);
        assertNaamnatuurlijkpersoonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamnatuurlijkpersoonAutoGeneratedPropertiesEquals(
        Naamnatuurlijkpersoon expected,
        Naamnatuurlijkpersoon actual
    ) {
        assertThat(expected)
            .as("Verify Naamnatuurlijkpersoon auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamnatuurlijkpersoonUpdatableFieldsEquals(Naamnatuurlijkpersoon expected, Naamnatuurlijkpersoon actual) {
        assertThat(expected)
            .as("Verify Naamnatuurlijkpersoon relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getAdellijketitelofpredikaat())
                        .as("check adellijketitelofpredikaat")
                        .isEqualTo(actual.getAdellijketitelofpredikaat())
            )
            .satisfies(e -> assertThat(e.getGeslachtsnaam()).as("check geslachtsnaam").isEqualTo(actual.getGeslachtsnaam()))
            .satisfies(e -> assertThat(e.getVoornamen()).as("check voornamen").isEqualTo(actual.getVoornamen()))
            .satisfies(
                e ->
                    assertThat(e.getVoorvoegselgeslachtsnaam())
                        .as("check voorvoegselgeslachtsnaam")
                        .isEqualTo(actual.getVoorvoegselgeslachtsnaam())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNaamnatuurlijkpersoonUpdatableRelationshipsEquals(
        Naamnatuurlijkpersoon expected,
        Naamnatuurlijkpersoon actual
    ) {}
}
