package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TegenprestatieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTegenprestatieAllPropertiesEquals(Tegenprestatie expected, Tegenprestatie actual) {
        assertTegenprestatieAutoGeneratedPropertiesEquals(expected, actual);
        assertTegenprestatieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTegenprestatieAllUpdatablePropertiesEquals(Tegenprestatie expected, Tegenprestatie actual) {
        assertTegenprestatieUpdatableFieldsEquals(expected, actual);
        assertTegenprestatieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTegenprestatieAutoGeneratedPropertiesEquals(Tegenprestatie expected, Tegenprestatie actual) {
        assertThat(expected)
            .as("Verify Tegenprestatie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTegenprestatieUpdatableFieldsEquals(Tegenprestatie expected, Tegenprestatie actual) {
        assertThat(expected)
            .as("Verify Tegenprestatie relevant properties")
            .satisfies(e -> assertThat(e.getDatumeinde()).as("check datumeinde").isEqualTo(actual.getDatumeinde()))
            .satisfies(e -> assertThat(e.getDatumstart()).as("check datumstart").isEqualTo(actual.getDatumstart()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTegenprestatieUpdatableRelationshipsEquals(Tegenprestatie expected, Tegenprestatie actual) {
        assertThat(expected)
            .as("Verify Tegenprestatie relationships")
            .satisfies(
                e ->
                    assertThat(e.getLeverttegenprestatieClient())
                        .as("check leverttegenprestatieClient")
                        .isEqualTo(actual.getLeverttegenprestatieClient())
            );
    }
}
