package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AcademischetitelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcademischetitelAllPropertiesEquals(Academischetitel expected, Academischetitel actual) {
        assertAcademischetitelAutoGeneratedPropertiesEquals(expected, actual);
        assertAcademischetitelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcademischetitelAllUpdatablePropertiesEquals(Academischetitel expected, Academischetitel actual) {
        assertAcademischetitelUpdatableFieldsEquals(expected, actual);
        assertAcademischetitelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcademischetitelAutoGeneratedPropertiesEquals(Academischetitel expected, Academischetitel actual) {
        assertThat(expected)
            .as("Verify Academischetitel auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcademischetitelUpdatableFieldsEquals(Academischetitel expected, Academischetitel actual) {
        assertThat(expected)
            .as("Verify Academischetitel relevant properties")
            .satisfies(
                e -> assertThat(e.getCodeacademischetitel()).as("check codeacademischetitel").isEqualTo(actual.getCodeacademischetitel())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidtitel())
                        .as("check datumbegingeldigheidtitel")
                        .isEqualTo(actual.getDatumbegingeldigheidtitel())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidtitel())
                        .as("check datumeindegeldigheidtitel")
                        .isEqualTo(actual.getDatumeindegeldigheidtitel())
            )
            .satisfies(
                e ->
                    assertThat(e.getOmschrijvingacademischetitel())
                        .as("check omschrijvingacademischetitel")
                        .isEqualTo(actual.getOmschrijvingacademischetitel())
            )
            .satisfies(
                e ->
                    assertThat(e.getPositieacademischetiteltovnaam())
                        .as("check positieacademischetiteltovnaam")
                        .isEqualTo(actual.getPositieacademischetiteltovnaam())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcademischetitelUpdatableRelationshipsEquals(Academischetitel expected, Academischetitel actual) {}
}
