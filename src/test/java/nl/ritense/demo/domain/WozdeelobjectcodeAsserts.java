package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WozdeelobjectcodeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWozdeelobjectcodeAllPropertiesEquals(Wozdeelobjectcode expected, Wozdeelobjectcode actual) {
        assertWozdeelobjectcodeAutoGeneratedPropertiesEquals(expected, actual);
        assertWozdeelobjectcodeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWozdeelobjectcodeAllUpdatablePropertiesEquals(Wozdeelobjectcode expected, Wozdeelobjectcode actual) {
        assertWozdeelobjectcodeUpdatableFieldsEquals(expected, actual);
        assertWozdeelobjectcodeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWozdeelobjectcodeAutoGeneratedPropertiesEquals(Wozdeelobjectcode expected, Wozdeelobjectcode actual) {
        assertThat(expected)
            .as("Verify Wozdeelobjectcode auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWozdeelobjectcodeUpdatableFieldsEquals(Wozdeelobjectcode expected, Wozdeelobjectcode actual) {
        assertThat(expected)
            .as("Verify Wozdeelobjectcode relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheiddeelojectcode())
                        .as("check datumbegingeldigheiddeelojectcode")
                        .isEqualTo(actual.getDatumbegingeldigheiddeelojectcode())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheiddeelobjectcode())
                        .as("check datumeindegeldigheiddeelobjectcode")
                        .isEqualTo(actual.getDatumeindegeldigheiddeelobjectcode())
            )
            .satisfies(e -> assertThat(e.getDeelobjectcode()).as("check deelobjectcode").isEqualTo(actual.getDeelobjectcode()))
            .satisfies(e -> assertThat(e.getNaamdeelobjectcode()).as("check naamdeelobjectcode").isEqualTo(actual.getNaamdeelobjectcode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWozdeelobjectcodeUpdatableRelationshipsEquals(Wozdeelobjectcode expected, Wozdeelobjectcode actual) {}
}
