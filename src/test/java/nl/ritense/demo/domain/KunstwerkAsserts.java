package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class KunstwerkAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKunstwerkAllPropertiesEquals(Kunstwerk expected, Kunstwerk actual) {
        assertKunstwerkAutoGeneratedPropertiesEquals(expected, actual);
        assertKunstwerkAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKunstwerkAllUpdatablePropertiesEquals(Kunstwerk expected, Kunstwerk actual) {
        assertKunstwerkUpdatableFieldsEquals(expected, actual);
        assertKunstwerkUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKunstwerkAutoGeneratedPropertiesEquals(Kunstwerk expected, Kunstwerk actual) {
        assertThat(expected)
            .as("Verify Kunstwerk auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKunstwerkUpdatableFieldsEquals(Kunstwerk expected, Kunstwerk actual) {
        assertThat(expected)
            .as("Verify Kunstwerk relevant properties")
            .satisfies(e -> assertThat(e.getAanleghoogte()).as("check aanleghoogte").isEqualTo(actual.getAanleghoogte()))
            .satisfies(
                e ->
                    assertThat(e.getAntigraffitivoorziening())
                        .as("check antigraffitivoorziening")
                        .isEqualTo(actual.getAntigraffitivoorziening())
            )
            .satisfies(e -> assertThat(e.getBereikbaarheid()).as("check bereikbaarheid").isEqualTo(actual.getBereikbaarheid()))
            .satisfies(e -> assertThat(e.getBreedte()).as("check breedte").isEqualTo(actual.getBreedte()))
            .satisfies(e -> assertThat(e.getConstructietype()).as("check constructietype").isEqualTo(actual.getConstructietype()))
            .satisfies(e -> assertThat(e.getGewicht()).as("check gewicht").isEqualTo(actual.getGewicht()))
            .satisfies(e -> assertThat(e.getHoogte()).as("check hoogte").isEqualTo(actual.getHoogte()))
            .satisfies(e -> assertThat(e.getInstallateur()).as("check installateur").isEqualTo(actual.getInstallateur()))
            .satisfies(e -> assertThat(e.getJaarconserveren()).as("check jaarconserveren").isEqualTo(actual.getJaarconserveren()))
            .satisfies(
                e ->
                    assertThat(e.getJaaronderhouduitgevoerd())
                        .as("check jaaronderhouduitgevoerd")
                        .isEqualTo(actual.getJaaronderhouduitgevoerd())
            )
            .satisfies(e -> assertThat(e.getJaarrenovatie()).as("check jaarrenovatie").isEqualTo(actual.getJaarrenovatie()))
            .satisfies(e -> assertThat(e.getJaarvervanging()).as("check jaarvervanging").isEqualTo(actual.getJaarvervanging()))
            .satisfies(e -> assertThat(e.getKilometreringbegin()).as("check kilometreringbegin").isEqualTo(actual.getKilometreringbegin()))
            .satisfies(e -> assertThat(e.getKilometreringeinde()).as("check kilometreringeinde").isEqualTo(actual.getKilometreringeinde()))
            .satisfies(e -> assertThat(e.getKleur()).as("check kleur").isEqualTo(actual.getKleur()))
            .satisfies(
                e ->
                    assertThat(e.getKunstwerkbereikbaarheidplus())
                        .as("check kunstwerkbereikbaarheidplus")
                        .isEqualTo(actual.getKunstwerkbereikbaarheidplus())
            )
            .satisfies(e -> assertThat(e.getKunstwerkmateriaal()).as("check kunstwerkmateriaal").isEqualTo(actual.getKunstwerkmateriaal()))
            .satisfies(
                e ->
                    assertThat(e.getKwaliteitsniveauactueel())
                        .as("check kwaliteitsniveauactueel")
                        .isEqualTo(actual.getKwaliteitsniveauactueel())
            )
            .satisfies(
                e ->
                    assertThat(e.getKwaliteitsniveaugewenst())
                        .as("check kwaliteitsniveaugewenst")
                        .isEqualTo(actual.getKwaliteitsniveaugewenst())
            )
            .satisfies(e -> assertThat(e.getLengte()).as("check lengte").isEqualTo(actual.getLengte()))
            .satisfies(e -> assertThat(e.getLeverancier()).as("check leverancier").isEqualTo(actual.getLeverancier()))
            .satisfies(e -> assertThat(e.getLooprichel()).as("check looprichel").isEqualTo(actual.getLooprichel()))
            .satisfies(
                e -> assertThat(e.getMinimumconditiescore()).as("check minimumconditiescore").isEqualTo(actual.getMinimumconditiescore())
            )
            .satisfies(e -> assertThat(e.getMonument()).as("check monument").isEqualTo(actual.getMonument()))
            .satisfies(e -> assertThat(e.getMonumentnummer()).as("check monumentnummer").isEqualTo(actual.getMonumentnummer()))
            .satisfies(e -> assertThat(e.getEobjectnaam()).as("check eobjectnaam").isEqualTo(actual.getEobjectnaam()))
            .satisfies(e -> assertThat(e.getEobjectnummer()).as("check eobjectnummer").isEqualTo(actual.getEobjectnummer()))
            .satisfies(e -> assertThat(e.getOnderhoudsregime()).as("check onderhoudsregime").isEqualTo(actual.getOnderhoudsregime()))
            .satisfies(e -> assertThat(e.getOppervlakte()).as("check oppervlakte").isEqualTo(actual.getOppervlakte()))
            .satisfies(e -> assertThat(e.getOrientatie()).as("check orientatie").isEqualTo(actual.getOrientatie()))
            .satisfies(
                e -> assertThat(e.getTechnischelevensduur()).as("check technischelevensduur").isEqualTo(actual.getTechnischelevensduur())
            )
            .satisfies(e -> assertThat(e.getTypefundering()).as("check typefundering").isEqualTo(actual.getTypefundering()))
            .satisfies(e -> assertThat(e.getTypemonument()).as("check typemonument").isEqualTo(actual.getTypemonument()))
            .satisfies(e -> assertThat(e.getVervangingswaarde()).as("check vervangingswaarde").isEqualTo(actual.getVervangingswaarde()))
            .satisfies(e -> assertThat(e.getWegnummer()).as("check wegnummer").isEqualTo(actual.getWegnummer()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKunstwerkUpdatableRelationshipsEquals(Kunstwerk expected, Kunstwerk actual) {}
}
