package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OverigbouwwerkAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOverigbouwwerkAllPropertiesEquals(Overigbouwwerk expected, Overigbouwwerk actual) {
        assertOverigbouwwerkAutoGeneratedPropertiesEquals(expected, actual);
        assertOverigbouwwerkAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOverigbouwwerkAllUpdatablePropertiesEquals(Overigbouwwerk expected, Overigbouwwerk actual) {
        assertOverigbouwwerkUpdatableFieldsEquals(expected, actual);
        assertOverigbouwwerkUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOverigbouwwerkAutoGeneratedPropertiesEquals(Overigbouwwerk expected, Overigbouwwerk actual) {
        assertThat(expected)
            .as("Verify Overigbouwwerk auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOverigbouwwerkUpdatableFieldsEquals(Overigbouwwerk expected, Overigbouwwerk actual) {
        assertThat(expected)
            .as("Verify Overigbouwwerk relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidoverigbouwwerk())
                        .as("check datumbegingeldigheidoverigbouwwerk")
                        .isEqualTo(actual.getDatumbegingeldigheidoverigbouwwerk())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidoverigbouwwerk())
                        .as("check datumeindegeldigheidoverigbouwwerk")
                        .isEqualTo(actual.getDatumeindegeldigheidoverigbouwwerk())
            )
            .satisfies(
                e ->
                    assertThat(e.getGeometrieoverigbouwwerk())
                        .as("check geometrieoverigbouwwerk")
                        .isEqualTo(actual.getGeometrieoverigbouwwerk())
            )
            .satisfies(
                e ->
                    assertThat(e.getIdentificatieoverigbouwwerk())
                        .as("check identificatieoverigbouwwerk")
                        .isEqualTo(actual.getIdentificatieoverigbouwwerk())
            )
            .satisfies(
                e ->
                    assertThat(e.getLod0geometrieoverigbouwwerk())
                        .as("check lod0geometrieoverigbouwwerk")
                        .isEqualTo(actual.getLod0geometrieoverigbouwwerk())
            )
            .satisfies(
                e ->
                    assertThat(e.getLod1geometrieoverigbouwwerk())
                        .as("check lod1geometrieoverigbouwwerk")
                        .isEqualTo(actual.getLod1geometrieoverigbouwwerk())
            )
            .satisfies(
                e ->
                    assertThat(e.getLod2geometrieoverigbouwwerk())
                        .as("check lod2geometrieoverigbouwwerk")
                        .isEqualTo(actual.getLod2geometrieoverigbouwwerk())
            )
            .satisfies(
                e ->
                    assertThat(e.getLod3geometrieoverigbouwwerk())
                        .as("check lod3geometrieoverigbouwwerk")
                        .isEqualTo(actual.getLod3geometrieoverigbouwwerk())
            )
            .satisfies(
                e ->
                    assertThat(e.getRelatievehoogteliggingoverigbouwwerk())
                        .as("check relatievehoogteliggingoverigbouwwerk")
                        .isEqualTo(actual.getRelatievehoogteliggingoverigbouwwerk())
            )
            .satisfies(
                e -> assertThat(e.getStatusoverigbouwwerk()).as("check statusoverigbouwwerk").isEqualTo(actual.getStatusoverigbouwwerk())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOverigbouwwerkUpdatableRelationshipsEquals(Overigbouwwerk expected, Overigbouwwerk actual) {}
}
