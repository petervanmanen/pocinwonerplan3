package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BehandelingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBehandelingAllPropertiesEquals(Behandeling expected, Behandeling actual) {
        assertBehandelingAutoGeneratedPropertiesEquals(expected, actual);
        assertBehandelingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBehandelingAllUpdatablePropertiesEquals(Behandeling expected, Behandeling actual) {
        assertBehandelingUpdatableFieldsEquals(expected, actual);
        assertBehandelingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBehandelingAutoGeneratedPropertiesEquals(Behandeling expected, Behandeling actual) {
        assertThat(expected)
            .as("Verify Behandeling auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBehandelingUpdatableFieldsEquals(Behandeling expected, Behandeling actual) {
        assertThat(expected)
            .as("Verify Behandeling relevant properties")
            .satisfies(e -> assertThat(e.getDatumeinde()).as("check datumeinde").isEqualTo(actual.getDatumeinde()))
            .satisfies(e -> assertThat(e.getDatumstart()).as("check datumstart").isEqualTo(actual.getDatumstart()))
            .satisfies(e -> assertThat(e.getToelichting()).as("check toelichting").isEqualTo(actual.getToelichting()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBehandelingUpdatableRelationshipsEquals(Behandeling expected, Behandeling actual) {
        assertThat(expected)
            .as("Verify Behandeling relationships")
            .satisfies(
                e ->
                    assertThat(e.getIsvansoortBehandelsoort())
                        .as("check isvansoortBehandelsoort")
                        .isEqualTo(actual.getIsvansoortBehandelsoort())
            );
    }
}
