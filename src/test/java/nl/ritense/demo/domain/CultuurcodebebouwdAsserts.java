package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CultuurcodebebouwdAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultuurcodebebouwdAllPropertiesEquals(Cultuurcodebebouwd expected, Cultuurcodebebouwd actual) {
        assertCultuurcodebebouwdAutoGeneratedPropertiesEquals(expected, actual);
        assertCultuurcodebebouwdAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultuurcodebebouwdAllUpdatablePropertiesEquals(Cultuurcodebebouwd expected, Cultuurcodebebouwd actual) {
        assertCultuurcodebebouwdUpdatableFieldsEquals(expected, actual);
        assertCultuurcodebebouwdUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultuurcodebebouwdAutoGeneratedPropertiesEquals(Cultuurcodebebouwd expected, Cultuurcodebebouwd actual) {
        assertThat(expected)
            .as("Verify Cultuurcodebebouwd auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultuurcodebebouwdUpdatableFieldsEquals(Cultuurcodebebouwd expected, Cultuurcodebebouwd actual) {
        assertThat(expected)
            .as("Verify Cultuurcodebebouwd relevant properties")
            .satisfies(e -> assertThat(e.getCultuurcodebebouwd()).as("check cultuurcodebebouwd").isEqualTo(actual.getCultuurcodebebouwd()))
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidcultuurcodebebouwd())
                        .as("check datumbegingeldigheidcultuurcodebebouwd")
                        .isEqualTo(actual.getDatumbegingeldigheidcultuurcodebebouwd())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidcultuurcodebebouwd())
                        .as("check datumeindegeldigheidcultuurcodebebouwd")
                        .isEqualTo(actual.getDatumeindegeldigheidcultuurcodebebouwd())
            )
            .satisfies(
                e ->
                    assertThat(e.getNaamcultuurcodebebouwd())
                        .as("check naamcultuurcodebebouwd")
                        .isEqualTo(actual.getNaamcultuurcodebebouwd())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCultuurcodebebouwdUpdatableRelationshipsEquals(Cultuurcodebebouwd expected, Cultuurcodebebouwd actual) {}
}
