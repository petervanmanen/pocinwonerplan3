package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OfferteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOfferteAllPropertiesEquals(Offerte expected, Offerte actual) {
        assertOfferteAutoGeneratedPropertiesEquals(expected, actual);
        assertOfferteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOfferteAllUpdatablePropertiesEquals(Offerte expected, Offerte actual) {
        assertOfferteUpdatableFieldsEquals(expected, actual);
        assertOfferteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOfferteAutoGeneratedPropertiesEquals(Offerte expected, Offerte actual) {
        assertThat(expected)
            .as("Verify Offerte auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOfferteUpdatableFieldsEquals(Offerte expected, Offerte actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOfferteUpdatableRelationshipsEquals(Offerte expected, Offerte actual) {
        assertThat(expected)
            .as("Verify Offerte relationships")
            .satisfies(
                e -> assertThat(e.getBetreftAanbesteding()).as("check betreftAanbesteding").isEqualTo(actual.getBetreftAanbesteding())
            )
            .satisfies(
                e ->
                    assertThat(e.getIngedienddoorLeverancier())
                        .as("check ingedienddoorLeverancier")
                        .isEqualTo(actual.getIngedienddoorLeverancier())
            );
    }
}
