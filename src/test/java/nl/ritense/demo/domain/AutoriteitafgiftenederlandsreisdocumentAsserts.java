package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AutoriteitafgiftenederlandsreisdocumentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutoriteitafgiftenederlandsreisdocumentAllPropertiesEquals(
        Autoriteitafgiftenederlandsreisdocument expected,
        Autoriteitafgiftenederlandsreisdocument actual
    ) {
        assertAutoriteitafgiftenederlandsreisdocumentAutoGeneratedPropertiesEquals(expected, actual);
        assertAutoriteitafgiftenederlandsreisdocumentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutoriteitafgiftenederlandsreisdocumentAllUpdatablePropertiesEquals(
        Autoriteitafgiftenederlandsreisdocument expected,
        Autoriteitafgiftenederlandsreisdocument actual
    ) {
        assertAutoriteitafgiftenederlandsreisdocumentUpdatableFieldsEquals(expected, actual);
        assertAutoriteitafgiftenederlandsreisdocumentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutoriteitafgiftenederlandsreisdocumentAutoGeneratedPropertiesEquals(
        Autoriteitafgiftenederlandsreisdocument expected,
        Autoriteitafgiftenederlandsreisdocument actual
    ) {
        assertThat(expected)
            .as("Verify Autoriteitafgiftenederlandsreisdocument auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutoriteitafgiftenederlandsreisdocumentUpdatableFieldsEquals(
        Autoriteitafgiftenederlandsreisdocument expected,
        Autoriteitafgiftenederlandsreisdocument actual
    ) {
        assertThat(expected)
            .as("Verify Autoriteitafgiftenederlandsreisdocument relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidautoriteitvanafgifte())
                        .as("check datumbegingeldigheidautoriteitvanafgifte")
                        .isEqualTo(actual.getDatumbegingeldigheidautoriteitvanafgifte())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidautoriteitvanafgifte())
                        .as("check datumeindegeldigheidautoriteitvanafgifte")
                        .isEqualTo(actual.getDatumeindegeldigheidautoriteitvanafgifte())
            )
            .satisfies(e -> assertThat(e.getOmschrijving()).as("check omschrijving").isEqualTo(actual.getOmschrijving()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutoriteitafgiftenederlandsreisdocumentUpdatableRelationshipsEquals(
        Autoriteitafgiftenederlandsreisdocument expected,
        Autoriteitafgiftenederlandsreisdocument actual
    ) {}
}
