package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FormulierinhuurAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormulierinhuurAllPropertiesEquals(Formulierinhuur expected, Formulierinhuur actual) {
        assertFormulierinhuurAutoGeneratedPropertiesEquals(expected, actual);
        assertFormulierinhuurAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormulierinhuurAllUpdatablePropertiesEquals(Formulierinhuur expected, Formulierinhuur actual) {
        assertFormulierinhuurUpdatableFieldsEquals(expected, actual);
        assertFormulierinhuurUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormulierinhuurAutoGeneratedPropertiesEquals(Formulierinhuur expected, Formulierinhuur actual) {
        assertThat(expected)
            .as("Verify Formulierinhuur auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormulierinhuurUpdatableFieldsEquals(Formulierinhuur expected, Formulierinhuur actual) {
        assertThat(expected)
            .as("Verify Formulierinhuur relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getAkkoordfinancieeladviseur())
                        .as("check akkoordfinancieeladviseur")
                        .isEqualTo(actual.getAkkoordfinancieeladviseur())
            )
            .satisfies(e -> assertThat(e.getAkkoordhradviseur()).as("check akkoordhradviseur").isEqualTo(actual.getAkkoordhradviseur()))
            .satisfies(e -> assertThat(e.getDatuminganginhuur()).as("check datuminganginhuur").isEqualTo(actual.getDatuminganginhuur()))
            .satisfies(e -> assertThat(e.getFunctienaaminhuur()).as("check functienaaminhuur").isEqualTo(actual.getFunctienaaminhuur()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormulierinhuurUpdatableRelationshipsEquals(Formulierinhuur expected, Formulierinhuur actual) {}
}
