package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class KponstaanuitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKponstaanuitAllPropertiesEquals(Kponstaanuit expected, Kponstaanuit actual) {
        assertKponstaanuitAutoGeneratedPropertiesEquals(expected, actual);
        assertKponstaanuitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKponstaanuitAllUpdatablePropertiesEquals(Kponstaanuit expected, Kponstaanuit actual) {
        assertKponstaanuitUpdatableFieldsEquals(expected, actual);
        assertKponstaanuitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKponstaanuitAutoGeneratedPropertiesEquals(Kponstaanuit expected, Kponstaanuit actual) {
        assertThat(expected)
            .as("Verify Kponstaanuit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKponstaanuitUpdatableFieldsEquals(Kponstaanuit expected, Kponstaanuit actual) {
        assertThat(expected)
            .as("Verify Kponstaanuit relevant properties")
            .satisfies(
                e -> assertThat(e.getDatumbegingeldigheid()).as("check datumbegingeldigheid").isEqualTo(actual.getDatumbegingeldigheid())
            )
            .satisfies(
                e -> assertThat(e.getDatumeindegeldigheid()).as("check datumeindegeldigheid").isEqualTo(actual.getDatumeindegeldigheid())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertKponstaanuitUpdatableRelationshipsEquals(Kponstaanuit expected, Kponstaanuit actual) {}
}
