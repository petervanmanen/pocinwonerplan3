package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AdresseerbaarobjectAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresseerbaarobjectAllPropertiesEquals(Adresseerbaarobject expected, Adresseerbaarobject actual) {
        assertAdresseerbaarobjectAutoGeneratedPropertiesEquals(expected, actual);
        assertAdresseerbaarobjectAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresseerbaarobjectAllUpdatablePropertiesEquals(Adresseerbaarobject expected, Adresseerbaarobject actual) {
        assertAdresseerbaarobjectUpdatableFieldsEquals(expected, actual);
        assertAdresseerbaarobjectUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresseerbaarobjectAutoGeneratedPropertiesEquals(Adresseerbaarobject expected, Adresseerbaarobject actual) {
        assertThat(expected)
            .as("Verify Adresseerbaarobject auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresseerbaarobjectUpdatableFieldsEquals(Adresseerbaarobject expected, Adresseerbaarobject actual) {
        assertThat(expected)
            .as("Verify Adresseerbaarobject relevant properties")
            .satisfies(e -> assertThat(e.getIdentificatie()).as("check identificatie").isEqualTo(actual.getIdentificatie()))
            .satisfies(
                e ->
                    assertThat(e.getTypeadresseerbaarobject())
                        .as("check typeadresseerbaarobject")
                        .isEqualTo(actual.getTypeadresseerbaarobject())
            )
            .satisfies(e -> assertThat(e.getVersie()).as("check versie").isEqualTo(actual.getVersie()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresseerbaarobjectUpdatableRelationshipsEquals(Adresseerbaarobject expected, Adresseerbaarobject actual) {}
}
