package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DocumenttypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumenttypeAllPropertiesEquals(Documenttype expected, Documenttype actual) {
        assertDocumenttypeAutoGeneratedPropertiesEquals(expected, actual);
        assertDocumenttypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumenttypeAllUpdatablePropertiesEquals(Documenttype expected, Documenttype actual) {
        assertDocumenttypeUpdatableFieldsEquals(expected, actual);
        assertDocumenttypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumenttypeAutoGeneratedPropertiesEquals(Documenttype expected, Documenttype actual) {
        assertThat(expected)
            .as("Verify Documenttype auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumenttypeUpdatableFieldsEquals(Documenttype expected, Documenttype actual) {
        assertThat(expected)
            .as("Verify Documenttype relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheiddocumenttype())
                        .as("check datumbegingeldigheiddocumenttype")
                        .isEqualTo(actual.getDatumbegingeldigheiddocumenttype())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheiddocumenttype())
                        .as("check datumeindegeldigheiddocumenttype")
                        .isEqualTo(actual.getDatumeindegeldigheiddocumenttype())
            )
            .satisfies(e -> assertThat(e.getDocumentcategorie()).as("check documentcategorie").isEqualTo(actual.getDocumentcategorie()))
            .satisfies(
                e ->
                    assertThat(e.getDocumenttypeomschrijving())
                        .as("check documenttypeomschrijving")
                        .isEqualTo(actual.getDocumenttypeomschrijving())
            )
            .satisfies(
                e ->
                    assertThat(e.getDocumenttypeomschrijvinggeneriek())
                        .as("check documenttypeomschrijvinggeneriek")
                        .isEqualTo(actual.getDocumenttypeomschrijvinggeneriek())
            )
            .satisfies(
                e -> assertThat(e.getDocumenttypetrefwoord()).as("check documenttypetrefwoord").isEqualTo(actual.getDocumenttypetrefwoord())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumenttypeUpdatableRelationshipsEquals(Documenttype expected, Documenttype actual) {}
}
