package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WinkelvoorraaditemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWinkelvoorraaditemAllPropertiesEquals(Winkelvoorraaditem expected, Winkelvoorraaditem actual) {
        assertWinkelvoorraaditemAutoGeneratedPropertiesEquals(expected, actual);
        assertWinkelvoorraaditemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWinkelvoorraaditemAllUpdatablePropertiesEquals(Winkelvoorraaditem expected, Winkelvoorraaditem actual) {
        assertWinkelvoorraaditemUpdatableFieldsEquals(expected, actual);
        assertWinkelvoorraaditemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWinkelvoorraaditemAutoGeneratedPropertiesEquals(Winkelvoorraaditem expected, Winkelvoorraaditem actual) {
        assertThat(expected)
            .as("Verify Winkelvoorraaditem auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWinkelvoorraaditemUpdatableFieldsEquals(Winkelvoorraaditem expected, Winkelvoorraaditem actual) {
        assertThat(expected)
            .as("Verify Winkelvoorraaditem relevant properties")
            .satisfies(e -> assertThat(e.getAantal()).as("check aantal").isEqualTo(actual.getAantal()))
            .satisfies(e -> assertThat(e.getAantalinbestelling()).as("check aantalinbestelling").isEqualTo(actual.getAantalinbestelling()))
            .satisfies(
                e ->
                    assertThat(e.getDatumleveringbestelling())
                        .as("check datumleveringbestelling")
                        .isEqualTo(actual.getDatumleveringbestelling())
            )
            .satisfies(e -> assertThat(e.getLocatie()).as("check locatie").isEqualTo(actual.getLocatie()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWinkelvoorraaditemUpdatableRelationshipsEquals(Winkelvoorraaditem expected, Winkelvoorraaditem actual) {
        assertThat(expected)
            .as("Verify Winkelvoorraaditem relationships")
            .satisfies(e -> assertThat(e.getBetreftProduct()).as("check betreftProduct").isEqualTo(actual.getBetreftProduct()));
    }
}
