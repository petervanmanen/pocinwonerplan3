package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DrainageputAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDrainageputAllPropertiesEquals(Drainageput expected, Drainageput actual) {
        assertDrainageputAutoGeneratedPropertiesEquals(expected, actual);
        assertDrainageputAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDrainageputAllUpdatablePropertiesEquals(Drainageput expected, Drainageput actual) {
        assertDrainageputUpdatableFieldsEquals(expected, actual);
        assertDrainageputUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDrainageputAutoGeneratedPropertiesEquals(Drainageput expected, Drainageput actual) {
        assertThat(expected)
            .as("Verify Drainageput auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDrainageputUpdatableFieldsEquals(Drainageput expected, Drainageput actual) {
        assertThat(expected)
            .as("Verify Drainageput relevant properties")
            .satisfies(e -> assertThat(e.getRisicogebied()).as("check risicogebied").isEqualTo(actual.getRisicogebied()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDrainageputUpdatableRelationshipsEquals(Drainageput expected, Drainageput actual) {}
}
