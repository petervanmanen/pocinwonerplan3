package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IngezeteneAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIngezeteneAllPropertiesEquals(Ingezetene expected, Ingezetene actual) {
        assertIngezeteneAutoGeneratedPropertiesEquals(expected, actual);
        assertIngezeteneAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIngezeteneAllUpdatablePropertiesEquals(Ingezetene expected, Ingezetene actual) {
        assertIngezeteneUpdatableFieldsEquals(expected, actual);
        assertIngezeteneUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIngezeteneAutoGeneratedPropertiesEquals(Ingezetene expected, Ingezetene actual) {
        assertThat(expected)
            .as("Verify Ingezetene auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIngezeteneUpdatableFieldsEquals(Ingezetene expected, Ingezetene actual) {
        assertThat(expected)
            .as("Verify Ingezetene relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getAanduidingeuropeeskiesrecht())
                        .as("check aanduidingeuropeeskiesrecht")
                        .isEqualTo(actual.getAanduidingeuropeeskiesrecht())
            )
            .satisfies(
                e ->
                    assertThat(e.getAanduidinguitgeslotenkiesrecht())
                        .as("check aanduidinguitgeslotenkiesrecht")
                        .isEqualTo(actual.getAanduidinguitgeslotenkiesrecht())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumverkrijgingverblijfstitel())
                        .as("check datumverkrijgingverblijfstitel")
                        .isEqualTo(actual.getDatumverkrijgingverblijfstitel())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumverliesverblijfstitel())
                        .as("check datumverliesverblijfstitel")
                        .isEqualTo(actual.getDatumverliesverblijfstitel())
            )
            .satisfies(
                e -> assertThat(e.getIndicatieblokkering()).as("check indicatieblokkering").isEqualTo(actual.getIndicatieblokkering())
            )
            .satisfies(
                e ->
                    assertThat(e.getIndicatiecurateleregister())
                        .as("check indicatiecurateleregister")
                        .isEqualTo(actual.getIndicatiecurateleregister())
            )
            .satisfies(
                e ->
                    assertThat(e.getIndicatiegezagminderjarige())
                        .as("check indicatiegezagminderjarige")
                        .isEqualTo(actual.getIndicatiegezagminderjarige())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIngezeteneUpdatableRelationshipsEquals(Ingezetene expected, Ingezetene actual) {
        assertThat(expected)
            .as("Verify Ingezetene relationships")
            .satisfies(
                e -> assertThat(e.getHeeftVerblijfstitel()).as("check heeftVerblijfstitel").isEqualTo(actual.getHeeftVerblijfstitel())
            );
    }
}
