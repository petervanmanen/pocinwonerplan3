package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InrichtingselementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInrichtingselementAllPropertiesEquals(Inrichtingselement expected, Inrichtingselement actual) {
        assertInrichtingselementAutoGeneratedPropertiesEquals(expected, actual);
        assertInrichtingselementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInrichtingselementAllUpdatablePropertiesEquals(Inrichtingselement expected, Inrichtingselement actual) {
        assertInrichtingselementUpdatableFieldsEquals(expected, actual);
        assertInrichtingselementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInrichtingselementAutoGeneratedPropertiesEquals(Inrichtingselement expected, Inrichtingselement actual) {
        assertThat(expected)
            .as("Verify Inrichtingselement auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInrichtingselementUpdatableFieldsEquals(Inrichtingselement expected, Inrichtingselement actual) {
        assertThat(expected)
            .as("Verify Inrichtingselement relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidinrichtingselement())
                        .as("check datumbegingeldigheidinrichtingselement")
                        .isEqualTo(actual.getDatumbegingeldigheidinrichtingselement())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidinrichtingselement())
                        .as("check datumeindegeldigheidinrichtingselement")
                        .isEqualTo(actual.getDatumeindegeldigheidinrichtingselement())
            )
            .satisfies(
                e ->
                    assertThat(e.getGeometrieinrichtingselement())
                        .as("check geometrieinrichtingselement")
                        .isEqualTo(actual.getGeometrieinrichtingselement())
            )
            .satisfies(
                e ->
                    assertThat(e.getIdentificatieinrichtingselement())
                        .as("check identificatieinrichtingselement")
                        .isEqualTo(actual.getIdentificatieinrichtingselement())
            )
            .satisfies(
                e ->
                    assertThat(e.getLod0geometrieinrichtingselement())
                        .as("check lod0geometrieinrichtingselement")
                        .isEqualTo(actual.getLod0geometrieinrichtingselement())
            )
            .satisfies(
                e ->
                    assertThat(e.getPlustypeinrichtingselement())
                        .as("check plustypeinrichtingselement")
                        .isEqualTo(actual.getPlustypeinrichtingselement())
            )
            .satisfies(
                e ->
                    assertThat(e.getRelatievehoogteligginginrichtingselement())
                        .as("check relatievehoogteligginginrichtingselement")
                        .isEqualTo(actual.getRelatievehoogteligginginrichtingselement())
            )
            .satisfies(
                e ->
                    assertThat(e.getStatusinrichtingselement())
                        .as("check statusinrichtingselement")
                        .isEqualTo(actual.getStatusinrichtingselement())
            )
            .satisfies(
                e ->
                    assertThat(e.getTypeinrichtingselement())
                        .as("check typeinrichtingselement")
                        .isEqualTo(actual.getTypeinrichtingselement())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInrichtingselementUpdatableRelationshipsEquals(Inrichtingselement expected, Inrichtingselement actual) {}
}
