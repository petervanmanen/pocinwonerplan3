package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SoortwozobjectAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortwozobjectAllPropertiesEquals(Soortwozobject expected, Soortwozobject actual) {
        assertSoortwozobjectAutoGeneratedPropertiesEquals(expected, actual);
        assertSoortwozobjectAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortwozobjectAllUpdatablePropertiesEquals(Soortwozobject expected, Soortwozobject actual) {
        assertSoortwozobjectUpdatableFieldsEquals(expected, actual);
        assertSoortwozobjectUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortwozobjectAutoGeneratedPropertiesEquals(Soortwozobject expected, Soortwozobject actual) {
        assertThat(expected)
            .as("Verify Soortwozobject auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortwozobjectUpdatableFieldsEquals(Soortwozobject expected, Soortwozobject actual) {
        assertThat(expected)
            .as("Verify Soortwozobject relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumbegingeldigheidsoortobjectcode())
                        .as("check datumbegingeldigheidsoortobjectcode")
                        .isEqualTo(actual.getDatumbegingeldigheidsoortobjectcode())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidsoortobjectcode())
                        .as("check datumeindegeldigheidsoortobjectcode")
                        .isEqualTo(actual.getDatumeindegeldigheidsoortobjectcode())
            )
            .satisfies(
                e -> assertThat(e.getNaamsoortobjectcode()).as("check naamsoortobjectcode").isEqualTo(actual.getNaamsoortobjectcode())
            )
            .satisfies(
                e ->
                    assertThat(e.getOpmerkingensoortobjectcode())
                        .as("check opmerkingensoortobjectcode")
                        .isEqualTo(actual.getOpmerkingensoortobjectcode())
            )
            .satisfies(e -> assertThat(e.getSoortobjectcode()).as("check soortobjectcode").isEqualTo(actual.getSoortobjectcode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSoortwozobjectUpdatableRelationshipsEquals(Soortwozobject expected, Soortwozobject actual) {}
}
