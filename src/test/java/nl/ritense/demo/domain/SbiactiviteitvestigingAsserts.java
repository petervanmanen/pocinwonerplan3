package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SbiactiviteitvestigingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSbiactiviteitvestigingAllPropertiesEquals(Sbiactiviteitvestiging expected, Sbiactiviteitvestiging actual) {
        assertSbiactiviteitvestigingAutoGeneratedPropertiesEquals(expected, actual);
        assertSbiactiviteitvestigingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSbiactiviteitvestigingAllUpdatablePropertiesEquals(
        Sbiactiviteitvestiging expected,
        Sbiactiviteitvestiging actual
    ) {
        assertSbiactiviteitvestigingUpdatableFieldsEquals(expected, actual);
        assertSbiactiviteitvestigingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSbiactiviteitvestigingAutoGeneratedPropertiesEquals(
        Sbiactiviteitvestiging expected,
        Sbiactiviteitvestiging actual
    ) {
        assertThat(expected)
            .as("Verify Sbiactiviteitvestiging auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSbiactiviteitvestigingUpdatableFieldsEquals(Sbiactiviteitvestiging expected, Sbiactiviteitvestiging actual) {
        assertThat(expected)
            .as("Verify Sbiactiviteitvestiging relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getIndicatiehoofdactiviteit())
                        .as("check indicatiehoofdactiviteit")
                        .isEqualTo(actual.getIndicatiehoofdactiviteit())
            )
            .satisfies(e -> assertThat(e.getSbicode()).as("check sbicode").isEqualTo(actual.getSbicode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSbiactiviteitvestigingUpdatableRelationshipsEquals(
        Sbiactiviteitvestiging expected,
        Sbiactiviteitvestiging actual
    ) {}
}
