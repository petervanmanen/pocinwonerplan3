package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PasAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPasAllPropertiesEquals(Pas expected, Pas actual) {
        assertPasAutoGeneratedPropertiesEquals(expected, actual);
        assertPasAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPasAllUpdatablePropertiesEquals(Pas expected, Pas actual) {
        assertPasUpdatableFieldsEquals(expected, actual);
        assertPasUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPasAutoGeneratedPropertiesEquals(Pas expected, Pas actual) {
        assertThat(expected)
            .as("Verify Pas auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPasUpdatableFieldsEquals(Pas expected, Pas actual) {
        assertThat(expected)
            .as("Verify Pas relevant properties")
            .satisfies(e -> assertThat(e.getAdresaanduiding()).as("check adresaanduiding").isEqualTo(actual.getAdresaanduiding()))
            .satisfies(e -> assertThat(e.getPasnummer()).as("check pasnummer").isEqualTo(actual.getPasnummer()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPasUpdatableRelationshipsEquals(Pas expected, Pas actual) {
        assertThat(expected)
            .as("Verify Pas relationships")
            .satisfies(
                e ->
                    assertThat(e.getGeldigvoorMilieustraats())
                        .as("check geldigvoorMilieustraats")
                        .isEqualTo(actual.getGeldigvoorMilieustraats())
            );
    }
}
