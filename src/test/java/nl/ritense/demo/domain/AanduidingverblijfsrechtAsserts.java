package nl.ritense.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AanduidingverblijfsrechtAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanduidingverblijfsrechtAllPropertiesEquals(
        Aanduidingverblijfsrecht expected,
        Aanduidingverblijfsrecht actual
    ) {
        assertAanduidingverblijfsrechtAutoGeneratedPropertiesEquals(expected, actual);
        assertAanduidingverblijfsrechtAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanduidingverblijfsrechtAllUpdatablePropertiesEquals(
        Aanduidingverblijfsrecht expected,
        Aanduidingverblijfsrecht actual
    ) {
        assertAanduidingverblijfsrechtUpdatableFieldsEquals(expected, actual);
        assertAanduidingverblijfsrechtUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanduidingverblijfsrechtAutoGeneratedPropertiesEquals(
        Aanduidingverblijfsrecht expected,
        Aanduidingverblijfsrecht actual
    ) {
        assertThat(expected)
            .as("Verify Aanduidingverblijfsrecht auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanduidingverblijfsrechtUpdatableFieldsEquals(
        Aanduidingverblijfsrecht expected,
        Aanduidingverblijfsrecht actual
    ) {
        assertThat(expected)
            .as("Verify Aanduidingverblijfsrecht relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDatumaanvanggeldigheidverblijfsrecht())
                        .as("check datumaanvanggeldigheidverblijfsrecht")
                        .isEqualTo(actual.getDatumaanvanggeldigheidverblijfsrecht())
            )
            .satisfies(
                e ->
                    assertThat(e.getDatumeindegeldigheidverblijfsrecht())
                        .as("check datumeindegeldigheidverblijfsrecht")
                        .isEqualTo(actual.getDatumeindegeldigheidverblijfsrecht())
            )
            .satisfies(
                e -> assertThat(e.getVerblijfsrechtnummer()).as("check verblijfsrechtnummer").isEqualTo(actual.getVerblijfsrechtnummer())
            )
            .satisfies(
                e ->
                    assertThat(e.getVerblijfsrechtomschrijving())
                        .as("check verblijfsrechtomschrijving")
                        .isEqualTo(actual.getVerblijfsrechtomschrijving())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAanduidingverblijfsrechtUpdatableRelationshipsEquals(
        Aanduidingverblijfsrecht expected,
        Aanduidingverblijfsrecht actual
    ) {}
}
